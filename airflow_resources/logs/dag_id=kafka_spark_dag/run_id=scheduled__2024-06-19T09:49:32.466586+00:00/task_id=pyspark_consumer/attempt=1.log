[2024-06-19T09:54:41.037+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer scheduled__2024-06-19T09:49:32.466586+00:00 [queued]>
[2024-06-19T09:54:41.056+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer scheduled__2024-06-19T09:49:32.466586+00:00 [queued]>
[2024-06-19T09:54:41.057+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 2
[2024-06-19T09:54:41.071+0000] {taskinstance.py:1382} INFO - Executing <Task(DockerOperator): pyspark_consumer> on 2024-06-19 09:49:32.466586+00:00
[2024-06-19T09:54:41.076+0000] {standard_task_runner.py:57} INFO - Started process 416 to run task
[2024-06-19T09:54:41.080+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'kafka_spark_dag', 'pyspark_consumer', 'scheduled__2024-06-19T09:49:32.466586+00:00', '--job-id', '153', '--raw', '--subdir', 'DAGS_FOLDER/dag_kafka_spark.py', '--cfg-path', '/tmp/tmp_8pjhtx0']
[2024-06-19T09:54:41.081+0000] {standard_task_runner.py:85} INFO - Job 153: Subtask pyspark_consumer
[2024-06-19T09:54:41.115+0000] {task_command.py:416} INFO - Running <TaskInstance: kafka_spark_dag.pyspark_consumer scheduled__2024-06-19T09:49:32.466586+00:00 [running]> on host 2ad9230613d5
[2024-06-19T09:54:41.176+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='kafka_spark_dag' AIRFLOW_CTX_TASK_ID='pyspark_consumer' AIRFLOW_CTX_EXECUTION_DATE='2024-06-19T09:49:32.466586+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2024-06-19T09:49:32.466586+00:00'
[2024-06-19T09:54:41.216+0000] {docker.py:343} INFO - Starting docker container from image rappel-conso/spark:latest
[2024-06-19T09:54:41.272+0000] {docker.py:351} WARNING - Using remote engine or docker-in-docker and mounting temporary volume from host is not supported. Falling back to `mount_tmp_dir=False` mode. You can set `mount_tmp_dir` parameter to False to disable mounting and remove the warning
[2024-06-19T09:54:41.798+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m09:54:41.79 [0m[38;5;2mINFO [0m ==>
[2024-06-19T09:54:41.803+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m09:54:41.79 [0m[38;5;2mINFO [0m ==> [1mWelcome to the Bitnami spark container[0m
[2024-06-19T09:54:41.810+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m09:54:41.79 [0m[38;5;2mINFO [0m ==> Subscribe to project updates by watching [1mhttps://github.com/bitnami/containers[0m
[2024-06-19T09:54:41.812+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m09:54:41.80 [0m[38;5;2mINFO [0m ==> Submit issues and feature requests at [1mhttps://github.com/bitnami/containers/issues[0m
[2024-06-19T09:54:41.812+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m09:54:41.80 [0m[38;5;2mINFO [0m ==>
[2024-06-19T09:54:41.846+0000] {docker.py:413} INFO - 
[2024-06-19T09:54:43.456+0000] {docker.py:413} INFO - :: loading settings :: url = jar:file:/opt/bitnami/spark/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml
[2024-06-19T09:54:43.496+0000] {docker.py:413} INFO - Ivy Default Cache set to: /opt/bitnami/spark/.ivy2/cache
The jars for the packages stored in: /opt/bitnami/spark/.ivy2/jars
[2024-06-19T09:54:43.507+0000] {docker.py:413} INFO - org.postgresql#postgresql added as a dependency
org.apache.spark#spark-sql-kafka-0-10_2.12 added as a dependency
[2024-06-19T09:54:43.508+0000] {docker.py:413} INFO - :: resolving dependencies :: org.apache.spark#spark-submit-parent-74abefa8-5878-41a5-a184-c1fcddec8f47;1.0
	confs: [default]
[2024-06-19T09:54:45.142+0000] {docker.py:413} INFO - found org.postgresql#postgresql;42.5.4 in central
[2024-06-19T09:54:45.616+0000] {docker.py:413} INFO - found org.checkerframework#checker-qual;3.5.0 in central
[2024-06-19T09:54:48.332+0000] {docker.py:413} INFO - found org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 in central
[2024-06-19T09:54:48.915+0000] {docker.py:413} INFO - found org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 in central
[2024-06-19T09:54:49.377+0000] {docker.py:413} INFO - found org.apache.kafka#kafka-clients;3.4.1 in central
[2024-06-19T09:54:49.836+0000] {docker.py:413} INFO - found org.lz4#lz4-java;1.8.0 in central
[2024-06-19T09:54:50.331+0000] {docker.py:413} INFO - found org.xerial.snappy#snappy-java;1.1.10.3 in central
[2024-06-19T09:54:51.556+0000] {docker.py:413} INFO - found org.slf4j#slf4j-api;2.0.7 in central
[2024-06-19T09:54:53.658+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-runtime;3.3.4 in central
[2024-06-19T09:54:54.230+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-api;3.3.4 in central
[2024-06-19T09:54:56.969+0000] {docker.py:413} INFO - found commons-logging#commons-logging;1.1.3 in central
[2024-06-19T09:54:57.433+0000] {docker.py:413} INFO - found com.google.code.findbugs#jsr305;3.0.0 in central
[2024-06-19T09:55:02.990+0000] {docker.py:413} INFO - found org.apache.commons#commons-pool2;2.11.1 in central
[2024-06-19T09:55:03.236+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/postgresql/postgresql/42.5.4/postgresql-42.5.4.jar ...
[2024-06-19T09:55:04.036+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.postgresql#postgresql;42.5.4!postgresql.jar (1022ms)
[2024-06-19T09:55:04.263+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-sql-kafka-0-10_2.12/3.5.0/spark-sql-kafka-0-10_2.12-3.5.0.jar ...
[2024-06-19T09:55:04.529+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0!spark-sql-kafka-0-10_2.12.jar (492ms)
[2024-06-19T09:55:04.753+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar ...
[2024-06-19T09:55:05.004+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.checkerframework#checker-qual;3.5.0!checker-qual.jar (471ms)
[2024-06-19T09:55:05.236+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-token-provider-kafka-0-10_2.12/3.5.0/spark-token-provider-kafka-0-10_2.12-3.5.0.jar ...
[2024-06-19T09:55:05.467+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0!spark-token-provider-kafka-0-10_2.12.jar (460ms)
[2024-06-19T09:55:05.700+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/kafka/kafka-clients/3.4.1/kafka-clients-3.4.1.jar ...
[2024-06-19T09:55:06.713+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.kafka#kafka-clients;3.4.1!kafka-clients.jar (1247ms)
[2024-06-19T09:55:06.938+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar ...
[2024-06-19T09:55:07.182+0000] {docker.py:413} INFO - [SUCCESSFUL ] com.google.code.findbugs#jsr305;3.0.0!jsr305.jar (465ms)
[2024-06-19T09:55:07.418+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/commons/commons-pool2/2.11.1/commons-pool2-2.11.1.jar ...
[2024-06-19T09:55:07.651+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.commons#commons-pool2;2.11.1!commons-pool2.jar (470ms)
[2024-06-19T09:55:07.878+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-runtime/3.3.4/hadoop-client-runtime-3.3.4.jar ...
[2024-06-19T09:55:13.285+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-runtime;3.3.4!hadoop-client-runtime.jar (5629ms)
[2024-06-19T09:55:13.513+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar ...
[2024-06-19T09:55:13.848+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.lz4#lz4-java;1.8.0!lz4-java.jar (563ms)
[2024-06-19T09:55:14.078+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.10.3/snappy-java-1.1.10.3.jar ...
[2024-06-19T09:55:14.702+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.xerial.snappy#snappy-java;1.1.10.3!snappy-java.jar(bundle) (853ms)
[2024-06-19T09:55:14.933+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar ...
[2024-06-19T09:55:15.170+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.slf4j#slf4j-api;2.0.7!slf4j-api.jar (466ms)
[2024-06-19T09:55:15.395+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-api/3.3.4/hadoop-client-api-3.3.4.jar ...
[2024-06-19T09:55:19.246+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-api;3.3.4!hadoop-client-api.jar (4072ms)
[2024-06-19T09:55:19.469+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar ...
[2024-06-19T09:55:19.705+0000] {docker.py:413} INFO - [SUCCESSFUL ] commons-logging#commons-logging;1.1.3!commons-logging.jar (460ms)
[2024-06-19T09:55:19.706+0000] {docker.py:413} INFO - :: resolution report :: resolve 19514ms :: artifacts dl 16695ms
[2024-06-19T09:55:19.709+0000] {docker.py:413} INFO - :: modules in use:
	com.google.code.findbugs#jsr305;3.0.0 from central in [default]
	commons-logging#commons-logging;1.1.3 from central in [default]
	org.apache.commons#commons-pool2;2.11.1 from central in [default]
[2024-06-19T09:55:19.710+0000] {docker.py:413} INFO - org.apache.hadoop#hadoop-client-api;3.3.4 from central in [default]
	org.apache.hadoop#hadoop-client-runtime;3.3.4 from central in [default]
	org.apache.kafka#kafka-clients;3.4.1 from central in [default]
	org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 from central in [default]
[2024-06-19T09:55:19.711+0000] {docker.py:413} INFO - org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 from central in [default]
	org.checkerframework#checker-qual;3.5.0 from central in [default]
	org.lz4#lz4-java;1.8.0 from central in [default]
	org.postgresql#postgresql;42.5.4 from central in [default]
	org.slf4j#slf4j-api;2.0.7 from central in [default]
	org.xerial.snappy#snappy-java;1.1.10.3 from central in [default]
	---------------------------------------------------------------------
	|                  |            modules            ||   artifacts   |
	|       conf       | number| search|dwnlded|evicted|| number|dwnlded|
	---------------------------------------------------------------------
	|      default     |   13  |   13  |   13  |   0   ||   13  |   13  |
	---------------------------------------------------------------------
[2024-06-19T09:55:19.732+0000] {docker.py:413} INFO - :: retrieving :: org.apache.spark#spark-submit-parent-74abefa8-5878-41a5-a184-c1fcddec8f47
[2024-06-19T09:55:19.733+0000] {docker.py:413} INFO - confs: [default]
[2024-06-19T09:55:20.214+0000] {docker.py:413} INFO - 13 artifacts copied, 0 already retrieved (58001kB/481ms)
[2024-06-19T09:55:20.556+0000] {docker.py:413} INFO - 24/06/19 09:55:20 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2024-06-19T09:55:21.660+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO SparkContext: Running Spark version 3.5.0
[2024-06-19T09:55:21.662+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO SparkContext: OS info Linux, 6.6.12-linuxkit, aarch64
[2024-06-19T09:55:21.665+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO SparkContext: Java version 17.0.10
[2024-06-19T09:55:21.692+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO ResourceUtils: ==============================================================
24/06/19 09:55:21 INFO ResourceUtils: No custom resources configured for spark.driver.
24/06/19 09:55:21 INFO ResourceUtils: ==============================================================
[2024-06-19T09:55:21.694+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO SparkContext: Submitted application: PostgreSQL Connection with PySpark
[2024-06-19T09:55:21.728+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2024-06-19T09:55:21.755+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO ResourceProfile: Limiting resource is cpu
[2024-06-19T09:55:21.758+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2024-06-19T09:55:21.822+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO SecurityManager: Changing view acls to: spark
[2024-06-19T09:55:21.825+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO SecurityManager: Changing modify acls to: spark
[2024-06-19T09:55:21.829+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO SecurityManager: Changing view acls groups to:
[2024-06-19T09:55:21.831+0000] {docker.py:413} INFO - 24/06/19 09:55:21 INFO SecurityManager: Changing modify acls groups to: 
24/06/19 09:55:21 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: spark; groups with view permissions: EMPTY; users with modify permissions: spark; groups with modify permissions: EMPTY
[2024-06-19T09:55:22.022+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Successfully started service 'sparkDriver' on port 41671.
[2024-06-19T09:55:22.040+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkEnv: Registering MapOutputTracker
[2024-06-19T09:55:22.070+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkEnv: Registering BlockManagerMaster
[2024-06-19T09:55:22.086+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2024-06-19T09:55:22.087+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2024-06-19T09:55:22.101+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2024-06-19T09:55:22.141+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-1bdf6d1a-0594-4aab-a11d-b3069a57b9ca
[2024-06-19T09:55:22.154+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB
[2024-06-19T09:55:22.173+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkEnv: Registering OutputCommitCoordinator
[2024-06-19T09:55:22.305+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI
[2024-06-19T09:55:22.354+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2024-06-19T09:55:22.377+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar at spark://localhost:41671/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1718790921651
[2024-06-19T09:55:22.378+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at spark://localhost:41671/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.379+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at spark://localhost:41671/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.379+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at spark://localhost:41671/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.379+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at spark://localhost:41671/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1718790921651
[2024-06-19T09:55:22.380+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at spark://localhost:41671/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.380+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at spark://localhost:41671/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1718790921651
[2024-06-19T09:55:22.380+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at spark://localhost:41671/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1718790921651
[2024-06-19T09:55:22.381+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at spark://localhost:41671/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.381+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at spark://localhost:41671/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1718790921651
[2024-06-19T09:55:22.381+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at spark://localhost:41671/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1718790921651
24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at spark://localhost:41671/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1718790921651
[2024-06-19T09:55:22.382+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at spark://localhost:41671/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1718790921651
[2024-06-19T09:55:22.382+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1718790921651
[2024-06-19T09:55:22.383+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.postgresql_postgresql-42.5.4.jar
[2024-06-19T09:55:22.395+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.397+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:55:22.399+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1718790921651
24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.checkerframework_checker-qual-3.5.0.jar
[2024-06-19T09:55:22.402+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1718790921651
24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:55:22.408+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1718790921651
[2024-06-19T09:55:22.408+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-06-19T09:55:22.413+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.414+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-06-19T09:55:22.416+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1718790921651
24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.commons_commons-pool2-2.11.1.jar
[2024-06-19T09:55:22.423+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1718790921651
24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-06-19T09:55:22.561+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1718790921651
24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.lz4_lz4-java-1.8.0.jar
[2024-06-19T09:55:22.567+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1718790921651
[2024-06-19T09:55:22.568+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-06-19T09:55:22.580+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1718790921651
[2024-06-19T09:55:22.581+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.slf4j_slf4j-api-2.0.7.jar
[2024-06-19T09:55:22.585+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1718790921651
[2024-06-19T09:55:22.586+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-06-19T09:55:22.646+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1718790921651
[2024-06-19T09:55:22.647+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/commons-logging_commons-logging-1.1.3.jar
[2024-06-19T09:55:22.697+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Starting executor ID driver on host localhost
[2024-06-19T09:55:22.697+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: OS info Linux, 6.6.12-linuxkit, aarch64
[2024-06-19T09:55:22.699+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Java version 17.0.10
[2024-06-19T09:55:22.701+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): ''
[2024-06-19T09:55:22.702+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@3ea9a876 for default.
[2024-06-19T09:55:22.711+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.721+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:55:22.726+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1718790921651
[2024-06-19T09:55:22.737+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-06-19T09:55:22.740+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1718790921651
[2024-06-19T09:55:22.741+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.commons_commons-pool2-2.11.1.jar
[2024-06-19T09:55:22.743+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1718790921651
[2024-06-19T09:55:22.744+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.postgresql_postgresql-42.5.4.jar
[2024-06-19T09:55:22.747+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1718790921651
[2024-06-19T09:55:22.748+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.slf4j_slf4j-api-2.0.7.jar
[2024-06-19T09:55:22.750+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1718790921651
[2024-06-19T09:55:22.752+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-06-19T09:55:22.755+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.755+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-06-19T09:55:22.757+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.758+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.lz4_lz4-java-1.8.0.jar
[2024-06-19T09:55:22.760+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.761+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:55:22.763+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1718790921651
[2024-06-19T09:55:22.770+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-06-19T09:55:22.773+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1718790921651
[2024-06-19T09:55:22.773+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/commons-logging_commons-logging-1.1.3.jar
[2024-06-19T09:55:22.775+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.775+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.checkerframework_checker-qual-3.5.0.jar
[2024-06-19T09:55:22.777+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1718790921651
[2024-06-19T09:55:22.778+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-06-19T09:55:22.781+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching spark://localhost:41671/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.831+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO TransportClientFactory: Successfully created connection to localhost/127.0.0.1:41671 after 39 ms (0 ms spent in bootstraps)
[2024-06-19T09:55:22.837+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Fetching spark://localhost:41671/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp11697457394275874054.tmp
[2024-06-19T09:55:22.885+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp11697457394275874054.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.checkerframework_checker-qual-3.5.0.jar
[2024-06-19T09:55:22.894+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.checkerframework_checker-qual-3.5.0.jar to class loader default
24/06/19 09:55:22 INFO Executor: Fetching spark://localhost:41671/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1718790921651
[2024-06-19T09:55:22.896+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Fetching spark://localhost:41671/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp16031274788659962650.tmp
[2024-06-19T09:55:22.896+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp16031274788659962650.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.slf4j_slf4j-api-2.0.7.jar
[2024-06-19T09:55:22.901+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.slf4j_slf4j-api-2.0.7.jar to class loader default
[2024-06-19T09:55:22.902+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching spark://localhost:41671/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1718790921651
[2024-06-19T09:55:22.903+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Fetching spark://localhost:41671/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp6450088110198036516.tmp
[2024-06-19T09:55:22.910+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp6450088110198036516.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.lz4_lz4-java-1.8.0.jar
[2024-06-19T09:55:22.913+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.lz4_lz4-java-1.8.0.jar to class loader default
[2024-06-19T09:55:22.917+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching spark://localhost:41671/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1718790921651
[2024-06-19T09:55:22.921+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Fetching spark://localhost:41671/jars/org.postgresql_postgresql-42.5.4.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp12456596240877729353.tmp
[2024-06-19T09:55:22.927+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp12456596240877729353.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.postgresql_postgresql-42.5.4.jar
[2024-06-19T09:55:22.929+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.postgresql_postgresql-42.5.4.jar to class loader default
[2024-06-19T09:55:22.930+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Executor: Fetching spark://localhost:41671/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1718790921651
[2024-06-19T09:55:22.931+0000] {docker.py:413} INFO - 24/06/19 09:55:22 INFO Utils: Fetching spark://localhost:41671/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp8202613579397602316.tmp
[2024-06-19T09:55:23.118+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp8202613579397602316.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-06-19T09:55:23.127+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to class loader default
[2024-06-19T09:55:23.129+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Fetching spark://localhost:41671/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1718790921651
[2024-06-19T09:55:23.132+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: Fetching spark://localhost:41671/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp17613352902869066244.tmp
[2024-06-19T09:55:23.134+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp17613352902869066244.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/commons-logging_commons-logging-1.1.3.jar
[2024-06-19T09:55:23.142+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/commons-logging_commons-logging-1.1.3.jar to class loader default
[2024-06-19T09:55:23.143+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Fetching spark://localhost:41671/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1718790921651
[2024-06-19T09:55:23.145+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: Fetching spark://localhost:41671/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp3837474034864739046.tmp
[2024-06-19T09:55:23.147+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp3837474034864739046.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-06-19T09:55:23.153+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/com.google.code.findbugs_jsr305-3.0.0.jar to class loader default
[2024-06-19T09:55:23.158+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Fetching spark://localhost:41671/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1718790921651
24/06/19 09:55:23 INFO Utils: Fetching spark://localhost:41671/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp9677625406042018607.tmp
[2024-06-19T09:55:23.179+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp9677625406042018607.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-06-19T09:55:23.182+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.kafka_kafka-clients-3.4.1.jar to class loader default
24/06/19 09:55:23 INFO Executor: Fetching spark://localhost:41671/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1718790921651
24/06/19 09:55:23 INFO Utils: Fetching spark://localhost:41671/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp17143560423864453436.tmp
[2024-06-19T09:55:23.282+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp17143560423864453436.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-06-19T09:55:23.287+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.hadoop_hadoop-client-api-3.3.4.jar to class loader default
[2024-06-19T09:55:23.290+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Fetching spark://localhost:41671/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1718790921651
[2024-06-19T09:55:23.290+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: Fetching spark://localhost:41671/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp4448144798198229588.tmp
[2024-06-19T09:55:23.292+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp4448144798198229588.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:55:23.299+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to class loader default
24/06/19 09:55:23 INFO Executor: Fetching spark://localhost:41671/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1718790921651
[2024-06-19T09:55:23.301+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: Fetching spark://localhost:41671/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp7943698477753254996.tmp
[2024-06-19T09:55:23.302+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp7943698477753254996.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.commons_commons-pool2-2.11.1.jar
[2024-06-19T09:55:23.306+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.commons_commons-pool2-2.11.1.jar to class loader default
[2024-06-19T09:55:23.307+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Fetching spark://localhost:41671/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1718790921651
[2024-06-19T09:55:23.308+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: Fetching spark://localhost:41671/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp3798342951940495236.tmp
[2024-06-19T09:55:23.318+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp3798342951940495236.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-06-19T09:55:23.320+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.xerial.snappy_snappy-java-1.1.10.3.jar to class loader default
[2024-06-19T09:55:23.322+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Fetching spark://localhost:41671/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1718790921651
[2024-06-19T09:55:23.323+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: Fetching spark://localhost:41671/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp7993386269654480785.tmp
[2024-06-19T09:55:23.323+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/fetchFileTemp7993386269654480785.tmp has been previously copied to /tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:55:23.333+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Executor: Adding file:/tmp/spark-b7e01def-3908-42bf-8e4c-1bc2ecad46d8/userFiles-bb752c88-0a73-4d3c-9939-be03b1a23286/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to class loader default
[2024-06-19T09:55:23.340+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 39421.
24/06/19 09:55:23 INFO NettyBlockTransferService: Server created on localhost:39421
[2024-06-19T09:55:23.341+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2024-06-19T09:55:23.346+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, localhost, 39421, None)
[2024-06-19T09:55:23.347+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO BlockManagerMasterEndpoint: Registering block manager localhost:39421 with 434.4 MiB RAM, BlockManagerId(driver, localhost, 39421, None)
[2024-06-19T09:55:23.349+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, localhost, 39421, None)
[2024-06-19T09:55:23.351+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, localhost, 39421, None)
[2024-06-19T09:55:23.666+0000] {docker.py:413} INFO - 2024-06-19 09:55:23,665:create_spark_session:INFO:Spark session created successfully
[2024-06-19T09:55:23.685+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir.
[2024-06-19T09:55:23.687+0000] {docker.py:413} INFO - 24/06/19 09:55:23 INFO SharedState: Warehouse path is 'file:/opt/bitnami/spark/spark-warehouse'.
[2024-06-19T09:55:25.734+0000] {docker.py:413} INFO - 2024-06-19 09:55:25,731:create_initial_dataframe:INFO:Initial dataframe created successfully
[2024-06-19T09:55:25.771+0000] {docker.py:413} INFO - 2024-06-19 09:55:25,769:create_initial_dataframe:INFO:Initial dataframe created successfully
[2024-06-19T09:55:25.790+0000] {docker.py:413} INFO - 2024-06-19 09:55:25,788:create_initial_dataframe:INFO:Initial dataframe created successfully
[2024-06-19T09:55:26.197+0000] {docker.py:413} INFO - 24/06/19 09:55:26 WARN SparkStringUtils: Truncated the string representation of a plan since it was too large. This behavior can be adjusted by setting 'spark.sql.debug.maxToStringFields'.
[2024-06-19T09:55:26.490+0000] {docker.py:413} INFO - 2024-06-19 09:55:26,485:start_streaming:INFO:Starting streaming into elements
[2024-06-19T09:55:26.832+0000] {docker.py:413} INFO - 2024-06-19 09:55:26,818:run:INFO:Callback Server Starting
2024-06-19 09:55:26,818:run:INFO:Socket listening on ('127.0.0.1', 43989)
[2024-06-19T09:55:26.876+0000] {docker.py:413} INFO - 24/06/19 09:55:26 INFO StateStoreCoordinatorRef: Registered StateStoreCoordinator endpoint
[2024-06-19T09:55:26.922+0000] {docker.py:413} INFO - 24/06/19 09:55:26 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
[2024-06-19T09:55:26.942+0000] {docker.py:413} INFO - 24/06/19 09:55:26 INFO ResolveWriteToStream: Checkpoint root file:///tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3 resolved to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3.
[2024-06-19T09:55:26.948+0000] {docker.py:413} INFO - 24/06/19 09:55:26 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2024-06-19T09:55:27.046+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/metadata using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/.metadata.ecbe180e-cd95-492c-b2e9-00efbda704fe.tmp
[2024-06-19T09:55:27.153+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/.metadata.ecbe180e-cd95-492c-b2e9-00efbda704fe.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/metadata
[2024-06-19T09:55:27.199+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO MicroBatchExecution: Starting [id = 793a3baf-759b-4e20-abfb-41bc2209f9e4, runId = 4121a076-e40f-4c6d-b8b1-db566bbb39ce]. Use file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3 to store the query checkpoint.
[2024-06-19T09:55:27.205+0000] {docker.py:413} INFO - 2024-06-19 09:55:27,202:start_streaming:INFO:Starting streaming into teams
[2024-06-19T09:55:27.207+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO MicroBatchExecution: Reading table [org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaTable@53b463e9] from DataSourceV2 named 'kafka' [org.apache.spark.sql.kafka010.KafkaSourceProvider@1b596027]
[2024-06-19T09:55:27.218+0000] {docker.py:413} INFO - 24/06/19 09:55:27 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
[2024-06-19T09:55:27.221+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO ResolveWriteToStream: Checkpoint root file:///tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91 resolved to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91.
24/06/19 09:55:27 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2024-06-19T09:55:27.229+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/metadata using temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/.metadata.dbf2d1d1-cdb1-4a97-98ad-d94350d259c0.tmp
[2024-06-19T09:55:27.244+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO OffsetSeqLog: BatchIds found from listing:
[2024-06-19T09:55:27.245+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO OffsetSeqLog: BatchIds found from listing:
[2024-06-19T09:55:27.247+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO MicroBatchExecution: Starting new streaming query.
[2024-06-19T09:55:27.252+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO MicroBatchExecution: Stream started from {}
[2024-06-19T09:55:27.262+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/.metadata.dbf2d1d1-cdb1-4a97-98ad-d94350d259c0.tmp to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/metadata
[2024-06-19T09:55:27.294+0000] {docker.py:413} INFO - 2024-06-19 09:55:27,280:start_streaming:INFO:Starting streaming into fixtures
[2024-06-19T09:55:27.296+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO MicroBatchExecution: Starting [id = 7721ff87-38a8-4e53-8e7c-f1590a2ec7db, runId = 72d1e92f-453c-4776-884b-eccdd60d491a]. Use file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91 to store the query checkpoint.
24/06/19 09:55:27 INFO MicroBatchExecution: Reading table [org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaTable@7d59bb05] from DataSourceV2 named 'kafka' [org.apache.spark.sql.kafka010.KafkaSourceProvider@739e4b06]
24/06/19 09:55:27 INFO OffsetSeqLog: BatchIds found from listing:
[2024-06-19T09:55:27.297+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO OffsetSeqLog: BatchIds found from listing: 
24/06/19 09:55:27 INFO MicroBatchExecution: Starting new streaming query.
24/06/19 09:55:27 INFO MicroBatchExecution: Stream started from {}
[2024-06-19T09:55:27.303+0000] {docker.py:413} INFO - 24/06/19 09:55:27 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
24/06/19 09:55:27 INFO ResolveWriteToStream: Checkpoint root file:///tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005 resolved to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005.
24/06/19 09:55:27 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2024-06-19T09:55:27.319+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/metadata using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/.metadata.c6ac22b1-cae2-4f07-90f1-0d456e41431b.tmp
[2024-06-19T09:55:27.349+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/.metadata.c6ac22b1-cae2-4f07-90f1-0d456e41431b.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/metadata
[2024-06-19T09:55:27.374+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO MicroBatchExecution: Starting [id = f8324521-1198-4f6c-b632-0d3b428ef78f, runId = 32b74668-d7fa-43eb-a8fb-8bdcb3cd0d61]. Use file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005 to store the query checkpoint.
[2024-06-19T09:55:27.379+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO MicroBatchExecution: Reading table [org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaTable@447608af] from DataSourceV2 named 'kafka' [org.apache.spark.sql.kafka010.KafkaSourceProvider@4ab1ff89]
[2024-06-19T09:55:27.387+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO OffsetSeqLog: BatchIds found from listing: 
24/06/19 09:55:27 INFO OffsetSeqLog: BatchIds found from listing: 
24/06/19 09:55:27 INFO MicroBatchExecution: Starting new streaming query.
[2024-06-19T09:55:27.390+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO MicroBatchExecution: Stream started from {}
[2024-06-19T09:55:27.695+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [kafka:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

24/06/19 09:55:27 INFO AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [kafka:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

24/06/19 09:55:27 INFO AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [kafka:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
[2024-06-19T09:55:27.857+0000] {docker.py:413} INFO - 24/06/19 09:55:27 WARN AdminClientConfig: These configurations '[key.deserializer, value.deserializer, enable.auto.commit, max.poll.records, auto.offset.reset]' were supplied but are not used yet.
[2024-06-19T09:55:27.879+0000] {docker.py:413} INFO - 24/06/19 09:55:27 WARN AdminClientConfig: These configurations '[key.deserializer, value.deserializer, enable.auto.commit, max.poll.records, auto.offset.reset]' were supplied but are not used yet.
[2024-06-19T09:55:27.899+0000] {docker.py:413} INFO - 24/06/19 09:55:27 WARN AdminClientConfig: These configurations '[key.deserializer, value.deserializer, enable.auto.commit, max.poll.records, auto.offset.reset]' were supplied but are not used yet.
[2024-06-19T09:55:27.910+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO AppInfoParser: Kafka version: 3.4.1
[2024-06-19T09:55:27.912+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
[2024-06-19T09:55:27.915+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO AppInfoParser: Kafka startTimeMs: 1718790927846
[2024-06-19T09:55:27.920+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO AppInfoParser: Kafka version: 3.4.1
[2024-06-19T09:55:27.922+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
24/06/19 09:55:27 INFO AppInfoParser: Kafka startTimeMs: 1718790927848
[2024-06-19T09:55:27.922+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO AppInfoParser: Kafka version: 3.4.1
[2024-06-19T09:55:27.923+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
[2024-06-19T09:55:27.924+0000] {docker.py:413} INFO - 24/06/19 09:55:27 INFO AppInfoParser: Kafka startTimeMs: 1718790927849
[2024-06-19T09:55:28.726+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/sources/0/0 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/sources/0/.0.f92c805a-29f8-4548-b633-7be7180c27bc.tmp
24/06/19 09:55:28 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/sources/0/0 using temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/sources/0/.0.3b0904ed-0eab-4dc8-b3b4-da5e23d09cf5.tmp
[2024-06-19T09:55:28.728+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/sources/0/0 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/sources/0/.0.37617d7a-cae3-4844-b327-8876bd8482ab.tmp
[2024-06-19T09:55:28.770+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/sources/0/.0.3b0904ed-0eab-4dc8-b3b4-da5e23d09cf5.tmp to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/sources/0/0
24/06/19 09:55:28 INFO KafkaMicroBatchStream: Initial offsets: {"teams":{"0":440}}
24/06/19 09:55:28 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/sources/0/.0.37617d7a-cae3-4844-b327-8876bd8482ab.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/sources/0/0
24/06/19 09:55:28 INFO KafkaMicroBatchStream: Initial offsets: {"elements":{"0":19030}}
[2024-06-19T09:55:28.779+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/sources/0/.0.f92c805a-29f8-4548-b633-7be7180c27bc.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/sources/0/0
[2024-06-19T09:55:28.780+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO KafkaMicroBatchStream: Initial offsets: {"fixtures":{"0":8360}}
[2024-06-19T09:55:28.806+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/0 using temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/.0.d5b13f5f-bf9b-4ac5-9249-7b6c26df9c8b.tmp
[2024-06-19T09:55:28.809+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/0 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.0.4805f791-d0e6-4034-8cc8-108df10fecab.tmp
24/06/19 09:55:28 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/0 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.0.d85f8a55-c584-4c44-b3b4-22d2f5e6b857.tmp
[2024-06-19T09:55:28.885+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/.0.d5b13f5f-bf9b-4ac5-9249-7b6c26df9c8b.tmp to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/0
[2024-06-19T09:55:28.886+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO MicroBatchExecution: Committed offsets for batch 0. Metadata OffsetSeqMetadata(0,1718790928785,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:55:28.893+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.0.d85f8a55-c584-4c44-b3b4-22d2f5e6b857.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/0
[2024-06-19T09:55:28.894+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO MicroBatchExecution: Committed offsets for batch 0. Metadata OffsetSeqMetadata(0,1718790928787,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:55:28.906+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.0.4805f791-d0e6-4034-8cc8-108df10fecab.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/0
[2024-06-19T09:55:28.908+0000] {docker.py:413} INFO - 24/06/19 09:55:28 INFO MicroBatchExecution: Committed offsets for batch 0. Metadata OffsetSeqMetadata(0,1718790928785,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:55:29.486+0000] {docker.py:413} INFO - 24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:55:29.487+0000] {docker.py:413} INFO - 24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:55:29.576+0000] {docker.py:413} INFO - 24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:55:29.578+0000] {docker.py:413} INFO - 24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:55:29.687+0000] {docker.py:413} INFO - 24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:55:29.691+0000] {docker.py:413} INFO - 24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:55:29.692+0000] {docker.py:413} INFO - 24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:55:29.697+0000] {docker.py:413} INFO - 24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:55:29.701+0000] {docker.py:413} INFO - 24/06/19 09:55:29 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:55:30.295+0000] {docker.py:413} INFO - 24/06/19 09:55:30 INFO CodeGenerator: Code generated in 315.337625 ms
24/06/19 09:55:30 INFO CodeGenerator: Code generated in 315.237542 ms
[2024-06-19T09:55:30.398+0000] {docker.py:413} INFO - 24/06/19 09:55:30 INFO CodeGenerator: Code generated in 417.031042 ms
[2024-06-19T09:55:30.487+0000] {docker.py:413} INFO - 2024-06-19 09:55:30,485:wait_for_commands:INFO:Python Server ready to receive messages
[2024-06-19T09:55:30.488+0000] {docker.py:413} INFO - 2024-06-19 09:55:30,486:wait_for_commands:INFO:Received command c on object id p1
[2024-06-19T09:55:30.490+0000] {docker.py:413} INFO - 2024-06-19 09:55:30,486:wait_for_commands:INFO:Python Server ready to receive messages
[2024-06-19T09:55:30.492+0000] {docker.py:413} INFO - 2024-06-19 09:55:30,488:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T09:55:30.607+0000] {docker.py:413} INFO - 2024-06-19 09:55:30,592:wait_for_commands:INFO:Python Server ready to receive messages
[2024-06-19T09:55:30.613+0000] {docker.py:413} INFO - 2024-06-19 09:55:30,596:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T09:55:31.447+0000] {docker.py:413} INFO - 2024-06-19 09:55:31,437:write_to_postgres:ERROR:Error writing batch 0 to fixtures: Column draw not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:55:31.452+0000] {docker.py:413} INFO - 2024-06-19 09:55:31,440:write_to_postgres:ERROR:Error writing batch 0 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:55:31.467+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO CodeGenerator: Code generated in 59.0795 ms
[2024-06-19T09:55:31.472+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/0 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.0.7ce0ce2e-d532-4468-b8a8-e8e0f3b6ebc4.tmp
[2024-06-19T09:55:31.474+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/0 using temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/.0.682a191e-db6d-473b-8d1b-a3b123cdf55c.tmp
[2024-06-19T09:55:31.552+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/.0.682a191e-db6d-473b-8d1b-a3b123cdf55c.tmp to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/0
[2024-06-19T09:55:31.557+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.0.7ce0ce2e-d532-4468-b8a8-e8e0f3b6ebc4.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/0
[2024-06-19T09:55:31.608+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "7721ff87-38a8-4e53-8e7c-f1590a2ec7db",
  "runId" : "72d1e92f-453c-4776-884b-eccdd60d491a",
  "name" : null,
  "timestamp" : "2024-06-19T09:55:27.281Z",
  "batchId" : 0,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 1835,
    "commitOffsets" : 98,
    "getBatch" : 33,
    "latestOffset" : 1501,
    "queryPlanning" : 682,
    "triggerExecution" : 4266,
    "walCommit" : 91
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[teams]]",
    "startOffset" : null,
    "endOffset" : {
      "teams" : {
        "0" : 680
      }
    },
    "latestOffset" : {
      "teams" : {
        "0" : 680
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:55:31.609+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "793a3baf-759b-4e20-abfb-41bc2209f9e4",
  "runId" : "4121a076-e40f-4c6d-b8b1-db566bbb39ce",
  "name" : null,
  "timestamp" : "2024-06-19T09:55:27.235Z",
  "batchId" : 0,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 1816,
    "commitOffsets" : 100,
    "getBatch" : 18,
    "latestOffset" : 1531,
    "queryPlanning" : 683,
    "triggerExecution" : 4309,
    "walCommit" : 116
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : null,
    "endOffset" : {
      "elements" : {
        "0" : 29410
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 29410
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:55:31.776+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-19T09:55:31.858+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO DAGScheduler: Got job 0 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2024-06-19T09:55:31.861+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO DAGScheduler: Final stage: ResultStage 0 (start at NativeMethodAccessorImpl.java:0)
[2024-06-19T09:55:31.864+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO DAGScheduler: Parents of final stage: List()
[2024-06-19T09:55:31.865+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO DAGScheduler: Missing parents: List()
[2024-06-19T09:55:31.877+0000] {docker.py:413} INFO - 24/06/19 09:55:31 INFO DAGScheduler: Submitting ResultStage 0 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T09:55:32.307+0000] {docker.py:413} INFO - 24/06/19 09:55:32 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T09:55:32.360+0000] {docker.py:413} INFO - 24/06/19 09:55:32 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T09:55:32.367+0000] {docker.py:413} INFO - 24/06/19 09:55:32 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on localhost:39421 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:55:32.380+0000] {docker.py:413} INFO - 24/06/19 09:55:32 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:1580
[2024-06-19T09:55:32.398+0000] {docker.py:413} INFO - 24/06/19 09:55:32 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 0 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-06-19T09:55:32.399+0000] {docker.py:413} INFO - 24/06/19 09:55:32 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks resource profile 0
[2024-06-19T09:55:32.458+0000] {docker.py:413} INFO - 24/06/19 09:55:32 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11068 bytes)
[2024-06-19T09:55:32.490+0000] {docker.py:413} INFO - 24/06/19 09:55:32 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
[2024-06-19T09:55:32.735+0000] {docker.py:413} INFO - 24/06/19 09:55:32 INFO CodeGenerator: Code generated in 80.035208 ms
[2024-06-19T09:55:32.774+0000] {docker.py:413} INFO - 24/06/19 09:55:32 INFO CodeGenerator: Code generated in 35.645333 ms
[2024-06-19T09:55:32.814+0000] {docker.py:413} INFO - 24/06/19 09:55:32 INFO CodeGenerator: Code generated in 33.387708 ms
[2024-06-19T09:55:34.721+0000] {docker.py:413} INFO - 24/06/19 09:55:34 INFO CodeGenerator: Code generated in 71.01675 ms
[2024-06-19T09:55:34.742+0000] {docker.py:413} INFO - 24/06/19 09:55:34 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=8360 untilOffset=12920, for query queryId=f8324521-1198-4f6c-b632-0d3b428ef78f batchId=0 taskId=0 partitionId=0
[2024-06-19T09:55:34.923+0000] {docker.py:413} INFO - 24/06/19 09:55:34 INFO CodeGenerator: Code generated in 32.414042 ms
[2024-06-19T09:55:34.977+0000] {docker.py:413} INFO - 24/06/19 09:55:34 INFO CodeGenerator: Code generated in 29.09775 ms
[2024-06-19T09:55:35.012+0000] {docker.py:413} INFO - 24/06/19 09:55:35 INFO ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [kafka:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
[2024-06-19T09:55:35.118+0000] {docker.py:413} INFO - 24/06/19 09:55:35 INFO AppInfoParser: Kafka version: 3.4.1
24/06/19 09:55:35 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
24/06/19 09:55:35 INFO AppInfoParser: Kafka startTimeMs: 1718790935115
[2024-06-19T09:55:35.121+0000] {docker.py:413} INFO - 24/06/19 09:55:35 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Assigned to partition(s): fixtures-0
[2024-06-19T09:55:35.127+0000] {docker.py:413} INFO - 24/06/19 09:55:35 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 8360 for partition fixtures-0
[2024-06-19T09:55:35.146+0000] {docker.py:413} INFO - 24/06/19 09:55:35 INFO Metadata: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting the last seen epoch of partition fixtures-0 to 16 since the associated topicId changed from null to FJHFNb5sRXWkhHAifyctGg
[2024-06-19T09:55:35.149+0000] {docker.py:413} INFO - 24/06/19 09:55:35 INFO Metadata: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Cluster ID: hOTY4LfWQK6Gr4R4BaP8uA
[2024-06-19T09:55:35.233+0000] {docker.py:413} INFO - 24/06/19 09:55:35 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:55:35.246+0000] {docker.py:413} INFO - 24/06/19 09:55:35 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:55:35 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:55:35.251+0000] {docker.py:413} INFO - 24/06/19 09:55:35 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=12920, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:36.569+0000] {docker.py:413} INFO - 24/06/19 09:55:36 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 8843 for partition fixtures-0
[2024-06-19T09:55:36.582+0000] {docker.py:413} INFO - 24/06/19 09:55:36 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:55:36.602+0000] {docker.py:413} INFO - 24/06/19 09:55:36 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:36.613+0000] {docker.py:413} INFO - 24/06/19 09:55:36 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:55:36.621+0000] {docker.py:413} INFO - 24/06/19 09:55:36 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=12920, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:36.778+0000] {docker.py:413} INFO - 24/06/19 09:55:36 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 9330 for partition fixtures-0
[2024-06-19T09:55:36.782+0000] {docker.py:413} INFO - 24/06/19 09:55:36 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:55:36.795+0000] {docker.py:413} INFO - 24/06/19 09:55:36 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:36.796+0000] {docker.py:413} INFO - 24/06/19 09:55:36 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:55:36.797+0000] {docker.py:413} INFO - 24/06/19 09:55:36 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=12920, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:37.184+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 9815 for partition fixtures-0
[2024-06-19T09:55:37.188+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:55:37.198+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:37.199+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:55:37.204+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=12920, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:37.246+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 10302 for partition fixtures-0
[2024-06-19T09:55:37.248+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:55:37.254+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:37.255+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:55:37.257+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=12920, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:37.454+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 10787 for partition fixtures-0
[2024-06-19T09:55:37.466+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:55:37.475+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:55:37.485+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=12920, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:37.560+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 11272 for partition fixtures-0
[2024-06-19T09:55:37.568+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:55:37.580+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:37.583+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:55:37.584+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=12920, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:37.866+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 11757 for partition fixtures-0
[2024-06-19T09:55:37.869+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:55:37.882+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:55:37.883+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=12920, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:37.916+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 12244 for partition fixtures-0
[2024-06-19T09:55:37.921+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:55:37.925+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:37.945+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:55:37.947+0000] {docker.py:413} INFO - 24/06/19 09:55:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=12920, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:38.037+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 12729 for partition fixtures-0
[2024-06-19T09:55:38.039+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:55:38.547+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:38.560+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:55:38.564+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=12920, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:55:38.687+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor read 4560 records through 10 polls (polled  out 4560 records), taking 803238792 nanos, during time span of 3562586960 nanos.
[2024-06-19T09:55:38.714+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 1774 bytes result sent to driver
[2024-06-19T09:55:38.720+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 6288 ms on localhost (executor driver) (1/1)
[2024-06-19T09:55:38.721+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
[2024-06-19T09:55:38.731+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO DAGScheduler: ResultStage 0 (start at NativeMethodAccessorImpl.java:0) finished in 6.772 s
[2024-06-19T09:55:38.733+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO DAGScheduler: Job 0 is finished. Cancelling potential speculative or zombie tasks for this job
[2024-06-19T09:55:38.733+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO TaskSchedulerImpl: Killing all running tasks in stage 0: Stage finished
[2024-06-19T09:55:38.734+0000] {docker.py:413} INFO - 24/06/19 09:55:38 INFO DAGScheduler: Job 0 finished: start at NativeMethodAccessorImpl.java:0, took 6.961977 s
[2024-06-19T09:55:39.052+0000] {docker.py:413} INFO - 2024-06-19 09:55:39,044:write_to_postgres:INFO:Batch 0 written to fixtures successfully.
[2024-06-19T09:55:39.112+0000] {docker.py:413} INFO - 24/06/19 09:55:39 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/0 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.0.e1d13fdf-6e33-4587-9025-280e6dda6c33.tmp
[2024-06-19T09:55:39.136+0000] {docker.py:413} INFO - 24/06/19 09:55:39 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.0.e1d13fdf-6e33-4587-9025-280e6dda6c33.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/0
[2024-06-19T09:55:39.138+0000] {docker.py:413} INFO - 24/06/19 09:55:39 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "f8324521-1198-4f6c-b632-0d3b428ef78f",
  "runId" : "32b74668-d7fa-43eb-a8fb-8bdcb3cd0d61",
  "name" : null,
  "timestamp" : "2024-06-19T09:55:27.382Z",
  "batchId" : 0,
  "numInputRows" : 4560,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 388.0851063829787,
  "durationMs" : {
    "addBatch" : 9434,
    "commitOffsets" : 86,
    "getBatch" : 30,
    "latestOffset" : 1401,
    "queryPlanning" : 683,
    "triggerExecution" : 11750,
    "walCommit" : 104
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : null,
    "endOffset" : {
      "fixtures" : {
        "0" : 12920
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 12920
      }
    },
    "numInputRows" : 4560,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 388.0851063829787,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:55:41.587+0000] {docker.py:413} INFO - 24/06/19 09:55:41 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:55:41.609+0000] {docker.py:413} INFO - 24/06/19 09:55:41 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:55:49.142+0000] {docker.py:413} INFO - 24/06/19 09:55:49 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:55:51.590+0000] {docker.py:413} INFO - 24/06/19 09:55:51 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:55:51.600+0000] {docker.py:413} INFO - 24/06/19 09:55:51 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:55:59.147+0000] {docker.py:413} INFO - 24/06/19 09:55:59 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:01.625+0000] {docker.py:413} INFO - 24/06/19 09:56:01 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
24/06/19 09:56:01 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:09.148+0000] {docker.py:413} INFO - 24/06/19 09:56:09 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:11.603+0000] {docker.py:413} INFO - 24/06/19 09:56:11 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:11.620+0000] {docker.py:413} INFO - 24/06/19 09:56:11 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:19.162+0000] {docker.py:413} INFO - 24/06/19 09:56:19 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:21.249+0000] {docker.py:413} INFO - 24/06/19 09:56:21 INFO BlockManagerInfo: Removed broadcast_0_piece0 on localhost:39421 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:56:21.605+0000] {docker.py:413} INFO - 24/06/19 09:56:21 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:21.628+0000] {docker.py:413} INFO - 24/06/19 09:56:21 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:29.166+0000] {docker.py:413} INFO - 24/06/19 09:56:29 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:31.607+0000] {docker.py:413} INFO - 24/06/19 09:56:31 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:31.628+0000] {docker.py:413} INFO - 24/06/19 09:56:31 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:39.177+0000] {docker.py:413} INFO - 24/06/19 09:56:39 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:41.608+0000] {docker.py:413} INFO - 24/06/19 09:56:41 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:41.641+0000] {docker.py:413} INFO - 24/06/19 09:56:41 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:46.924+0000] {docker.py:413} INFO - 24/06/19 09:56:46 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/1 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.1.9cf05eb0-5f52-4e04-bf5d-b438dfbbd450.tmp
[2024-06-19T09:56:46.968+0000] {docker.py:413} INFO - 24/06/19 09:56:46 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.1.9cf05eb0-5f52-4e04-bf5d-b438dfbbd450.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/1
24/06/19 09:56:46 INFO MicroBatchExecution: Committed offsets for batch 1. Metadata OffsetSeqMetadata(0,1718791006887,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:56:47.137+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:47.142+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:47.194+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:47.198+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:47.326+0000] {docker.py:413} INFO - 2024-06-19 09:56:47,320:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T09:56:47.505+0000] {docker.py:413} INFO - 2024-06-19 09:56:47,502:write_to_postgres:ERROR:Error writing batch 1 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:56:47.511+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/1 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.1.8dd67116-61ec-458b-b3b9-0ebe1c288fe9.tmp
[2024-06-19T09:56:47.545+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.1.8dd67116-61ec-458b-b3b9-0ebe1c288fe9.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/1
[2024-06-19T09:56:47.547+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "793a3baf-759b-4e20-abfb-41bc2209f9e4",
  "runId" : "4121a076-e40f-4c6d-b8b1-db566bbb39ce",
  "name" : null,
  "timestamp" : "2024-06-19T09:56:46.886Z",
  "batchId" : 1,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 352,
    "commitOffsets" : 39,
    "getBatch" : 1,
    "latestOffset" : 1,
    "queryPlanning" : 149,
    "triggerExecution" : 656,
    "walCommit" : 92
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : {
      "elements" : {
        "0" : 29410
      }
    },
    "endOffset" : {
      "elements" : {
        "0" : 29417
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 29417
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:56:47.572+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/2 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.2.ec1310ca-06c2-4efe-98c0-0be697ae619f.tmp
[2024-06-19T09:56:47.636+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.2.ec1310ca-06c2-4efe-98c0-0be697ae619f.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/2
[2024-06-19T09:56:47.677+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO MicroBatchExecution: Committed offsets for batch 2. Metadata OffsetSeqMetadata(0,1718791007548,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:56:47.725+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:47.729+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:47.762+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:47.769+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:47.836+0000] {docker.py:413} INFO - 2024-06-19 09:56:47,834:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T09:56:47.988+0000] {docker.py:413} INFO - 2024-06-19 09:56:47,985:write_to_postgres:ERROR:Error writing batch 2 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:56:47.997+0000] {docker.py:413} INFO - 24/06/19 09:56:47 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/2 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.2.919a75b6-6887-4f38-b39a-66c988a050d8.tmp
[2024-06-19T09:56:48.018+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.2.919a75b6-6887-4f38-b39a-66c988a050d8.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/2
[2024-06-19T09:56:48.020+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "793a3baf-759b-4e20-abfb-41bc2209f9e4",
  "runId" : "4121a076-e40f-4c6d-b8b1-db566bbb39ce",
  "name" : null,
  "timestamp" : "2024-06-19T09:56:47.545Z",
  "batchId" : 2,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 249,
    "commitOffsets" : 29,
    "getBatch" : 1,
    "latestOffset" : 3,
    "queryPlanning" : 88,
    "triggerExecution" : 471,
    "walCommit" : 82
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : {
      "elements" : {
        "0" : 29417
      }
    },
    "endOffset" : {
      "elements" : {
        "0" : 29753
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 29753
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:56:48.030+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/3 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.3.b2e07cad-3269-45da-b3e3-610325df4055.tmp
[2024-06-19T09:56:48.045+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.3.b2e07cad-3269-45da-b3e3-610325df4055.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/3
[2024-06-19T09:56:48.046+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO MicroBatchExecution: Committed offsets for batch 3. Metadata OffsetSeqMetadata(0,1718791008021,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:56:48.090+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.093+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.144+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.149+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.237+0000] {docker.py:413} INFO - 2024-06-19 09:56:48,230:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T09:56:48.338+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/1 using temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/.1.ca532f4a-50ba-4c90-962d-a810dd115162.tmp
[2024-06-19T09:56:48.363+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/.1.ca532f4a-50ba-4c90-962d-a810dd115162.tmp to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/1
[2024-06-19T09:56:48.365+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO MicroBatchExecution: Committed offsets for batch 1. Metadata OffsetSeqMetadata(0,1718791008319,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:56:48.375+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.380+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.391+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.396+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.405+0000] {docker.py:413} INFO - 2024-06-19 09:56:48,403:write_to_postgres:ERROR:Error writing batch 3 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:56:48.416+0000] {docker.py:413} INFO - 2024-06-19 09:56:48,413:wait_for_commands:INFO:Received command c on object id p1
[2024-06-19T09:56:48.420+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/3 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.3.ad08330a-e2f7-496b-8889-10c90da46d07.tmp
[2024-06-19T09:56:48.469+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.3.ad08330a-e2f7-496b-8889-10c90da46d07.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/3
[2024-06-19T09:56:48.471+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "793a3baf-759b-4e20-abfb-41bc2209f9e4",
  "runId" : "4121a076-e40f-4c6d-b8b1-db566bbb39ce",
  "name" : null,
  "timestamp" : "2024-06-19T09:56:48.017Z",
  "batchId" : 3,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 295,
    "commitOffsets" : 62,
    "getBatch" : 0,
    "latestOffset" : 4,
    "queryPlanning" : 52,
    "triggerExecution" : 449,
    "walCommit" : 23
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : {
      "elements" : {
        "0" : 29753
      }
    },
    "endOffset" : {
      "elements" : {
        "0" : 30275
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 30275
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:56:48.543+0000] {docker.py:413} INFO - 2024-06-19 09:56:48,542:write_to_postgres:ERROR:Error writing batch 1 to fixtures: Column draw not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:56:48.548+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/1 using temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/.1.8e810fbb-d1b9-4ebe-8ea0-c9c6e17c5025.tmp
[2024-06-19T09:56:48.562+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/.1.8e810fbb-d1b9-4ebe-8ea0-c9c6e17c5025.tmp to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/1
[2024-06-19T09:56:48.563+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "7721ff87-38a8-4e53-8e7c-f1590a2ec7db",
  "runId" : "72d1e92f-453c-4776-884b-eccdd60d491a",
  "name" : null,
  "timestamp" : "2024-06-19T09:56:48.315Z",
  "batchId" : 1,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 161,
    "commitOffsets" : 17,
    "getBatch" : 0,
    "latestOffset" : 4,
    "queryPlanning" : 17,
    "triggerExecution" : 244,
    "walCommit" : 42
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[teams]]",
    "startOffset" : {
      "teams" : {
        "0" : 680
      }
    },
    "endOffset" : {
      "teams" : {
        "0" : 700
      }
    },
    "latestOffset" : {
      "teams" : {
        "0" : 700
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:56:48.784+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/1 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.1.d6a07202-190c-4dbd-b299-b1360cee5781.tmp
[2024-06-19T09:56:48.802+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.1.d6a07202-190c-4dbd-b299-b1360cee5781.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/1
[2024-06-19T09:56:48.803+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO MicroBatchExecution: Committed offsets for batch 1. Metadata OffsetSeqMetadata(0,1718791008772,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:56:48.811+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.813+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.826+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.828+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:48.840+0000] {docker.py:413} INFO - 2024-06-19 09:56:48,837:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T09:56:48.969+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-19T09:56:48.971+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO DAGScheduler: Got job 1 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/06/19 09:56:48 INFO DAGScheduler: Final stage: ResultStage 1 (start at NativeMethodAccessorImpl.java:0)
24/06/19 09:56:48 INFO DAGScheduler: Parents of final stage: List()
[2024-06-19T09:56:48.975+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO DAGScheduler: Missing parents: List()
[2024-06-19T09:56:48.977+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO DAGScheduler: Submitting ResultStage 1 (MapPartitionsRDD[47] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T09:56:48.991+0000] {docker.py:413} INFO - 24/06/19 09:56:48 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T09:56:49.026+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T09:56:49.027+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on localhost:39421 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:56:49.035+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:1580
[2024-06-19T09:56:49.040+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 1 (MapPartitionsRDD[47] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-06-19T09:56:49.042+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO TaskSchedulerImpl: Adding task set 1.0 with 1 tasks resource profile 0
[2024-06-19T09:56:49.049+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO TaskSetManager: Starting task 0.0 in stage 1.0 (TID 1) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11068 bytes)
[2024-06-19T09:56:49.064+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO Executor: Running task 0.0 in stage 1.0 (TID 1)
[2024-06-19T09:56:49.103+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=12920 untilOffset=12934, for query queryId=f8324521-1198-4f6c-b632-0d3b428ef78f batchId=1 taskId=1 partitionId=0
[2024-06-19T09:56:49.115+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 12920 for partition fixtures-0
[2024-06-19T09:56:49.219+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:56:49.719+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:56:49 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:56:49.721+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:56:49.766+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor read 14 records through 1 polls (polled  out 380 records), taking 605915792 nanos, during time span of 651605208 nanos.
[2024-06-19T09:56:49.770+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO Executor: Finished task 0.0 in stage 1.0 (TID 1). 1688 bytes result sent to driver
[2024-06-19T09:56:49.771+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO TaskSetManager: Finished task 0.0 in stage 1.0 (TID 1) in 735 ms on localhost (executor driver) (1/1)
[2024-06-19T09:56:49.772+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool
[2024-06-19T09:56:49.773+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO DAGScheduler: ResultStage 1 (start at NativeMethodAccessorImpl.java:0) finished in 0.793 s
[2024-06-19T09:56:49.774+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO DAGScheduler: Job 1 is finished. Cancelling potential speculative or zombie tasks for this job
24/06/19 09:56:49 INFO TaskSchedulerImpl: Killing all running tasks in stage 1: Stage finished
[2024-06-19T09:56:49.776+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO DAGScheduler: Job 1 finished: start at NativeMethodAccessorImpl.java:0, took 0.808718 s
[2024-06-19T09:56:49.812+0000] {docker.py:413} INFO - 2024-06-19 09:56:49,809:write_to_postgres:INFO:Batch 1 written to fixtures successfully.
[2024-06-19T09:56:49.820+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/1 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.1.7ed549ea-2764-47bd-87ed-59e52afdaf73.tmp
[2024-06-19T09:56:49.838+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.1.7ed549ea-2764-47bd-87ed-59e52afdaf73.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/1
[2024-06-19T09:56:49.840+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "f8324521-1198-4f6c-b632-0d3b428ef78f",
  "runId" : "32b74668-d7fa-43eb-a8fb-8bdcb3cd0d61",
  "name" : null,
  "timestamp" : "2024-06-19T09:56:48.771Z",
  "batchId" : 1,
  "numInputRows" : 14,
  "inputRowsPerSecond" : 1166.6666666666667,
  "processedRowsPerSecond" : 13.145539906103288,
  "durationMs" : {
    "addBatch" : 997,
    "commitOffsets" : 26,
    "getBatch" : 0,
    "latestOffset" : 1,
    "queryPlanning" : 12,
    "triggerExecution" : 1065,
    "walCommit" : 28
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : {
      "fixtures" : {
        "0" : 12920
      }
    },
    "endOffset" : {
      "fixtures" : {
        "0" : 12934
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 12934
      }
    },
    "numInputRows" : 14,
    "inputRowsPerSecond" : 1166.6666666666667,
    "processedRowsPerSecond" : 13.145539906103288,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:56:49.846+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/2 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.2.ff0cb6cb-1850-41d3-9389-2ded1c90370f.tmp
[2024-06-19T09:56:49.862+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.2.ff0cb6cb-1850-41d3-9389-2ded1c90370f.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/2
[2024-06-19T09:56:49.863+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO MicroBatchExecution: Committed offsets for batch 2. Metadata OffsetSeqMetadata(0,1718791009840,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:56:49.877+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:49.881+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:49.897+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:49.900+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:56:49.916+0000] {docker.py:413} INFO - 2024-06-19 09:56:49,914:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T09:56:49.998+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-19T09:56:49.999+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO DAGScheduler: Got job 2 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2024-06-19T09:56:50.000+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO DAGScheduler: Final stage: ResultStage 2 (start at NativeMethodAccessorImpl.java:0)
24/06/19 09:56:49 INFO DAGScheduler: Parents of final stage: List()
[2024-06-19T09:56:50.001+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO DAGScheduler: Missing parents: List()
[2024-06-19T09:56:50.002+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO DAGScheduler: Submitting ResultStage 2 (MapPartitionsRDD[56] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T09:56:50.004+0000] {docker.py:413} INFO - 24/06/19 09:56:49 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T09:56:50.008+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T09:56:50.010+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on localhost:39421 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:56:50.012+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO SparkContext: Created broadcast 2 from broadcast at DAGScheduler.scala:1580
[2024-06-19T09:56:50.014+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 2 (MapPartitionsRDD[56] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-06-19T09:56:50.015+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO TaskSchedulerImpl: Adding task set 2.0 with 1 tasks resource profile 0
[2024-06-19T09:56:50.015+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO TaskSetManager: Starting task 0.0 in stage 2.0 (TID 2) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11068 bytes)
[2024-06-19T09:56:50.016+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO Executor: Running task 0.0 in stage 2.0 (TID 2)
[2024-06-19T09:56:50.041+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=12934 untilOffset=13300, for query queryId=f8324521-1198-4f6c-b632-0d3b428ef78f batchId=2 taskId=2 partitionId=0
[2024-06-19T09:56:50.219+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor read 366 records through 0 polls (polled  out 0 records), taking 0 nanos, during time span of 173045542 nanos.
[2024-06-19T09:56:50.222+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO Executor: Finished task 0.0 in stage 2.0 (TID 2). 1688 bytes result sent to driver
[2024-06-19T09:56:50.230+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO TaskSetManager: Finished task 0.0 in stage 2.0 (TID 2) in 210 ms on localhost (executor driver) (1/1)
24/06/19 09:56:50 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
[2024-06-19T09:56:50.231+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO DAGScheduler: ResultStage 2 (start at NativeMethodAccessorImpl.java:0) finished in 0.229 s
24/06/19 09:56:50 INFO DAGScheduler: Job 2 is finished. Cancelling potential speculative or zombie tasks for this job
24/06/19 09:56:50 INFO TaskSchedulerImpl: Killing all running tasks in stage 2: Stage finished
[2024-06-19T09:56:50.233+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO DAGScheduler: Job 2 finished: start at NativeMethodAccessorImpl.java:0, took 0.234057 s
[2024-06-19T09:56:50.276+0000] {docker.py:413} INFO - 2024-06-19 09:56:50,274:write_to_postgres:INFO:Batch 2 written to fixtures successfully.
[2024-06-19T09:56:50.297+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/2 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.2.590980a8-2306-4663-85dc-f61f6b476751.tmp
[2024-06-19T09:56:50.325+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.2.590980a8-2306-4663-85dc-f61f6b476751.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/2
[2024-06-19T09:56:50.326+0000] {docker.py:413} INFO - 24/06/19 09:56:50 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "f8324521-1198-4f6c-b632-0d3b428ef78f",
  "runId" : "32b74668-d7fa-43eb-a8fb-8bdcb3cd0d61",
  "name" : null,
  "timestamp" : "2024-06-19T09:56:49.838Z",
  "batchId" : 2,
  "numInputRows" : 366,
  "inputRowsPerSecond" : 343.0178069353327,
  "processedRowsPerSecond" : 756.198347107438,
  "durationMs" : {
    "addBatch" : 389,
    "commitOffsets" : 47,
    "getBatch" : 1,
    "latestOffset" : 2,
    "queryPlanning" : 25,
    "triggerExecution" : 484,
    "walCommit" : 17
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : {
      "fixtures" : {
        "0" : 12934
      }
    },
    "endOffset" : {
      "fixtures" : {
        "0" : 13300
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 13300
      }
    },
    "numInputRows" : 366,
    "inputRowsPerSecond" : 343.0178069353327,
    "processedRowsPerSecond" : 756.198347107438,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:56:58.475+0000] {docker.py:413} INFO - 24/06/19 09:56:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:56:58.571+0000] {docker.py:413} INFO - 24/06/19 09:56:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:00.323+0000] {docker.py:413} INFO - 24/06/19 09:57:00 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:00.471+0000] {docker.py:413} INFO - 24/06/19 09:57:00 INFO BlockManagerInfo: Removed broadcast_1_piece0 on localhost:39421 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:57:00.474+0000] {docker.py:413} INFO - 24/06/19 09:57:00 INFO BlockManagerInfo: Removed broadcast_2_piece0 on localhost:39421 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:57:08.480+0000] {docker.py:413} INFO - 24/06/19 09:57:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:08.573+0000] {docker.py:413} INFO - 24/06/19 09:57:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:10.342+0000] {docker.py:413} INFO - 24/06/19 09:57:10 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:18.491+0000] {docker.py:413} INFO - 24/06/19 09:57:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:18.583+0000] {docker.py:413} INFO - 24/06/19 09:57:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:20.356+0000] {docker.py:413} INFO - 24/06/19 09:57:20 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:28.491+0000] {docker.py:413} INFO - 24/06/19 09:57:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:28.587+0000] {docker.py:413} INFO - 24/06/19 09:57:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:30.359+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:38.521+0000] {docker.py:413} INFO - 24/06/19 09:57:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:38.597+0000] {docker.py:413} INFO - 24/06/19 09:57:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:40.362+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:48.506+0000] {docker.py:413} INFO - 24/06/19 09:57:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:48.597+0000] {docker.py:413} INFO - 24/06/19 09:57:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:50.463+0000] {docker.py:413} INFO - 24/06/19 09:57:50 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:58.554+0000] {docker.py:413} INFO - 24/06/19 09:57:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:58.604+0000] {docker.py:413} INFO - 24/06/19 09:57:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:00.426+0000] {docker.py:413} INFO - 24/06/19 09:58:00 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:08.548+0000] {docker.py:413} INFO - 24/06/19 09:58:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:08.611+0000] {docker.py:413} INFO - 24/06/19 09:58:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:10.430+0000] {docker.py:413} INFO - 24/06/19 09:58:10 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:18.536+0000] {docker.py:413} INFO - 24/06/19 09:58:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:18.613+0000] {docker.py:413} INFO - 24/06/19 09:58:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:20.436+0000] {docker.py:413} INFO - 24/06/19 09:58:20 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:28.545+0000] {docker.py:413} INFO - 24/06/19 09:58:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:28.622+0000] {docker.py:413} INFO - 24/06/19 09:58:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:30.452+0000] {docker.py:413} INFO - 24/06/19 09:58:30 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:38.558+0000] {docker.py:413} INFO - 24/06/19 09:58:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:38.631+0000] {docker.py:413} INFO - 24/06/19 09:58:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:40.457+0000] {docker.py:413} INFO - 24/06/19 09:58:40 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:48.559+0000] {docker.py:413} INFO - 24/06/19 09:58:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:48.637+0000] {docker.py:413} INFO - 24/06/19 09:58:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:50.461+0000] {docker.py:413} INFO - 24/06/19 09:58:50 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:58.591+0000] {docker.py:413} INFO - 24/06/19 09:58:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:58.644+0000] {docker.py:413} INFO - 24/06/19 09:58:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:00.461+0000] {docker.py:413} INFO - 24/06/19 09:59:00 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:08.580+0000] {docker.py:413} INFO - 24/06/19 09:59:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:08.652+0000] {docker.py:413} INFO - 24/06/19 09:59:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:10.467+0000] {docker.py:413} INFO - 24/06/19 09:59:10 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:18.592+0000] {docker.py:413} INFO - 24/06/19 09:59:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:18.659+0000] {docker.py:413} INFO - 24/06/19 09:59:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:20.473+0000] {docker.py:413} INFO - 24/06/19 09:59:20 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:28.596+0000] {docker.py:413} INFO - 24/06/19 09:59:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:28.667+0000] {docker.py:413} INFO - 24/06/19 09:59:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:30.471+0000] {docker.py:413} INFO - 24/06/19 09:59:30 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:35.107+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/4 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.4.34d25314-265c-4813-a387-be3d4e817205.tmp
[2024-06-19T09:59:35.275+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.4.34d25314-265c-4813-a387-be3d4e817205.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/4
24/06/19 09:59:35 INFO MicroBatchExecution: Committed offsets for batch 4. Metadata OffsetSeqMetadata(0,1718791174940,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:59:35.504+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:35.513+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:35.614+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:35.616+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:36.038+0000] {docker.py:413} INFO - 2024-06-19 09:59:36,025:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T09:59:36.455+0000] {docker.py:413} INFO - 2024-06-19 09:59:36,452:write_to_postgres:ERROR:Error writing batch 4 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:59:36.473+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/4 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.4.734d93b9-440f-412d-8b1c-e5ee91262569.tmp
[2024-06-19T09:59:36.510+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.4.734d93b9-440f-412d-8b1c-e5ee91262569.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/4
[2024-06-19T09:59:36.513+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "793a3baf-759b-4e20-abfb-41bc2209f9e4",
  "runId" : "4121a076-e40f-4c6d-b8b1-db566bbb39ce",
  "name" : null,
  "timestamp" : "2024-06-19T09:59:34.930Z",
  "batchId" : 4,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 876,
    "commitOffsets" : 55,
    "getBatch" : 1,
    "latestOffset" : 10,
    "queryPlanning" : 270,
    "triggerExecution" : 1577,
    "walCommit" : 331
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : {
      "elements" : {
        "0" : 30275
      }
    },
    "endOffset" : {
      "elements" : {
        "0" : 30282
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 30282
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:59:36.527+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/5 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.5.5aa6468d-6f30-46f7-af27-fbe9a7b645cf.tmp
[2024-06-19T09:59:36.570+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.5.5aa6468d-6f30-46f7-af27-fbe9a7b645cf.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/5
[2024-06-19T09:59:36.571+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO MicroBatchExecution: Committed offsets for batch 5. Metadata OffsetSeqMetadata(0,1718791176515,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:59:36.622+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:36.623+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:36.659+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:36.660+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:36.839+0000] {docker.py:413} INFO - 2024-06-19 09:59:36,832:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T09:59:37.043+0000] {docker.py:413} INFO - 2024-06-19 09:59:37,038:write_to_postgres:ERROR:Error writing batch 5 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:59:37.058+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/5 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.5.029141d5-f115-4e42-8242-2625044d2d62.tmp
[2024-06-19T09:59:37.131+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.5.029141d5-f115-4e42-8242-2625044d2d62.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/5
[2024-06-19T09:59:37.133+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "793a3baf-759b-4e20-abfb-41bc2209f9e4",
  "runId" : "4121a076-e40f-4c6d-b8b1-db566bbb39ce",
  "name" : null,
  "timestamp" : "2024-06-19T09:59:36.511Z",
  "batchId" : 5,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 407,
    "commitOffsets" : 77,
    "getBatch" : 0,
    "latestOffset" : 4,
    "queryPlanning" : 55,
    "triggerExecution" : 606,
    "walCommit" : 53
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : {
      "elements" : {
        "0" : 30282
      }
    },
    "endOffset" : {
      "elements" : {
        "0" : 31140
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 31140
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:59:37.520+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/2 using temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/.2.2cee87e1-0c39-4165-9b6f-73cc09115277.tmp
[2024-06-19T09:59:37.575+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/.2.2cee87e1-0c39-4165-9b6f-73cc09115277.tmp to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/2
[2024-06-19T09:59:37.579+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO MicroBatchExecution: Committed offsets for batch 2. Metadata OffsetSeqMetadata(0,1718791177499,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:59:37.670+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:37.681+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:37.736+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:37.749+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:37.820+0000] {docker.py:413} INFO - 2024-06-19 09:59:37,817:wait_for_commands:INFO:Received command c on object id p1
[2024-06-19T09:59:37.976+0000] {docker.py:413} INFO - 2024-06-19 09:59:37,974:write_to_postgres:ERROR:Error writing batch 2 to fixtures: Column draw not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:59:37.985+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/2 using temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/.2.73449ba5-1d90-4a8d-8b37-28e90919ea18.tmp
[2024-06-19T09:59:38.019+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/.2.73449ba5-1d90-4a8d-8b37-28e90919ea18.tmp to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/2
[2024-06-19T09:59:38.030+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "7721ff87-38a8-4e53-8e7c-f1590a2ec7db",
  "runId" : "72d1e92f-453c-4776-884b-eccdd60d491a",
  "name" : null,
  "timestamp" : "2024-06-19T09:59:37.487Z",
  "batchId" : 2,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 284,
    "commitOffsets" : 42,
    "getBatch" : 1,
    "latestOffset" : 12,
    "queryPlanning" : 99,
    "triggerExecution" : 529,
    "walCommit" : 79
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[teams]]",
    "startOffset" : {
      "teams" : {
        "0" : 700
      }
    },
    "endOffset" : {
      "teams" : {
        "0" : 720
      }
    },
    "latestOffset" : {
      "teams" : {
        "0" : 720
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:59:38.076+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/3 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.3.7d237eae-a1ff-4a01-b7ce-e4f75f171741.tmp
[2024-06-19T09:59:38.102+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.3.7d237eae-a1ff-4a01-b7ce-e4f75f171741.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/3
24/06/19 09:59:38 INFO MicroBatchExecution: Committed offsets for batch 3. Metadata OffsetSeqMetadata(0,1718791178060,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:59:38.122+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:38.128+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:38.162+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:38.165+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:38.206+0000] {docker.py:413} INFO - 2024-06-19 09:59:38,201:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T09:59:38.417+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-19T09:59:38.420+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO DAGScheduler: Got job 3 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/06/19 09:59:38 INFO DAGScheduler: Final stage: ResultStage 3 (start at NativeMethodAccessorImpl.java:0)
24/06/19 09:59:38 INFO DAGScheduler: Parents of final stage: List()
24/06/19 09:59:38 INFO DAGScheduler: Missing parents: List()
[2024-06-19T09:59:38.421+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO DAGScheduler: Submitting ResultStage 3 (MapPartitionsRDD[80] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T09:59:38.427+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO MemoryStore: Block broadcast_3 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T09:59:38.483+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO MemoryStore: Block broadcast_3_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T09:59:38.492+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO BlockManagerInfo: Added broadcast_3_piece0 in memory on localhost:39421 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:59:38.498+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO SparkContext: Created broadcast 3 from broadcast at DAGScheduler.scala:1580
[2024-06-19T09:59:38.505+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 3 (MapPartitionsRDD[80] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-06-19T09:59:38.510+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO TaskSchedulerImpl: Adding task set 3.0 with 1 tasks resource profile 0
[2024-06-19T09:59:38.513+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO TaskSetManager: Starting task 0.0 in stage 3.0 (TID 3) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11068 bytes)
[2024-06-19T09:59:38.519+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO Executor: Running task 0.0 in stage 3.0 (TID 3)
[2024-06-19T09:59:38.580+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=13300 untilOffset=13307, for query queryId=f8324521-1198-4f6c-b632-0d3b428ef78f batchId=3 taskId=3 partitionId=0
[2024-06-19T09:59:38.590+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 13300 for partition fixtures-0
[2024-06-19T09:59:38.794+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:59:39.301+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:59:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:59:39.303+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13680, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:59:39.340+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor read 7 records through 1 polls (polled  out 380 records), taking 703763542 nanos, during time span of 748925334 nanos.
[2024-06-19T09:59:39.342+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO Executor: Finished task 0.0 in stage 3.0 (TID 3). 1688 bytes result sent to driver
[2024-06-19T09:59:39.346+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO TaskSetManager: Finished task 0.0 in stage 3.0 (TID 3) in 840 ms on localhost (executor driver) (1/1)
[2024-06-19T09:59:39.347+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO TaskSchedulerImpl: Removed TaskSet 3.0, whose tasks have all completed, from pool
[2024-06-19T09:59:39.349+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO DAGScheduler: ResultStage 3 (start at NativeMethodAccessorImpl.java:0) finished in 0.924 s
[2024-06-19T09:59:39.350+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO DAGScheduler: Job 3 is finished. Cancelling potential speculative or zombie tasks for this job
24/06/19 09:59:39 INFO TaskSchedulerImpl: Killing all running tasks in stage 3: Stage finished
[2024-06-19T09:59:39.350+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO DAGScheduler: Job 3 finished: start at NativeMethodAccessorImpl.java:0, took 0.932229 s
[2024-06-19T09:59:39.382+0000] {docker.py:413} INFO - 2024-06-19 09:59:39,380:write_to_postgres:INFO:Batch 3 written to fixtures successfully.
[2024-06-19T09:59:39.394+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/3 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.3.0696715d-6be2-4d79-a19e-77afe980e7dc.tmp
[2024-06-19T09:59:39.441+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.3.0696715d-6be2-4d79-a19e-77afe980e7dc.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/3
[2024-06-19T09:59:39.453+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "f8324521-1198-4f6c-b632-0d3b428ef78f",
  "runId" : "32b74668-d7fa-43eb-a8fb-8bdcb3cd0d61",
  "name" : null,
  "timestamp" : "2024-06-19T09:59:38.057Z",
  "batchId" : 3,
  "numInputRows" : 7,
  "inputRowsPerSecond" : 583.3333333333334,
  "processedRowsPerSecond" : 5.094614264919941,
  "durationMs" : {
    "addBatch" : 1242,
    "commitOffsets" : 50,
    "getBatch" : 0,
    "latestOffset" : 3,
    "queryPlanning" : 35,
    "triggerExecution" : 1374,
    "walCommit" : 40
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : {
      "fixtures" : {
        "0" : 13300
      }
    },
    "endOffset" : {
      "fixtures" : {
        "0" : 13307
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 13307
      }
    },
    "numInputRows" : 7,
    "inputRowsPerSecond" : 583.3333333333334,
    "processedRowsPerSecond" : 5.094614264919941,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:59:39.472+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/4 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.4.1ba7ce3e-1c93-4a6f-b472-8c9dea2a146b.tmp
[2024-06-19T09:59:39.524+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.4.1ba7ce3e-1c93-4a6f-b472-8c9dea2a146b.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/4
[2024-06-19T09:59:39.526+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO MicroBatchExecution: Committed offsets for batch 4. Metadata OffsetSeqMetadata(0,1718791179454,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:59:39.543+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:39.545+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:39.589+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:39.608+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:39.625+0000] {docker.py:413} INFO - 2024-06-19 09:59:39,616:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T09:59:40.038+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
24/06/19 09:59:40 INFO DAGScheduler: Got job 4 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/06/19 09:59:40 INFO DAGScheduler: Final stage: ResultStage 4 (start at NativeMethodAccessorImpl.java:0)
24/06/19 09:59:40 INFO DAGScheduler: Parents of final stage: List()
[2024-06-19T09:59:40.042+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO DAGScheduler: Missing parents: List()
[2024-06-19T09:59:40.046+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO DAGScheduler: Submitting ResultStage 4 (MapPartitionsRDD[89] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T09:59:40.058+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO MemoryStore: Block broadcast_4 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T09:59:40.077+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO MemoryStore: Block broadcast_4_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T09:59:40.092+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO BlockManagerInfo: Added broadcast_4_piece0 in memory on localhost:39421 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:59:40.097+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO SparkContext: Created broadcast 4 from broadcast at DAGScheduler.scala:1580
24/06/19 09:59:40 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 4 (MapPartitionsRDD[89] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
24/06/19 09:59:40 INFO TaskSchedulerImpl: Adding task set 4.0 with 1 tasks resource profile 0
[2024-06-19T09:59:40.107+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO TaskSetManager: Starting task 0.0 in stage 4.0 (TID 4) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11068 bytes)
[2024-06-19T09:59:40.114+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO Executor: Running task 0.0 in stage 4.0 (TID 4)
[2024-06-19T09:59:40.147+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=13307 untilOffset=13680, for query queryId=f8324521-1198-4f6c-b632-0d3b428ef78f batchId=4 taskId=4 partitionId=0
[2024-06-19T09:59:40.459+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor read 373 records through 0 polls (polled  out 0 records), taking 0 nanos, during time span of 307277708 nanos.
[2024-06-19T09:59:40.465+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO Executor: Finished task 0.0 in stage 4.0 (TID 4). 1731 bytes result sent to driver
[2024-06-19T09:59:40.478+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO TaskSetManager: Finished task 0.0 in stage 4.0 (TID 4) in 374 ms on localhost (executor driver) (1/1)
[2024-06-19T09:59:40.481+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO TaskSchedulerImpl: Removed TaskSet 4.0, whose tasks have all completed, from pool
[2024-06-19T09:59:40.521+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO DAGScheduler: ResultStage 4 (start at NativeMethodAccessorImpl.java:0) finished in 0.458 s
[2024-06-19T09:59:40.524+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO DAGScheduler: Job 4 is finished. Cancelling potential speculative or zombie tasks for this job
24/06/19 09:59:40 INFO TaskSchedulerImpl: Killing all running tasks in stage 4: Stage finished
[2024-06-19T09:59:40.536+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO DAGScheduler: Job 4 finished: start at NativeMethodAccessorImpl.java:0, took 0.487436 s
[2024-06-19T09:59:40.801+0000] {docker.py:413} INFO - 2024-06-19 09:59:40,774:write_to_postgres:INFO:Batch 4 written to fixtures successfully.
[2024-06-19T09:59:40.910+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/4 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.4.5f7ed008-d4ef-42c6-8376-c4574f3c8bb4.tmp
[2024-06-19T09:59:41.029+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.4.5f7ed008-d4ef-42c6-8376-c4574f3c8bb4.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/4
[2024-06-19T09:59:41.060+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "f8324521-1198-4f6c-b632-0d3b428ef78f",
  "runId" : "32b74668-d7fa-43eb-a8fb-8bdcb3cd0d61",
  "name" : null,
  "timestamp" : "2024-06-19T09:59:39.451Z",
  "batchId" : 4,
  "numInputRows" : 373,
  "inputRowsPerSecond" : 267.5753228120517,
  "processedRowsPerSecond" : 236.6751269035533,
  "durationMs" : {
    "addBatch" : 1239,
    "commitOffsets" : 234,
    "getBatch" : 0,
    "latestOffset" : 3,
    "queryPlanning" : 34,
    "triggerExecution" : 1576,
    "walCommit" : 59
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : {
      "fixtures" : {
        "0" : 13307
      }
    },
    "endOffset" : {
      "fixtures" : {
        "0" : 13680
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 13680
      }
    },
    "numInputRows" : 373,
    "inputRowsPerSecond" : 267.5753228120517,
    "processedRowsPerSecond" : 236.6751269035533,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:59:47.136+0000] {docker.py:413} INFO - 24/06/19 09:59:47 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:48.029+0000] {docker.py:413} INFO - 24/06/19 09:59:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:51.045+0000] {docker.py:413} INFO - 24/06/19 09:59:51 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:51.242+0000] {docker.py:413} INFO - 24/06/19 09:59:51 INFO BlockManagerInfo: Removed broadcast_4_piece0 on localhost:39421 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:59:51.244+0000] {docker.py:413} INFO - 24/06/19 09:59:51 INFO BlockManagerInfo: Removed broadcast_3_piece0 on localhost:39421 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:59:57.139+0000] {docker.py:413} INFO - 24/06/19 09:59:57 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:58.037+0000] {docker.py:413} INFO - 24/06/19 09:59:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:01.050+0000] {docker.py:413} INFO - 24/06/19 10:00:01 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:07.140+0000] {docker.py:413} INFO - 24/06/19 10:00:07 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:08.061+0000] {docker.py:413} INFO - 24/06/19 10:00:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:11.051+0000] {docker.py:413} INFO - 24/06/19 10:00:11 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:17.184+0000] {docker.py:413} INFO - 24/06/19 10:00:17 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:18.049+0000] {docker.py:413} INFO - 24/06/19 10:00:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:21.053+0000] {docker.py:413} INFO - 24/06/19 10:00:21 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:27.188+0000] {docker.py:413} INFO - 24/06/19 10:00:27 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:28.126+0000] {docker.py:413} INFO - 24/06/19 10:00:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:28.696+0000] {docker.py:413} INFO - 24/06/19 10:00:28 INFO NetworkClient: [AdminClient clientId=adminclient-2] Node -1 disconnected.
[2024-06-19T10:00:28.700+0000] {docker.py:413} INFO - 24/06/19 10:00:28 INFO NetworkClient: [AdminClient clientId=adminclient-1] Node -1 disconnected.
[2024-06-19T10:00:28.702+0000] {docker.py:413} INFO - 24/06/19 10:00:28 INFO NetworkClient: [AdminClient clientId=adminclient-3] Node -1 disconnected.
[2024-06-19T10:00:31.054+0000] {docker.py:413} INFO - 24/06/19 10:00:31 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:37.190+0000] {docker.py:413} INFO - 24/06/19 10:00:37 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:38.069+0000] {docker.py:413} INFO - 24/06/19 10:00:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:41.063+0000] {docker.py:413} INFO - 24/06/19 10:00:41 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:47.210+0000] {docker.py:413} INFO - 24/06/19 10:00:47 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:48.071+0000] {docker.py:413} INFO - 24/06/19 10:00:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:51.072+0000] {docker.py:413} INFO - 24/06/19 10:00:51 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:57.214+0000] {docker.py:413} INFO - 24/06/19 10:00:57 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:58.073+0000] {docker.py:413} INFO - 24/06/19 10:00:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:01.079+0000] {docker.py:413} INFO - 24/06/19 10:01:01 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:07.198+0000] {docker.py:413} INFO - 24/06/19 10:01:07 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:08.074+0000] {docker.py:413} INFO - 24/06/19 10:01:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:11.086+0000] {docker.py:413} INFO - 24/06/19 10:01:11 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:17.208+0000] {docker.py:413} INFO - 24/06/19 10:01:17 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:18.077+0000] {docker.py:413} INFO - 24/06/19 10:01:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:21.093+0000] {docker.py:413} INFO - 24/06/19 10:01:21 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:27.219+0000] {docker.py:413} INFO - 24/06/19 10:01:27 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:28.079+0000] {docker.py:413} INFO - 24/06/19 10:01:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:31.135+0000] {docker.py:413} INFO - 24/06/19 10:01:31 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:37.362+0000] {docker.py:413} INFO - 24/06/19 10:01:37 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:38.086+0000] {docker.py:413} INFO - 24/06/19 10:01:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:41.096+0000] {docker.py:413} INFO - 24/06/19 10:01:41 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:47.261+0000] {docker.py:413} INFO - 24/06/19 10:01:47 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:48.089+0000] {docker.py:413} INFO - 24/06/19 10:01:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:51.100+0000] {docker.py:413} INFO - 24/06/19 10:01:51 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:57.265+0000] {docker.py:413} INFO - 24/06/19 10:01:57 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:58.091+0000] {docker.py:413} INFO - 24/06/19 10:01:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:01.109+0000] {docker.py:413} INFO - 24/06/19 10:02:01 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:07.273+0000] {docker.py:413} INFO - 24/06/19 10:02:07 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:08.091+0000] {docker.py:413} INFO - 24/06/19 10:02:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:11.112+0000] {docker.py:413} INFO - 24/06/19 10:02:11 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:17.278+0000] {docker.py:413} INFO - 24/06/19 10:02:17 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:18.102+0000] {docker.py:413} INFO - 24/06/19 10:02:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:21.119+0000] {docker.py:413} INFO - 24/06/19 10:02:21 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:27.289+0000] {docker.py:413} INFO - 24/06/19 10:02:27 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:28.114+0000] {docker.py:413} INFO - 24/06/19 10:02:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:31.226+0000] {docker.py:413} INFO - 24/06/19 10:02:31 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:37.294+0000] {docker.py:413} INFO - 24/06/19 10:02:37 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:38.124+0000] {docker.py:413} INFO - 24/06/19 10:02:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:41.213+0000] {docker.py:413} INFO - 24/06/19 10:02:41 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:47.299+0000] {docker.py:413} INFO - 24/06/19 10:02:47 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:48.142+0000] {docker.py:413} INFO - 24/06/19 10:02:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:51.245+0000] {docker.py:413} INFO - 24/06/19 10:02:51 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:57.304+0000] {docker.py:413} INFO - 24/06/19 10:02:57 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:58.156+0000] {docker.py:413} INFO - 24/06/19 10:02:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:01.227+0000] {docker.py:413} INFO - 24/06/19 10:03:01 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:07.308+0000] {docker.py:413} INFO - 24/06/19 10:03:07 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:08.154+0000] {docker.py:413} INFO - 24/06/19 10:03:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:11.260+0000] {docker.py:413} INFO - 24/06/19 10:03:11 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:17.312+0000] {docker.py:413} INFO - 24/06/19 10:03:17 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:18.156+0000] {docker.py:413} INFO - 24/06/19 10:03:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:21.269+0000] {docker.py:413} INFO - 24/06/19 10:03:21 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:27.309+0000] {docker.py:413} INFO - 24/06/19 10:03:27 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:28.161+0000] {docker.py:413} INFO - 24/06/19 10:03:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:31.271+0000] {docker.py:413} INFO - 24/06/19 10:03:31 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:37.326+0000] {docker.py:413} INFO - 24/06/19 10:03:37 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:38.167+0000] {docker.py:413} INFO - 24/06/19 10:03:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:41.269+0000] {docker.py:413} INFO - 24/06/19 10:03:41 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:47.328+0000] {docker.py:413} INFO - 24/06/19 10:03:47 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:48.169+0000] {docker.py:413} INFO - 24/06/19 10:03:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:51.271+0000] {docker.py:413} INFO - 24/06/19 10:03:51 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:57.344+0000] {docker.py:413} INFO - 24/06/19 10:03:57 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:58.171+0000] {docker.py:413} INFO - 24/06/19 10:03:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:01.279+0000] {docker.py:413} INFO - 24/06/19 10:04:01 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:07.351+0000] {docker.py:413} INFO - 24/06/19 10:04:07 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:08.176+0000] {docker.py:413} INFO - 24/06/19 10:04:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:11.285+0000] {docker.py:413} INFO - 24/06/19 10:04:11 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:17.370+0000] {docker.py:413} INFO - 24/06/19 10:04:17 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:18.185+0000] {docker.py:413} INFO - 24/06/19 10:04:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:21.293+0000] {docker.py:413} INFO - 24/06/19 10:04:21 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:27.351+0000] {docker.py:413} INFO - 24/06/19 10:04:27 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:28.183+0000] {docker.py:413} INFO - 24/06/19 10:04:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:31.309+0000] {docker.py:413} INFO - 24/06/19 10:04:31 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:35.660+0000] {docker.py:413} INFO - 24/06/19 10:04:35 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/6 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.6.d5949efb-7c71-45e3-9809-a4d78839e1e6.tmp
[2024-06-19T10:04:35.722+0000] {docker.py:413} INFO - 24/06/19 10:04:35 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.6.d5949efb-7c71-45e3-9809-a4d78839e1e6.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/6
[2024-06-19T10:04:35.724+0000] {docker.py:413} INFO - 24/06/19 10:04:35 INFO MicroBatchExecution: Committed offsets for batch 6. Metadata OffsetSeqMetadata(0,1718791475597,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T10:04:36.008+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:36.069+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:36.163+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:36.166+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:36.491+0000] {docker.py:413} INFO - 2024-06-19 10:04:36,471:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T10:04:36.815+0000] {docker.py:413} INFO - 2024-06-19 10:04:36,809:write_to_postgres:ERROR:Error writing batch 6 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T10:04:36.828+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/6 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.6.2591998b-93a5-4569-924b-964549e47934.tmp
[2024-06-19T10:04:36.896+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.6.2591998b-93a5-4569-924b-964549e47934.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/6
[2024-06-19T10:04:36.922+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "793a3baf-759b-4e20-abfb-41bc2209f9e4",
  "runId" : "4121a076-e40f-4c6d-b8b1-db566bbb39ce",
  "name" : null,
  "timestamp" : "2024-06-19T10:04:35.594Z",
  "batchId" : 6,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 690,
    "commitOffsets" : 84,
    "getBatch" : 1,
    "latestOffset" : 3,
    "queryPlanning" : 335,
    "triggerExecution" : 1305,
    "walCommit" : 132
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : {
      "elements" : {
        "0" : 31140
      }
    },
    "endOffset" : {
      "elements" : {
        "0" : 31154
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 31154
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T10:04:36.931+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/7 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.7.7c20df7e-039e-4252-a46a-231677a8c191.tmp
[2024-06-19T10:04:36.972+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/.7.7c20df7e-039e-4252-a46a-231677a8c191.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/offsets/7
[2024-06-19T10:04:36.975+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO MicroBatchExecution: Committed offsets for batch 7. Metadata OffsetSeqMetadata(0,1718791476918,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T10:04:36.994+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:36.999+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:37.026+0000] {docker.py:413} INFO - 24/06/19 10:04:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:37.035+0000] {docker.py:413} INFO - 24/06/19 10:04:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:37.294+0000] {docker.py:413} INFO - 2024-06-19 10:04:37,290:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T10:04:37.992+0000] {docker.py:413} INFO - 2024-06-19 10:04:37,817:write_to_postgres:ERROR:Error writing batch 7 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T10:04:38.148+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/7 using temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.7.5f09e4e4-0e0c-4f6d-9c65-3ed98ba58f67.tmp
[2024-06-19T10:04:38.199+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:38.344+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/.7.5f09e4e4-0e0c-4f6d-9c65-3ed98ba58f67.tmp to file:/tmp/temporary-97ed3ec4-9fee-429a-b341-527d29a493b3/commits/7
[2024-06-19T10:04:38.354+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "793a3baf-759b-4e20-abfb-41bc2209f9e4",
  "runId" : "4121a076-e40f-4c6d-b8b1-db566bbb39ce",
  "name" : null,
  "timestamp" : "2024-06-19T10:04:36.915Z",
  "batchId" : 7,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 822,
    "commitOffsets" : 520,
    "getBatch" : 0,
    "latestOffset" : 3,
    "queryPlanning" : 21,
    "triggerExecution" : 1425,
    "walCommit" : 52
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : {
      "elements" : {
        "0" : 31154
      }
    },
    "endOffset" : {
      "elements" : {
        "0" : 32005
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 32005
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T10:04:38.800+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/3 using temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/.3.288105a9-8867-4245-b205-17a90960ce6d.tmp
[2024-06-19T10:04:38.856+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/.3.288105a9-8867-4245-b205-17a90960ce6d.tmp to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/offsets/3
[2024-06-19T10:04:38.861+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO MicroBatchExecution: Committed offsets for batch 3. Metadata OffsetSeqMetadata(0,1718791478774,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T10:04:38.948+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:38.954+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:38.984+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:38.985+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:39.081+0000] {docker.py:413} INFO - 2024-06-19 10:04:39,069:wait_for_commands:INFO:Received command c on object id p1
[2024-06-19T10:04:39.269+0000] {docker.py:413} INFO - 2024-06-19 10:04:39,267:write_to_postgres:ERROR:Error writing batch 3 to fixtures: Column draw not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T10:04:39.283+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/3 using temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/.3.a1d8afbe-2d2d-482a-ae39-7def348c0d10.tmp
[2024-06-19T10:04:39.309+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/.3.a1d8afbe-2d2d-482a-ae39-7def348c0d10.tmp to file:/tmp/temporary-b2b0885d-06da-4d6b-aa95-4f49dea5ca91/commits/3
[2024-06-19T10:04:39.310+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "7721ff87-38a8-4e53-8e7c-f1590a2ec7db",
  "runId" : "72d1e92f-453c-4776-884b-eccdd60d491a",
  "name" : null,
  "timestamp" : "2024-06-19T10:04:38.758Z",
  "batchId" : 3,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 304,
    "commitOffsets" : 39,
    "getBatch" : 0,
    "latestOffset" : 16,
    "queryPlanning" : 92,
    "triggerExecution" : 549,
    "walCommit" : 86
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[teams]]",
    "startOffset" : {
      "teams" : {
        "0" : 720
      }
    },
    "endOffset" : {
      "teams" : {
        "0" : 740
      }
    },
    "latestOffset" : {
      "teams" : {
        "0" : 740
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T10:04:39.362+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/5 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.5.8c6df874-9c9e-4077-a40a-cfe19838bbbd.tmp
[2024-06-19T10:04:39.380+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.5.8c6df874-9c9e-4077-a40a-cfe19838bbbd.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/5
24/06/19 10:04:39 INFO MicroBatchExecution: Committed offsets for batch 5. Metadata OffsetSeqMetadata(0,1718791479349,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T10:04:39.391+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:39.393+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:39.432+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:39.438+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:39.473+0000] {docker.py:413} INFO - 2024-06-19 10:04:39,470:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T10:04:39.805+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-19T10:04:39.818+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO DAGScheduler: Got job 5 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2024-06-19T10:04:39.822+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO DAGScheduler: Final stage: ResultStage 5 (start at NativeMethodAccessorImpl.java:0)
[2024-06-19T10:04:39.822+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO DAGScheduler: Parents of final stage: List()
[2024-06-19T10:04:39.823+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO DAGScheduler: Missing parents: List()
[2024-06-19T10:04:39.852+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO DAGScheduler: Submitting ResultStage 5 (MapPartitionsRDD[113] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T10:04:39.966+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO MemoryStore: Block broadcast_5 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T10:04:40.194+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO MemoryStore: Block broadcast_5_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T10:04:40.400+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO BlockManagerInfo: Added broadcast_5_piece0 in memory on localhost:39421 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T10:04:40.413+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO SparkContext: Created broadcast 5 from broadcast at DAGScheduler.scala:1580
[2024-06-19T10:04:40.417+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 5 (MapPartitionsRDD[113] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-06-19T10:04:40.418+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO TaskSchedulerImpl: Adding task set 5.0 with 1 tasks resource profile 0
[2024-06-19T10:04:40.605+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO TaskSetManager: Starting task 0.0 in stage 5.0 (TID 5) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11068 bytes)
[2024-06-19T10:04:40.691+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO Executor: Running task 0.0 in stage 5.0 (TID 5)
[2024-06-19T10:04:40.908+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=13680 untilOffset=13708, for query queryId=f8324521-1198-4f6c-b632-0d3b428ef78f batchId=5 taskId=5 partitionId=0
[2024-06-19T10:04:40.926+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to offset 13680 for partition fixtures-0
[2024-06-19T10:04:40.929+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO NetworkClient: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Node -1 disconnected.
[2024-06-19T10:04:40.992+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T10:04:41.500+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T10:04:41.502+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T10:04:41.505+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor-1, groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=14060, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T10:04:41.649+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor read 28 records through 1 polls (polled  out 380 records), taking 579596916 nanos, during time span of 726151458 nanos.
[2024-06-19T10:04:41.655+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO Executor: Finished task 0.0 in stage 5.0 (TID 5). 1731 bytes result sent to driver
[2024-06-19T10:04:41.659+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO TaskSetManager: Finished task 0.0 in stage 5.0 (TID 5) in 1083 ms on localhost (executor driver) (1/1)
[2024-06-19T10:04:41.662+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO DAGScheduler: ResultStage 5 (start at NativeMethodAccessorImpl.java:0) finished in 1.837 s
[2024-06-19T10:04:41.664+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO TaskSchedulerImpl: Removed TaskSet 5.0, whose tasks have all completed, from pool
[2024-06-19T10:04:41.671+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO DAGScheduler: Job 5 is finished. Cancelling potential speculative or zombie tasks for this job
24/06/19 10:04:41 INFO TaskSchedulerImpl: Killing all running tasks in stage 5: Stage finished
[2024-06-19T10:04:41.672+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO DAGScheduler: Job 5 finished: start at NativeMethodAccessorImpl.java:0, took 1.853094 s
[2024-06-19T10:04:41.813+0000] {docker.py:413} INFO - 2024-06-19 10:04:41,803:write_to_postgres:INFO:Batch 5 written to fixtures successfully.
[2024-06-19T10:04:41.885+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/5 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.5.a102235a-d7b8-4f5d-ab19-9ec565f56d9d.tmp
[2024-06-19T10:04:41.967+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.5.a102235a-d7b8-4f5d-ab19-9ec565f56d9d.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/5
[2024-06-19T10:04:41.979+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "f8324521-1198-4f6c-b632-0d3b428ef78f",
  "runId" : "32b74668-d7fa-43eb-a8fb-8bdcb3cd0d61",
  "name" : null,
  "timestamp" : "2024-06-19T10:04:39.347Z",
  "batchId" : 5,
  "numInputRows" : 28,
  "inputRowsPerSecond" : 2333.3333333333335,
  "processedRowsPerSecond" : 10.691103474608628,
  "durationMs" : {
    "addBatch" : 2403,
    "commitOffsets" : 155,
    "getBatch" : 0,
    "latestOffset" : 2,
    "queryPlanning" : 19,
    "triggerExecution" : 2619,
    "walCommit" : 29
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : {
      "fixtures" : {
        "0" : 13680
      }
    },
    "endOffset" : {
      "fixtures" : {
        "0" : 13708
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 13708
      }
    },
    "numInputRows" : 28,
    "inputRowsPerSecond" : 2333.3333333333335,
    "processedRowsPerSecond" : 10.691103474608628,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T10:04:41.999+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/6 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.6.6ab847a3-a73a-4b3a-97fe-13d26a4cb0c7.tmp
[2024-06-19T10:04:42.051+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/.6.6ab847a3-a73a-4b3a-97fe-13d26a4cb0c7.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/offsets/6
[2024-06-19T10:04:42.053+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO MicroBatchExecution: Committed offsets for batch 6. Metadata OffsetSeqMetadata(0,1718791481977,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T10:04:42.103+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:42.106+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:42.139+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:42.142+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:42.241+0000] {docker.py:413} INFO - 2024-06-19 10:04:42,211:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T10:04:42.673+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-19T10:04:42.678+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO DAGScheduler: Got job 6 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/06/19 10:04:42 INFO DAGScheduler: Final stage: ResultStage 6 (start at NativeMethodAccessorImpl.java:0)
24/06/19 10:04:42 INFO DAGScheduler: Parents of final stage: List()
[2024-06-19T10:04:42.687+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO DAGScheduler: Missing parents: List()
24/06/19 10:04:42 INFO DAGScheduler: Submitting ResultStage 6 (MapPartitionsRDD[122] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T10:04:42.696+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO MemoryStore: Block broadcast_6 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T10:04:42.700+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO MemoryStore: Block broadcast_6_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T10:04:42.718+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO BlockManagerInfo: Added broadcast_6_piece0 in memory on localhost:39421 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T10:04:42.731+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO SparkContext: Created broadcast 6 from broadcast at DAGScheduler.scala:1580
[2024-06-19T10:04:42.770+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 6 (MapPartitionsRDD[122] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-06-19T10:04:42.774+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO TaskSchedulerImpl: Adding task set 6.0 with 1 tasks resource profile 0
[2024-06-19T10:04:42.777+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO TaskSetManager: Starting task 0.0 in stage 6.0 (TID 6) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11068 bytes)
[2024-06-19T10:04:42.780+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO Executor: Running task 0.0 in stage 6.0 (TID 6)
[2024-06-19T10:04:42.876+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=13708 untilOffset=14060, for query queryId=f8324521-1198-4f6c-b632-0d3b428ef78f batchId=6 taskId=6 partitionId=0
[2024-06-19T10:04:43.266+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-b3e17e0f-98f0-4947-b5c4-9764d57566b7--534187052-executor read 352 records through 0 polls (polled  out 0 records), taking 0 nanos, during time span of 379701833 nanos.
[2024-06-19T10:04:43.294+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO Executor: Finished task 0.0 in stage 6.0 (TID 6). 1731 bytes result sent to driver
[2024-06-19T10:04:43.317+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO TaskSetManager: Finished task 0.0 in stage 6.0 (TID 6) in 554 ms on localhost (executor driver) (1/1)
[2024-06-19T10:04:43.323+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO TaskSchedulerImpl: Removed TaskSet 6.0, whose tasks have all completed, from pool
[2024-06-19T10:04:43.325+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO DAGScheduler: ResultStage 6 (start at NativeMethodAccessorImpl.java:0) finished in 0.632 s
[2024-06-19T10:04:43.329+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO DAGScheduler: Job 6 is finished. Cancelling potential speculative or zombie tasks for this job
[2024-06-19T10:04:43.330+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO TaskSchedulerImpl: Killing all running tasks in stage 6: Stage finished
[2024-06-19T10:04:43.331+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO DAGScheduler: Job 6 finished: start at NativeMethodAccessorImpl.java:0, took 0.643174 s
[2024-06-19T10:04:43.487+0000] {docker.py:413} INFO - 2024-06-19 10:04:43,480:write_to_postgres:INFO:Batch 6 written to fixtures successfully.
[2024-06-19T10:04:43.539+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/6 using temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.6.ac002356-86e3-4c7e-bc21-62f2893bbaef.tmp
[2024-06-19T10:04:43.618+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/.6.ac002356-86e3-4c7e-bc21-62f2893bbaef.tmp to file:/tmp/temporary-41f6c077-a263-4c57-9e95-66fd68f32005/commits/6
[2024-06-19T10:04:43.626+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "f8324521-1198-4f6c-b632-0d3b428ef78f",
  "runId" : "32b74668-d7fa-43eb-a8fb-8bdcb3cd0d61",
  "name" : null,
  "timestamp" : "2024-06-19T10:04:41.972Z",
  "batchId" : 6,
  "numInputRows" : 352,
  "inputRowsPerSecond" : 134.0952380952381,
  "processedRowsPerSecond" : 214.63414634146343,
  "durationMs" : {
    "addBatch" : 1375,
    "commitOffsets" : 122,
    "getBatch" : 0,
    "latestOffset" : 5,
    "queryPlanning" : 65,
    "triggerExecution" : 1640,
    "walCommit" : 70
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : {
      "fixtures" : {
        "0" : 13708
      }
    },
    "endOffset" : {
      "fixtures" : {
        "0" : 14060
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 14060
      }
    },
    "numInputRows" : 352,
    "inputRowsPerSecond" : 134.0952380952381,
    "processedRowsPerSecond" : 214.63414634146343,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T10:04:48.369+0000] {docker.py:413} INFO - 24/06/19 10:04:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:49.317+0000] {docker.py:413} INFO - 24/06/19 10:04:49 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:53.642+0000] {docker.py:413} INFO - 24/06/19 10:04:53 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:55.001+0000] {docker.py:413} INFO - 24/06/19 10:04:54 INFO BlockManagerInfo: Removed broadcast_6_piece0 on localhost:39421 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T10:04:55.010+0000] {docker.py:413} INFO - 24/06/19 10:04:55 INFO BlockManagerInfo: Removed broadcast_5_piece0 on localhost:39421 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T10:04:58.369+0000] {docker.py:413} INFO - 24/06/19 10:04:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:59.318+0000] {docker.py:413} INFO - 24/06/19 10:04:59 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:03.657+0000] {docker.py:413} INFO - 24/06/19 10:05:03 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:08.387+0000] {docker.py:413} INFO - 24/06/19 10:05:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:09.326+0000] {docker.py:413} INFO - 24/06/19 10:05:09 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:13.648+0000] {docker.py:413} INFO - 24/06/19 10:05:13 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:18.385+0000] {docker.py:413} INFO - 24/06/19 10:05:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:19.333+0000] {docker.py:413} INFO - 24/06/19 10:05:19 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:23.650+0000] {docker.py:413} INFO - 24/06/19 10:05:23 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:28.388+0000] {docker.py:413} INFO - 24/06/19 10:05:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:29.335+0000] {docker.py:413} INFO - 24/06/19 10:05:29 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:33.656+0000] {docker.py:413} INFO - 24/06/19 10:05:33 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:38.404+0000] {docker.py:413} INFO - 24/06/19 10:05:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:39.346+0000] {docker.py:413} INFO - 24/06/19 10:05:39 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:43.664+0000] {docker.py:413} INFO - 24/06/19 10:05:43 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:48.417+0000] {docker.py:413} INFO - 24/06/19 10:05:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:49.368+0000] {docker.py:413} INFO - 24/06/19 10:05:49 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:53.674+0000] {docker.py:413} INFO - 24/06/19 10:05:53 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:58.424+0000] {docker.py:413} INFO - 24/06/19 10:05:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:59.368+0000] {docker.py:413} INFO - 24/06/19 10:05:59 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:03.699+0000] {docker.py:413} INFO - 24/06/19 10:06:03 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:08.424+0000] {docker.py:413} INFO - 24/06/19 10:06:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:09.398+0000] {docker.py:413} INFO - 24/06/19 10:06:09 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:13.683+0000] {docker.py:413} INFO - 24/06/19 10:06:13 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:18.415+0000] {docker.py:413} INFO - 24/06/19 10:06:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:19.400+0000] {docker.py:413} INFO - 24/06/19 10:06:19 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:23.713+0000] {docker.py:413} INFO - 24/06/19 10:06:23 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:28.457+0000] {docker.py:413} INFO - 24/06/19 10:06:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:29.425+0000] {docker.py:413} INFO - 24/06/19 10:06:29 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:33.691+0000] {docker.py:413} INFO - 24/06/19 10:06:33 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:38.457+0000] {docker.py:413} INFO - 24/06/19 10:06:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:39.434+0000] {docker.py:413} INFO - 24/06/19 10:06:39 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:43.698+0000] {docker.py:413} INFO - 24/06/19 10:06:43 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:48.465+0000] {docker.py:413} INFO - 24/06/19 10:06:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:49.439+0000] {docker.py:413} INFO - 24/06/19 10:06:49 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:53.476+0000] {local_task_job_runner.py:115} ERROR - Received SIGTERM. Terminating subprocesses
[2024-06-19T10:06:53.598+0000] {process_utils.py:131} INFO - Sending 15 to group 416. PIDs of all processes in the group: [416]
[2024-06-19T10:06:53.606+0000] {process_utils.py:86} INFO - Sending the signal 15 to group 416
[2024-06-19T10:06:53.630+0000] {taskinstance.py:1632} ERROR - Received SIGTERM. Terminating subprocesses.
[2024-06-19T10:06:53.666+0000] {docker.py:505} INFO - Stopping docker container
[2024-06-19T10:07:01.726+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 268, in _raise_for_status
    response.raise_for_status()
  File "/home/airflow/.local/lib/python3.8/site-packages/requests/models.py", line 1021, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://docker-proxy:2375/v1.44/containers/create

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 348, in _run_image
    return self._run_image_with_mounts([*self.mounts, tmp_mount], add_tmp_variable=True)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 375, in _run_image_with_mounts
    self.container = self.cli.create_container(
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/container.py", line 431, in create_container
    return self.create_container_from_config(config, name, platform)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/container.py", line 448, in create_container_from_config
    return self._result(res, True)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 274, in _result
    self._raise_for_status(response)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 270, in _raise_for_status
    raise create_api_error_from_http_exception(e) from e
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/errors.py", line 39, in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation) from e
docker.errors.APIError: 400 Client Error for http://docker-proxy:2375/v1.44/containers/create: Bad Request ("invalid mount config for type "bind": bind source path does not exist: /host_mnt/private/tmp/airflowtmprmg2m67v")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 486, in execute
    return self._run_image()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 357, in _run_image
    return self._run_image_with_mounts(self.mounts, add_tmp_variable=False)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 410, in _run_image_with_mounts
    for log_chunk in logstream:
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/types/daemon.py", line 29, in __next__
    return next(self._stream)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 422, in <genexpr>
    gen = (data for (_, data) in gen)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/utils/socket.py", line 112, in frames_iter_no_tty
    (stream, n) = next_frame_header(socket)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/utils/socket.py", line 84, in next_frame_header
    data = read_exactly(socket, 8)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/utils/socket.py", line 69, in read_exactly
    next_data = read(socket, n - len(data))
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/utils/socket.py", line 40, in read
    poll.poll()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 1634, in signal_handler
    raise AirflowException("Task received SIGTERM signal")
airflow.exceptions.AirflowException: Task received SIGTERM signal
[2024-06-19T10:07:01.760+0000] {taskinstance.py:1400} INFO - Marking task as UP_FOR_RETRY. dag_id=kafka_spark_dag, task_id=pyspark_consumer, execution_date=20240619T094932, start_date=20240619T095441, end_date=20240619T100701
[2024-06-19T10:07:01.856+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 153 for task pyspark_consumer (Task received SIGTERM signal; 416)
[2024-06-19T10:07:01.910+0000] {process_utils.py:79} INFO - Process psutil.Process(pid=416, status='terminated', exitcode=1, started='09:54:40') (416) terminated with exit code 1
[2024-06-19T10:07:01.933+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 143
[2024-06-19T10:07:02.137+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
