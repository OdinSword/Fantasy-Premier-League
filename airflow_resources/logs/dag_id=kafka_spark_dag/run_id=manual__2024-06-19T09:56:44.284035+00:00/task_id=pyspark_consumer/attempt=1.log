[2024-06-19T09:56:50.209+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-06-19T09:56:44.284035+00:00 [queued]>
[2024-06-19T09:56:50.219+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-06-19T09:56:44.284035+00:00 [queued]>
[2024-06-19T09:56:50.221+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 2
[2024-06-19T09:56:50.242+0000] {taskinstance.py:1382} INFO - Executing <Task(DockerOperator): pyspark_consumer> on 2024-06-19 09:56:44.284035+00:00
[2024-06-19T09:56:50.246+0000] {standard_task_runner.py:57} INFO - Started process 1401 to run task
[2024-06-19T09:56:50.278+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'kafka_spark_dag', 'pyspark_consumer', 'manual__2024-06-19T09:56:44.284035+00:00', '--job-id', '155', '--raw', '--subdir', 'DAGS_FOLDER/dag_kafka_spark.py', '--cfg-path', '/tmp/tmpkv49upke']
[2024-06-19T09:56:50.281+0000] {standard_task_runner.py:85} INFO - Job 155: Subtask pyspark_consumer
[2024-06-19T09:56:50.346+0000] {task_command.py:416} INFO - Running <TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-06-19T09:56:44.284035+00:00 [running]> on host 2ad9230613d5
[2024-06-19T09:56:50.395+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='kafka_spark_dag' AIRFLOW_CTX_TASK_ID='pyspark_consumer' AIRFLOW_CTX_EXECUTION_DATE='2024-06-19T09:56:44.284035+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-06-19T09:56:44.284035+00:00'
[2024-06-19T09:56:50.472+0000] {docker.py:343} INFO - Starting docker container from image rappel-conso/spark:latest
[2024-06-19T09:56:50.528+0000] {docker.py:351} WARNING - Using remote engine or docker-in-docker and mounting temporary volume from host is not supported. Falling back to `mount_tmp_dir=False` mode. You can set `mount_tmp_dir` parameter to False to disable mounting and remove the warning
[2024-06-19T09:56:50.954+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m09:56:50.95 [0m[38;5;2mINFO [0m ==>
[2024-06-19T09:56:50.955+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m09:56:50.95 [0m[38;5;2mINFO [0m ==> [1mWelcome to the Bitnami spark container[0m
[2024-06-19T09:56:50.956+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m09:56:50.95 [0m[38;5;2mINFO [0m ==> Subscribe to project updates by watching [1mhttps://github.com/bitnami/containers[0m
[2024-06-19T09:56:50.957+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m09:56:50.95 [0m[38;5;2mINFO [0m ==> Submit issues and feature requests at [1mhttps://github.com/bitnami/containers/issues[0m
[2024-06-19T09:56:50.958+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m09:56:50.95 [0m[38;5;2mINFO [0m ==>
[2024-06-19T09:56:50.965+0000] {docker.py:413} INFO - 
[2024-06-19T09:56:52.860+0000] {docker.py:413} INFO - :: loading settings :: url = jar:file:/opt/bitnami/spark/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml
[2024-06-19T09:56:52.992+0000] {docker.py:413} INFO - Ivy Default Cache set to: /opt/bitnami/spark/.ivy2/cache
The jars for the packages stored in: /opt/bitnami/spark/.ivy2/jars
[2024-06-19T09:56:52.994+0000] {docker.py:413} INFO - org.postgresql#postgresql added as a dependency
org.apache.spark#spark-sql-kafka-0-10_2.12 added as a dependency
[2024-06-19T09:56:52.995+0000] {docker.py:413} INFO - :: resolving dependencies :: org.apache.spark#spark-submit-parent-bfcccb28-329b-41e0-baf9-08b15406bb95;1.0
	confs: [default]
[2024-06-19T09:56:54.976+0000] {docker.py:413} INFO - found org.postgresql#postgresql;42.5.4 in central
[2024-06-19T09:56:55.463+0000] {docker.py:413} INFO - found org.checkerframework#checker-qual;3.5.0 in central
[2024-06-19T09:56:59.049+0000] {docker.py:413} INFO - found org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 in central
[2024-06-19T09:56:59.638+0000] {docker.py:413} INFO - found org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 in central
[2024-06-19T09:57:00.107+0000] {docker.py:413} INFO - found org.apache.kafka#kafka-clients;3.4.1 in central
[2024-06-19T09:57:00.591+0000] {docker.py:413} INFO - found org.lz4#lz4-java;1.8.0 in central
[2024-06-19T09:57:01.055+0000] {docker.py:413} INFO - found org.xerial.snappy#snappy-java;1.1.10.3 in central
[2024-06-19T09:57:03.223+0000] {docker.py:413} INFO - found org.slf4j#slf4j-api;2.0.7 in central
[2024-06-19T09:57:07.117+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-runtime;3.3.4 in central
[2024-06-19T09:57:07.606+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-api;3.3.4 in central
[2024-06-19T09:57:11.417+0000] {docker.py:413} INFO - found commons-logging#commons-logging;1.1.3 in central
[2024-06-19T09:57:11.869+0000] {docker.py:413} INFO - found com.google.code.findbugs#jsr305;3.0.0 in central
[2024-06-19T09:57:17.402+0000] {docker.py:413} INFO - found org.apache.commons#commons-pool2;2.11.1 in central
[2024-06-19T09:57:17.651+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/postgresql/postgresql/42.5.4/postgresql-42.5.4.jar ...
[2024-06-19T09:57:18.427+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.postgresql#postgresql;42.5.4!postgresql.jar (1002ms)
[2024-06-19T09:57:18.651+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-sql-kafka-0-10_2.12/3.5.0/spark-sql-kafka-0-10_2.12-3.5.0.jar ...
[2024-06-19T09:57:19.005+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0!spark-sql-kafka-0-10_2.12.jar (574ms)
[2024-06-19T09:57:19.237+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar ...
[2024-06-19T09:57:19.479+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.checkerframework#checker-qual;3.5.0!checker-qual.jar (472ms)
[2024-06-19T09:57:19.703+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-token-provider-kafka-0-10_2.12/3.5.0/spark-token-provider-kafka-0-10_2.12-3.5.0.jar ...
[2024-06-19T09:57:19.938+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0!spark-token-provider-kafka-0-10_2.12.jar (457ms)
[2024-06-19T09:57:20.162+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/kafka/kafka-clients/3.4.1/kafka-clients-3.4.1.jar ...
[2024-06-19T09:57:20.951+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.kafka#kafka-clients;3.4.1!kafka-clients.jar (1012ms)
[2024-06-19T09:57:21.178+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar ...
[2024-06-19T09:57:21.401+0000] {docker.py:413} INFO - [SUCCESSFUL ] com.google.code.findbugs#jsr305;3.0.0!jsr305.jar (448ms)
[2024-06-19T09:57:21.626+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/commons/commons-pool2/2.11.1/commons-pool2-2.11.1.jar ...
[2024-06-19T09:57:21.858+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.commons#commons-pool2;2.11.1!commons-pool2.jar (453ms)
[2024-06-19T09:57:22.088+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-runtime/3.3.4/hadoop-client-runtime-3.3.4.jar ...
[2024-06-19T09:57:24.372+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-runtime;3.3.4!hadoop-client-runtime.jar (2512ms)
[2024-06-19T09:57:24.599+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar ...
[2024-06-19T09:57:24.857+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.lz4#lz4-java;1.8.0!lz4-java.jar (483ms)
[2024-06-19T09:57:25.086+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.10.3/snappy-java-1.1.10.3.jar ...
[2024-06-19T09:57:25.417+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.xerial.snappy#snappy-java;1.1.10.3!snappy-java.jar(bundle) (558ms)
[2024-06-19T09:57:25.642+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar ...
[2024-06-19T09:57:25.870+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.slf4j#slf4j-api;2.0.7!slf4j-api.jar (450ms)
[2024-06-19T09:57:26.108+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-api/3.3.4/hadoop-client-api-3.3.4.jar ...
[2024-06-19T09:57:27.570+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-api;3.3.4!hadoop-client-api.jar (1698ms)
[2024-06-19T09:57:27.798+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar ...
[2024-06-19T09:57:28.027+0000] {docker.py:413} INFO - [SUCCESSFUL ] commons-logging#commons-logging;1.1.3!commons-logging.jar (453ms)
[2024-06-19T09:57:28.037+0000] {docker.py:413} INFO - :: resolution report :: resolve 24427ms :: artifacts dl 10603ms
[2024-06-19T09:57:28.039+0000] {docker.py:413} INFO - :: modules in use:
[2024-06-19T09:57:28.039+0000] {docker.py:413} INFO - com.google.code.findbugs#jsr305;3.0.0 from central in [default]
	commons-logging#commons-logging;1.1.3 from central in [default]
	org.apache.commons#commons-pool2;2.11.1 from central in [default]
	org.apache.hadoop#hadoop-client-api;3.3.4 from central in [default]
	org.apache.hadoop#hadoop-client-runtime;3.3.4 from central in [default]
	org.apache.kafka#kafka-clients;3.4.1 from central in [default]
	org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 from central in [default]
	org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 from central in [default]
[2024-06-19T09:57:28.041+0000] {docker.py:413} INFO - org.checkerframework#checker-qual;3.5.0 from central in [default]
	org.lz4#lz4-java;1.8.0 from central in [default]
	org.postgresql#postgresql;42.5.4 from central in [default]
	org.slf4j#slf4j-api;2.0.7 from central in [default]
	org.xerial.snappy#snappy-java;1.1.10.3 from central in [default]
	---------------------------------------------------------------------
[2024-06-19T09:57:28.041+0000] {docker.py:413} INFO - |                  |            modules            ||   artifacts   |
[2024-06-19T09:57:28.042+0000] {docker.py:413} INFO - |       conf       | number| search|dwnlded|evicted|| number|dwnlded|
	---------------------------------------------------------------------
	|      default     |   13  |   13  |   13  |   0   ||   13  |   13  |
	---------------------------------------------------------------------
[2024-06-19T09:57:28.052+0000] {docker.py:413} INFO - :: retrieving :: org.apache.spark#spark-submit-parent-bfcccb28-329b-41e0-baf9-08b15406bb95
	confs: [default]
[2024-06-19T09:57:28.189+0000] {docker.py:413} INFO - 13 artifacts copied, 0 already retrieved (58001kB/139ms)
[2024-06-19T09:57:28.400+0000] {docker.py:413} INFO - 24/06/19 09:57:28 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2024-06-19T09:57:29.265+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Running Spark version 3.5.0
[2024-06-19T09:57:29.266+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: OS info Linux, 6.6.12-linuxkit, aarch64
[2024-06-19T09:57:29.267+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Java version 17.0.10
[2024-06-19T09:57:29.280+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO ResourceUtils: ==============================================================
[2024-06-19T09:57:29.281+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO ResourceUtils: No custom resources configured for spark.driver.
24/06/19 09:57:29 INFO ResourceUtils: ==============================================================
[2024-06-19T09:57:29.282+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Submitted application: PostgreSQL Connection with PySpark
[2024-06-19T09:57:29.299+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2024-06-19T09:57:29.305+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO ResourceProfile: Limiting resource is cpu
[2024-06-19T09:57:29.308+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2024-06-19T09:57:29.347+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SecurityManager: Changing view acls to: spark
[2024-06-19T09:57:29.348+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SecurityManager: Changing modify acls to: spark
[2024-06-19T09:57:29.348+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SecurityManager: Changing view acls groups to:
[2024-06-19T09:57:29.348+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SecurityManager: Changing modify acls groups to:
[2024-06-19T09:57:29.348+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: spark; groups with view permissions: EMPTY; users with modify permissions: spark; groups with modify permissions: EMPTY
[2024-06-19T09:57:29.512+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO Utils: Successfully started service 'sparkDriver' on port 39903.
[2024-06-19T09:57:29.532+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkEnv: Registering MapOutputTracker
[2024-06-19T09:57:29.560+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkEnv: Registering BlockManagerMaster
[2024-06-19T09:57:29.573+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2024-06-19T09:57:29.573+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2024-06-19T09:57:29.577+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2024-06-19T09:57:29.600+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-44adce54-5ee3-45f3-a6d0-3f08b07c0456
[2024-06-19T09:57:29.611+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB
[2024-06-19T09:57:29.623+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkEnv: Registering OutputCommitCoordinator
[2024-06-19T09:57:29.726+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI
[2024-06-19T09:57:29.778+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2024-06-19T09:57:29.826+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar at spark://localhost:39903/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1718791049258
[2024-06-19T09:57:29.828+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at spark://localhost:39903/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1718791049258
[2024-06-19T09:57:29.830+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at spark://localhost:39903/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1718791049258
24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at spark://localhost:39903/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1718791049258
24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at spark://localhost:39903/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1718791049258
24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at spark://localhost:39903/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1718791049258
[2024-06-19T09:57:29.832+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at spark://localhost:39903/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1718791049258
24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at spark://localhost:39903/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1718791049258
[2024-06-19T09:57:29.834+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at spark://localhost:39903/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1718791049258
24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at spark://localhost:39903/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1718791049258
[2024-06-19T09:57:29.841+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at spark://localhost:39903/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1718791049258
24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at spark://localhost:39903/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1718791049258
[2024-06-19T09:57:29.843+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at spark://localhost:39903/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1718791049258
[2024-06-19T09:57:29.846+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1718791049258
[2024-06-19T09:57:29.848+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.postgresql_postgresql-42.5.4.jar
[2024-06-19T09:57:29.864+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1718791049258
[2024-06-19T09:57:29.865+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:57:29.871+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1718791049258
24/06/19 09:57:29 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.checkerframework_checker-qual-3.5.0.jar
[2024-06-19T09:57:29.875+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1718791049258
[2024-06-19T09:57:29.876+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:57:29.879+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1718791049258
[2024-06-19T09:57:29.880+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-06-19T09:57:29.911+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1718791049258
[2024-06-19T09:57:29.911+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-06-19T09:57:29.913+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1718791049258
[2024-06-19T09:57:29.914+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.commons_commons-pool2-2.11.1.jar
[2024-06-19T09:57:29.919+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1718791049258
[2024-06-19T09:57:29.919+0000] {docker.py:413} INFO - 24/06/19 09:57:29 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-06-19T09:57:30.046+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1718791049258
[2024-06-19T09:57:30.047+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.lz4_lz4-java-1.8.0.jar
[2024-06-19T09:57:30.057+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1718791049258
[2024-06-19T09:57:30.058+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-06-19T09:57:30.067+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1718791049258
[2024-06-19T09:57:30.068+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.slf4j_slf4j-api-2.0.7.jar
[2024-06-19T09:57:30.070+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1718791049258
[2024-06-19T09:57:30.071+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-06-19T09:57:30.164+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1718791049258
[2024-06-19T09:57:30.165+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/commons-logging_commons-logging-1.1.3.jar
[2024-06-19T09:57:30.226+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Starting executor ID driver on host localhost
[2024-06-19T09:57:30.227+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: OS info Linux, 6.6.12-linuxkit, aarch64
[2024-06-19T09:57:30.227+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Java version 17.0.10
[2024-06-19T09:57:30.231+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): ''
[2024-06-19T09:57:30.231+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@579c36ce for default.
[2024-06-19T09:57:30.237+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1718791049258
[2024-06-19T09:57:30.247+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:57:30.253+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1718791049258
[2024-06-19T09:57:30.266+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-06-19T09:57:30.267+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1718791049258
[2024-06-19T09:57:30.268+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.commons_commons-pool2-2.11.1.jar
[2024-06-19T09:57:30.269+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1718791049258
[2024-06-19T09:57:30.269+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.postgresql_postgresql-42.5.4.jar
[2024-06-19T09:57:30.271+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1718791049258
[2024-06-19T09:57:30.272+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.slf4j_slf4j-api-2.0.7.jar
[2024-06-19T09:57:30.273+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1718791049258
[2024-06-19T09:57:30.275+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-06-19T09:57:30.277+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1718791049258
[2024-06-19T09:57:30.277+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-06-19T09:57:30.278+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1718791049258
[2024-06-19T09:57:30.279+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.lz4_lz4-java-1.8.0.jar
[2024-06-19T09:57:30.280+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1718791049258
[2024-06-19T09:57:30.281+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:57:30.282+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1718791049258
[2024-06-19T09:57:30.289+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-06-19T09:57:30.291+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1718791049258
[2024-06-19T09:57:30.291+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/commons-logging_commons-logging-1.1.3.jar
[2024-06-19T09:57:30.292+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1718791049258
[2024-06-19T09:57:30.292+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.checkerframework_checker-qual-3.5.0.jar
[2024-06-19T09:57:30.293+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1718791049258
[2024-06-19T09:57:30.295+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-06-19T09:57:30.297+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1718791049258
[2024-06-19T09:57:30.362+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO TransportClientFactory: Successfully created connection to localhost/127.0.0.1:39903 after 56 ms (0 ms spent in bootstraps)
[2024-06-19T09:57:30.367+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp16707222817806200980.tmp
[2024-06-19T09:57:30.425+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp16707222817806200980.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.commons_commons-pool2-2.11.1.jar
[2024-06-19T09:57:30.427+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.commons_commons-pool2-2.11.1.jar to class loader default
[2024-06-19T09:57:30.428+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1718791049258
[2024-06-19T09:57:30.429+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp6088675436903782751.tmp
[2024-06-19T09:57:30.429+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp6088675436903782751.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.slf4j_slf4j-api-2.0.7.jar
[2024-06-19T09:57:30.432+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.slf4j_slf4j-api-2.0.7.jar to class loader default
[2024-06-19T09:57:30.432+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1718791049258
[2024-06-19T09:57:30.432+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp11086007038138074593.tmp
[2024-06-19T09:57:30.433+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp11086007038138074593.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:57:30.434+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to class loader default
[2024-06-19T09:57:30.434+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1718791049258
[2024-06-19T09:57:30.434+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp397390235468947159.tmp
[2024-06-19T09:57:30.436+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp397390235468947159.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/commons-logging_commons-logging-1.1.3.jar
[2024-06-19T09:57:30.437+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/commons-logging_commons-logging-1.1.3.jar to class loader default
[2024-06-19T09:57:30.437+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1718791049258
[2024-06-19T09:57:30.440+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp2157701354403068359.tmp
[2024-06-19T09:57:30.442+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp2157701354403068359.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.lz4_lz4-java-1.8.0.jar
[2024-06-19T09:57:30.444+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.lz4_lz4-java-1.8.0.jar to class loader default
[2024-06-19T09:57:30.444+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1718791049258
[2024-06-19T09:57:30.444+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp7772636922403238530.tmp
[2024-06-19T09:57:30.445+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp7772636922403238530.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-06-19T09:57:30.447+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/com.google.code.findbugs_jsr305-3.0.0.jar to class loader default
[2024-06-19T09:57:30.448+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1718791049258
[2024-06-19T09:57:30.448+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp12279926731884620154.tmp
[2024-06-19T09:57:30.450+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp12279926731884620154.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.checkerframework_checker-qual-3.5.0.jar
[2024-06-19T09:57:30.452+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.checkerframework_checker-qual-3.5.0.jar to class loader default
[2024-06-19T09:57:30.453+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1718791049258
[2024-06-19T09:57:30.454+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp15284549752921482290.tmp
[2024-06-19T09:57:30.641+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp15284549752921482290.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-06-19T09:57:30.645+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to class loader default
24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1718791049258
[2024-06-19T09:57:30.646+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp9297285683604703610.tmp
[2024-06-19T09:57:30.657+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp9297285683604703610.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-06-19T09:57:30.659+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.kafka_kafka-clients-3.4.1.jar to class loader default
[2024-06-19T09:57:30.660+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1718791049258
[2024-06-19T09:57:30.660+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp11206253670943987425.tmp
[2024-06-19T09:57:30.665+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp11206253670943987425.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-06-19T09:57:30.666+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.xerial.snappy_snappy-java-1.1.10.3.jar to class loader default
[2024-06-19T09:57:30.667+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1718791049258
[2024-06-19T09:57:30.667+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp11815259183041490091.tmp
[2024-06-19T09:57:30.668+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp11815259183041490091.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-06-19T09:57:30.671+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to class loader default
24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1718791049258
[2024-06-19T09:57:30.673+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp7496574364694260548.tmp
[2024-06-19T09:57:30.853+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp7496574364694260548.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-06-19T09:57:30.856+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.apache.hadoop_hadoop-client-api-3.3.4.jar to class loader default
[2024-06-19T09:57:30.857+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Fetching spark://localhost:39903/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1718791049258
[2024-06-19T09:57:30.857+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Fetching spark://localhost:39903/jars/org.postgresql_postgresql-42.5.4.jar to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp15227476624053271164.tmp
[2024-06-19T09:57:30.859+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/fetchFileTemp15227476624053271164.tmp has been previously copied to /tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.postgresql_postgresql-42.5.4.jar
[2024-06-19T09:57:30.861+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Executor: Adding file:/tmp/spark-daf9d547-ee2a-4d05-b8a3-c0f68782fc54/userFiles-6f670c36-4a30-4dde-8217-ec7d890ada57/org.postgresql_postgresql-42.5.4.jar to class loader default
[2024-06-19T09:57:30.868+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 34605.
[2024-06-19T09:57:30.868+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO NettyBlockTransferService: Server created on localhost:34605
[2024-06-19T09:57:30.869+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2024-06-19T09:57:30.876+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, localhost, 34605, None)
[2024-06-19T09:57:30.878+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO BlockManagerMasterEndpoint: Registering block manager localhost:34605 with 434.4 MiB RAM, BlockManagerId(driver, localhost, 34605, None)
[2024-06-19T09:57:30.879+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, localhost, 34605, None)
[2024-06-19T09:57:30.880+0000] {docker.py:413} INFO - 24/06/19 09:57:30 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, localhost, 34605, None)
[2024-06-19T09:57:31.649+0000] {docker.py:413} INFO - 2024-06-19 09:57:31,647:create_spark_session:INFO:Spark session created successfully
[2024-06-19T09:57:31.664+0000] {docker.py:413} INFO - 24/06/19 09:57:31 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir.
[2024-06-19T09:57:31.667+0000] {docker.py:413} INFO - 24/06/19 09:57:31 INFO SharedState: Warehouse path is 'file:/opt/bitnami/spark/spark-warehouse'.
[2024-06-19T09:57:33.016+0000] {docker.py:413} INFO - 2024-06-19 09:57:33,013:create_initial_dataframe:INFO:Initial dataframe created successfully
[2024-06-19T09:57:33.027+0000] {docker.py:413} INFO - 2024-06-19 09:57:33,026:create_initial_dataframe:INFO:Initial dataframe created successfully
[2024-06-19T09:57:33.053+0000] {docker.py:413} INFO - 2024-06-19 09:57:33,046:create_initial_dataframe:INFO:Initial dataframe created successfully
[2024-06-19T09:57:33.237+0000] {docker.py:413} INFO - 24/06/19 09:57:33 WARN SparkStringUtils: Truncated the string representation of a plan since it was too large. This behavior can be adjusted by setting 'spark.sql.debug.maxToStringFields'.
[2024-06-19T09:57:33.460+0000] {docker.py:413} INFO - 2024-06-19 09:57:33,458:start_streaming:INFO:Starting streaming into elements
[2024-06-19T09:57:33.676+0000] {docker.py:413} INFO - 2024-06-19 09:57:33,676:run:INFO:Callback Server Starting
[2024-06-19T09:57:33.679+0000] {docker.py:413} INFO - 2024-06-19 09:57:33,676:run:INFO:Socket listening on ('127.0.0.1', 36641)
[2024-06-19T09:57:33.691+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO StateStoreCoordinatorRef: Registered StateStoreCoordinator endpoint
[2024-06-19T09:57:33.721+0000] {docker.py:413} INFO - 24/06/19 09:57:33 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
[2024-06-19T09:57:33.743+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO ResolveWriteToStream: Checkpoint root file:///tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5 resolved to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5.
[2024-06-19T09:57:33.745+0000] {docker.py:413} INFO - 24/06/19 09:57:33 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2024-06-19T09:57:33.847+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/metadata using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/.metadata.5a59ee28-ccbf-4daa-bd76-47c6d3baaf12.tmp
[2024-06-19T09:57:33.908+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/.metadata.5a59ee28-ccbf-4daa-bd76-47c6d3baaf12.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/metadata
[2024-06-19T09:57:33.932+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO MicroBatchExecution: Starting [id = faa549f3-6a1f-4709-8428-8c863ed65aa6, runId = 38e3219e-4117-45e9-9a8d-5637459c3cdf]. Use file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5 to store the query checkpoint.
[2024-06-19T09:57:33.937+0000] {docker.py:413} INFO - 2024-06-19 09:57:33,936:start_streaming:INFO:Starting streaming into teams
[2024-06-19T09:57:33.941+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO MicroBatchExecution: Reading table [org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaTable@5c5a5055] from DataSourceV2 named 'kafka' [org.apache.spark.sql.kafka010.KafkaSourceProvider@6ca32db9]
[2024-06-19T09:57:33.945+0000] {docker.py:413} INFO - 24/06/19 09:57:33 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
[2024-06-19T09:57:33.945+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO ResolveWriteToStream: Checkpoint root file:///tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519 resolved to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519.
24/06/19 09:57:33 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2024-06-19T09:57:33.959+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/metadata using temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/.metadata.f9786b95-2530-42eb-9c40-3a0a504483ba.tmp
[2024-06-19T09:57:33.987+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO OffsetSeqLog: BatchIds found from listing:
[2024-06-19T09:57:33.990+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO OffsetSeqLog: BatchIds found from listing: 
24/06/19 09:57:33 INFO MicroBatchExecution: Starting new streaming query.
[2024-06-19T09:57:33.993+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO MicroBatchExecution: Stream started from {}
[2024-06-19T09:57:33.996+0000] {docker.py:413} INFO - 24/06/19 09:57:33 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/.metadata.f9786b95-2530-42eb-9c40-3a0a504483ba.tmp to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/metadata
[2024-06-19T09:57:34.008+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO MicroBatchExecution: Starting [id = b2bc167d-5111-458b-8a3b-ff964a13091c, runId = 97768c15-23a1-45a1-9c98-46a65a9fcf35]. Use file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519 to store the query checkpoint.
[2024-06-19T09:57:34.010+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO MicroBatchExecution: Reading table [org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaTable@188c08b3] from DataSourceV2 named 'kafka' [org.apache.spark.sql.kafka010.KafkaSourceProvider@164bf40a]
[2024-06-19T09:57:34.012+0000] {docker.py:413} INFO - 2024-06-19 09:57:34,008:start_streaming:INFO:Starting streaming into fixtures
[2024-06-19T09:57:34.013+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO OffsetSeqLog: BatchIds found from listing:
[2024-06-19T09:57:34.013+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO OffsetSeqLog: BatchIds found from listing: 
24/06/19 09:57:34 INFO MicroBatchExecution: Starting new streaming query.
24/06/19 09:57:34 INFO MicroBatchExecution: Stream started from {}
[2024-06-19T09:57:34.020+0000] {docker.py:413} INFO - 24/06/19 09:57:34 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
[2024-06-19T09:57:34.021+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO ResolveWriteToStream: Checkpoint root file:///tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac resolved to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac.
[2024-06-19T09:57:34.023+0000] {docker.py:413} INFO - 24/06/19 09:57:34 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2024-06-19T09:57:34.030+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/metadata using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/.metadata.30b42bb5-6417-43dc-9511-453abf1e9404.tmp
[2024-06-19T09:57:34.079+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/.metadata.30b42bb5-6417-43dc-9511-453abf1e9404.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/metadata
[2024-06-19T09:57:34.094+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO MicroBatchExecution: Starting [id = cd67e404-140c-4123-a627-0e5eab47d36e, runId = d79516f9-4715-4dd6-8ab3-7d07618208e5]. Use file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac to store the query checkpoint.
[2024-06-19T09:57:34.099+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO MicroBatchExecution: Reading table [org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaTable@6b842518] from DataSourceV2 named 'kafka' [org.apache.spark.sql.kafka010.KafkaSourceProvider@6543c7c0]
24/06/19 09:57:34 INFO OffsetSeqLog: BatchIds found from listing: 
24/06/19 09:57:34 INFO OffsetSeqLog: BatchIds found from listing: 
24/06/19 09:57:34 INFO MicroBatchExecution: Starting new streaming query.
24/06/19 09:57:34 INFO MicroBatchExecution: Stream started from {}
[2024-06-19T09:57:34.296+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [kafka:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

24/06/19 09:57:34 INFO AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [kafka:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

24/06/19 09:57:34 INFO AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [kafka:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
[2024-06-19T09:57:34.348+0000] {docker.py:413} INFO - 24/06/19 09:57:34 WARN AdminClientConfig: These configurations '[key.deserializer, value.deserializer, enable.auto.commit, max.poll.records, auto.offset.reset]' were supplied but are not used yet.
24/06/19 09:57:34 WARN AdminClientConfig: These configurations '[key.deserializer, value.deserializer, enable.auto.commit, max.poll.records, auto.offset.reset]' were supplied but are not used yet.
24/06/19 09:57:34 WARN AdminClientConfig: These configurations '[key.deserializer, value.deserializer, enable.auto.commit, max.poll.records, auto.offset.reset]' were supplied but are not used yet.
[2024-06-19T09:57:34.348+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO AppInfoParser: Kafka version: 3.4.1
[2024-06-19T09:57:34.349+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
24/06/19 09:57:34 INFO AppInfoParser: Kafka startTimeMs: 1718791054347
[2024-06-19T09:57:34.350+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO AppInfoParser: Kafka version: 3.4.1
[2024-06-19T09:57:34.350+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
24/06/19 09:57:34 INFO AppInfoParser: Kafka startTimeMs: 1718791054347
[2024-06-19T09:57:34.351+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO AppInfoParser: Kafka version: 3.4.1
[2024-06-19T09:57:34.352+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
[2024-06-19T09:57:34.352+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO AppInfoParser: Kafka startTimeMs: 1718791054347
[2024-06-19T09:57:34.561+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/sources/0/0 using temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/sources/0/.0.d2c99731-2b3a-4575-acca-bad9b683af0a.tmp
[2024-06-19T09:57:34.567+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/sources/0/0 using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/sources/0/.0.e44a5903-a590-4b44-ba75-5de7d5d74e21.tmp
24/06/19 09:57:34 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/sources/0/0 using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/sources/0/.0.95afbef0-76ef-4701-ba28-23ffc639dc74.tmp
[2024-06-19T09:57:34.596+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/sources/0/.0.e44a5903-a590-4b44-ba75-5de7d5d74e21.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/sources/0/0
24/06/19 09:57:34 INFO KafkaMicroBatchStream: Initial offsets: {"elements":{"0":19030}}
[2024-06-19T09:57:34.599+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/sources/0/.0.d2c99731-2b3a-4575-acca-bad9b683af0a.tmp to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/sources/0/0
24/06/19 09:57:34 INFO KafkaMicroBatchStream: Initial offsets: {"teams":{"0":440}}
[2024-06-19T09:57:34.602+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/sources/0/.0.95afbef0-76ef-4701-ba28-23ffc639dc74.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/sources/0/0
24/06/19 09:57:34 INFO KafkaMicroBatchStream: Initial offsets: {"fixtures":{"0":8360}}
[2024-06-19T09:57:34.615+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/0 using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/.0.039f8410-f9be-4bab-a9bc-f6e1a3e0a3bd.tmp
[2024-06-19T09:57:34.617+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/0 using temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/.0.80d7bf51-aac2-4c2f-89d2-baadd3f98d4c.tmp
[2024-06-19T09:57:34.618+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/0 using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/.0.19075add-798c-48d4-a5e0-7dc9dc8dba59.tmp
[2024-06-19T09:57:34.658+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/.0.80d7bf51-aac2-4c2f-89d2-baadd3f98d4c.tmp to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/0
[2024-06-19T09:57:34.661+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO MicroBatchExecution: Committed offsets for batch 0. Metadata OffsetSeqMetadata(0,1718791054606,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:57:34.667+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/.0.19075add-798c-48d4-a5e0-7dc9dc8dba59.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/0
24/06/19 09:57:34 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/.0.039f8410-f9be-4bab-a9bc-f6e1a3e0a3bd.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/0
[2024-06-19T09:57:34.668+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO MicroBatchExecution: Committed offsets for batch 0. Metadata OffsetSeqMetadata(0,1718791054606,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
24/06/19 09:57:34 INFO MicroBatchExecution: Committed offsets for batch 0. Metadata OffsetSeqMetadata(0,1718791054606,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:57:34.966+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
24/06/19 09:57:34 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
24/06/19 09:57:34 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:57:34.999+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
24/06/19 09:57:34 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:57:34.999+0000] {docker.py:413} INFO - 24/06/19 09:57:34 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:57:35.059+0000] {docker.py:413} INFO - 24/06/19 09:57:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:57:35.065+0000] {docker.py:413} INFO - 24/06/19 09:57:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:57:35.068+0000] {docker.py:413} INFO - 24/06/19 09:57:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
24/06/19 09:57:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:57:35.078+0000] {docker.py:413} INFO - 24/06/19 09:57:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:57:35.080+0000] {docker.py:413} INFO - 24/06/19 09:57:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:57:35.423+0000] {docker.py:413} INFO - 24/06/19 09:57:35 INFO CodeGenerator: Code generated in 208.479875 ms
24/06/19 09:57:35 INFO CodeGenerator: Code generated in 209.39 ms
[2024-06-19T09:57:35.509+0000] {docker.py:413} INFO - 24/06/19 09:57:35 INFO CodeGenerator: Code generated in 267.632292 ms
[2024-06-19T09:57:35.601+0000] {docker.py:413} INFO - 2024-06-19 09:57:35,592:wait_for_commands:INFO:Python Server ready to receive messages
[2024-06-19T09:57:35.602+0000] {docker.py:413} INFO - 2024-06-19 09:57:35,592:wait_for_commands:INFO:Received command c on object id p1
[2024-06-19T09:57:35.603+0000] {docker.py:413} INFO - 2024-06-19 09:57:35,593:wait_for_commands:INFO:Python Server ready to receive messages
[2024-06-19T09:57:35.603+0000] {docker.py:413} INFO - 2024-06-19 09:57:35,593:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T09:57:35.781+0000] {docker.py:413} INFO - 2024-06-19 09:57:35,773:wait_for_commands:INFO:Python Server ready to receive messages
2024-06-19 09:57:35,773:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T09:57:36.126+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO CodeGenerator: Code generated in 25.049708 ms
[2024-06-19T09:57:36.140+0000] {docker.py:413} INFO - 2024-06-19 09:57:36,138:write_to_postgres:ERROR:Error writing batch 0 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:57:36.141+0000] {docker.py:413} INFO - 2024-06-19 09:57:36,140:write_to_postgres:ERROR:Error writing batch 0 to fixtures: Column draw not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:57:36.155+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/0 using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/.0.b9ab39ad-c28d-411e-ba71-8e400ab7aa85.tmp
[2024-06-19T09:57:36.157+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/0 using temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/.0.ff965de6-83ee-490b-a03f-2553a0c42eaf.tmp
[2024-06-19T09:57:36.182+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/.0.ff965de6-83ee-490b-a03f-2553a0c42eaf.tmp to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/0
[2024-06-19T09:57:36.184+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/.0.b9ab39ad-c28d-411e-ba71-8e400ab7aa85.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/0
[2024-06-19T09:57:36.239+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "faa549f3-6a1f-4709-8428-8c863ed65aa6",
  "runId" : "38e3219e-4117-45e9-9a8d-5637459c3cdf",
  "name" : null,
  "timestamp" : "2024-06-19T09:57:33.977Z",
  "batchId" : 0,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 1115,
    "commitOffsets" : 36,
    "getBatch" : 35,
    "latestOffset" : 611,
    "queryPlanning" : 307,
    "triggerExecution" : 2203,
    "walCommit" : 56
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : null,
    "endOffset" : {
      "elements" : {
        "0" : 30275
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 30275
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:57:36.241+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "b2bc167d-5111-458b-8a3b-ff964a13091c",
  "runId" : "97768c15-23a1-45a1-9c98-46a65a9fcf35",
  "name" : null,
  "timestamp" : "2024-06-19T09:57:34.009Z",
  "batchId" : 0,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 1124,
    "commitOffsets" : 36,
    "getBatch" : 45,
    "latestOffset" : 595,
    "queryPlanning" : 307,
    "triggerExecution" : 2172,
    "walCommit" : 46
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[teams]]",
    "startOffset" : null,
    "endOffset" : {
      "teams" : {
        "0" : 700
      }
    },
    "latestOffset" : {
      "teams" : {
        "0" : 700
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:57:36.280+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-19T09:57:36.307+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO DAGScheduler: Got job 0 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2024-06-19T09:57:36.307+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO DAGScheduler: Final stage: ResultStage 0 (start at NativeMethodAccessorImpl.java:0)
[2024-06-19T09:57:36.308+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO DAGScheduler: Parents of final stage: List()
[2024-06-19T09:57:36.309+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO DAGScheduler: Missing parents: List()
[2024-06-19T09:57:36.315+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO DAGScheduler: Submitting ResultStage 0 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T09:57:36.463+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T09:57:36.489+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T09:57:36.491+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on localhost:34605 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:57:36.494+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:1580
[2024-06-19T09:57:36.521+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 0 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-06-19T09:57:36.522+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks resource profile 0
[2024-06-19T09:57:36.571+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11069 bytes)
[2024-06-19T09:57:36.583+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
[2024-06-19T09:57:36.710+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO CodeGenerator: Code generated in 30.903583 ms
[2024-06-19T09:57:36.731+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO CodeGenerator: Code generated in 18.115584 ms
[2024-06-19T09:57:36.739+0000] {docker.py:413} INFO - 24/06/19 09:57:36 INFO CodeGenerator: Code generated in 6.107375 ms
[2024-06-19T09:57:37.575+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO CodeGenerator: Code generated in 14.433708 ms
[2024-06-19T09:57:37.580+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=8360 untilOffset=13300, for query queryId=cd67e404-140c-4123-a627-0e5eab47d36e batchId=0 taskId=0 partitionId=0
[2024-06-19T09:57:37.610+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO CodeGenerator: Code generated in 7.836917 ms
[2024-06-19T09:57:37.636+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO CodeGenerator: Code generated in 17.115958 ms
[2024-06-19T09:57:37.657+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [kafka:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
[2024-06-19T09:57:37.696+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO AppInfoParser: Kafka version: 3.4.1
24/06/19 09:57:37 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
24/06/19 09:57:37 INFO AppInfoParser: Kafka startTimeMs: 1718791057695
[2024-06-19T09:57:37.700+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Assigned to partition(s): fixtures-0
[2024-06-19T09:57:37.704+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 8360 for partition fixtures-0
[2024-06-19T09:57:37.711+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO Metadata: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting the last seen epoch of partition fixtures-0 to 16 since the associated topicId changed from null to FJHFNb5sRXWkhHAifyctGg
[2024-06-19T09:57:37.711+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO Metadata: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Cluster ID: hOTY4LfWQK6Gr4R4BaP8uA
[2024-06-19T09:57:37.774+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:57:37.785+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:57:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:57:37.786+0000] {docker.py:413} INFO - 24/06/19 09:57:37 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:38.749+0000] {docker.py:413} INFO - 24/06/19 09:57:38 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 8843 for partition fixtures-0
[2024-06-19T09:57:38.770+0000] {docker.py:413} INFO - 24/06/19 09:57:38 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:57:38.786+0000] {docker.py:413} INFO - 24/06/19 09:57:38 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:57:38 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
24/06/19 09:57:38 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:39.005+0000] {docker.py:413} INFO - 24/06/19 09:57:38 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 9330 for partition fixtures-0
[2024-06-19T09:57:39.009+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:57:39.054+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:57:39.055+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:39.341+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 9815 for partition fixtures-0
[2024-06-19T09:57:39.342+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:57:39.369+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:57:39.372+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:39.528+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 10302 for partition fixtures-0
[2024-06-19T09:57:39.531+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:57:39.547+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:39.550+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:57:39.554+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:39.643+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 10787 for partition fixtures-0
[2024-06-19T09:57:39.646+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:57:39.656+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:39.658+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:57:39.659+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:39.689+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 11272 for partition fixtures-0
[2024-06-19T09:57:39.691+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:57:39.700+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:39.702+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:57:39.703+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:39.817+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 11757 for partition fixtures-0
[2024-06-19T09:57:39.821+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:57:39.835+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:57:39.837+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:39.900+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 12244 for partition fixtures-0
[2024-06-19T09:57:39.904+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:57:39.911+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:39.912+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:57:39.917+0000] {docker.py:413} INFO - 24/06/19 09:57:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:40.042+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 12729 for partition fixtures-0
24/06/19 09:57:40 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:57:40.045+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:57:40 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:57:40.047+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:40.076+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 13214 for partition fixtures-0
[2024-06-19T09:57:40.077+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:57:40.579+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
24/06/19 09:57:40 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:57:40.579+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13300, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:57:40.636+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor read 4940 records through 11 polls (polled  out 4940 records), taking 828759626 nanos, during time span of 2934093460 nanos.
[2024-06-19T09:57:40.648+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 1774 bytes result sent to driver
[2024-06-19T09:57:40.710+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 4104 ms on localhost (executor driver) (1/1)
[2024-06-19T09:57:40.740+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
[2024-06-19T09:57:40.768+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO DAGScheduler: ResultStage 0 (start at NativeMethodAccessorImpl.java:0) finished in 4.433 s
[2024-06-19T09:57:40.776+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO DAGScheduler: Job 0 is finished. Cancelling potential speculative or zombie tasks for this job
24/06/19 09:57:40 INFO TaskSchedulerImpl: Killing all running tasks in stage 0: Stage finished
[2024-06-19T09:57:40.785+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO DAGScheduler: Job 0 finished: start at NativeMethodAccessorImpl.java:0, took 4.502667 s
[2024-06-19T09:57:40.842+0000] {docker.py:413} INFO - 2024-06-19 09:57:40,840:write_to_postgres:INFO:Batch 0 written to fixtures successfully.
[2024-06-19T09:57:40.853+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/0 using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/.0.d0aeb541-5a33-48d1-a3e9-fc447277bb19.tmp
[2024-06-19T09:57:40.871+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/.0.d0aeb541-5a33-48d1-a3e9-fc447277bb19.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/0
[2024-06-19T09:57:40.872+0000] {docker.py:413} INFO - 24/06/19 09:57:40 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "cd67e404-140c-4123-a627-0e5eab47d36e",
  "runId" : "d79516f9-4715-4dd6-8ab3-7d07618208e5",
  "name" : null,
  "timestamp" : "2024-06-19T09:57:34.096Z",
  "batchId" : 0,
  "numInputRows" : 4940,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 729.2589312075584,
  "durationMs" : {
    "addBatch" : 5825,
    "commitOffsets" : 28,
    "getBatch" : 35,
    "latestOffset" : 508,
    "queryPlanning" : 307,
    "triggerExecution" : 6774,
    "walCommit" : 57
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : null,
    "endOffset" : {
      "fixtures" : {
        "0" : 13300
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 13300
      }
    },
    "numInputRows" : 4940,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 729.2589312075584,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:57:46.218+0000] {docker.py:413} INFO - 24/06/19 09:57:46 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
24/06/19 09:57:46 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:50.914+0000] {docker.py:413} INFO - 24/06/19 09:57:50 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:56.234+0000] {docker.py:413} INFO - 24/06/19 09:57:56 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:57:56.242+0000] {docker.py:413} INFO - 24/06/19 09:57:56 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:00.913+0000] {docker.py:413} INFO - 24/06/19 09:58:00 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:06.240+0000] {docker.py:413} INFO - 24/06/19 09:58:06 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
24/06/19 09:58:06 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:10.929+0000] {docker.py:413} INFO - 24/06/19 09:58:10 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:12.916+0000] {docker.py:413} INFO - 24/06/19 09:58:12 INFO BlockManagerInfo: Removed broadcast_0_piece0 on localhost:34605 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:58:16.233+0000] {docker.py:413} INFO - 24/06/19 09:58:16 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:16.240+0000] {docker.py:413} INFO - 24/06/19 09:58:16 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:20.949+0000] {docker.py:413} INFO - 24/06/19 09:58:20 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:26.237+0000] {docker.py:413} INFO - 24/06/19 09:58:26 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:26.241+0000] {docker.py:413} INFO - 24/06/19 09:58:26 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:30.948+0000] {docker.py:413} INFO - 24/06/19 09:58:30 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:36.247+0000] {docker.py:413} INFO - 24/06/19 09:58:36 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:36.257+0000] {docker.py:413} INFO - 24/06/19 09:58:36 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:40.946+0000] {docker.py:413} INFO - 24/06/19 09:58:40 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:46.253+0000] {docker.py:413} INFO - 24/06/19 09:58:46 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:46.263+0000] {docker.py:413} INFO - 24/06/19 09:58:46 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:50.951+0000] {docker.py:413} INFO - 24/06/19 09:58:50 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:58:56.282+0000] {docker.py:413} INFO - 24/06/19 09:58:56 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
24/06/19 09:58:56 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:00.972+0000] {docker.py:413} INFO - 24/06/19 09:59:00 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:06.262+0000] {docker.py:413} INFO - 24/06/19 09:59:06 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:06.273+0000] {docker.py:413} INFO - 24/06/19 09:59:06 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:10.985+0000] {docker.py:413} INFO - 24/06/19 09:59:10 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:16.283+0000] {docker.py:413} INFO - 24/06/19 09:59:16 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
24/06/19 09:59:16 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:20.970+0000] {docker.py:413} INFO - 24/06/19 09:59:20 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:26.285+0000] {docker.py:413} INFO - 24/06/19 09:59:26 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
24/06/19 09:59:26 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:30.992+0000] {docker.py:413} INFO - 24/06/19 09:59:30 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:35.158+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/1 using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/.1.53bccd8b-8122-4ec2-8a23-9e4e58e2eb3a.tmp
[2024-06-19T09:59:35.341+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/.1.53bccd8b-8122-4ec2-8a23-9e4e58e2eb3a.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/1
[2024-06-19T09:59:35.349+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO MicroBatchExecution: Committed offsets for batch 1. Metadata OffsetSeqMetadata(0,1718791174938,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:59:35.795+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:35.807+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:35.981+0000] {docker.py:413} INFO - 24/06/19 09:59:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:36.012+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:36.245+0000] {docker.py:413} INFO - 2024-06-19 09:59:36,240:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T09:59:36.284+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:36.520+0000] {docker.py:413} INFO - 2024-06-19 09:59:36,517:write_to_postgres:ERROR:Error writing batch 1 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:59:36.538+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/1 using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/.1.df2c5695-18e0-4f7b-a19b-e30652b27501.tmp
[2024-06-19T09:59:36.601+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/.1.df2c5695-18e0-4f7b-a19b-e30652b27501.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/1
[2024-06-19T09:59:36.610+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "faa549f3-6a1f-4709-8428-8c863ed65aa6",
  "runId" : "38e3219e-4117-45e9-9a8d-5637459c3cdf",
  "name" : null,
  "timestamp" : "2024-06-19T09:59:34.927Z",
  "batchId" : 1,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 623,
    "commitOffsets" : 69,
    "getBatch" : 8,
    "latestOffset" : 11,
    "queryPlanning" : 367,
    "triggerExecution" : 1661,
    "walCommit" : 463
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : {
      "elements" : {
        "0" : 30275
      }
    },
    "endOffset" : {
      "elements" : {
        "0" : 30282
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 30282
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:59:36.625+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/2 using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/.2.a905a3b7-d3f2-474c-b500-d8f14ebbd3c0.tmp
[2024-06-19T09:59:36.692+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/.2.a905a3b7-d3f2-474c-b500-d8f14ebbd3c0.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/2
24/06/19 09:59:36 INFO MicroBatchExecution: Committed offsets for batch 2. Metadata OffsetSeqMetadata(0,1718791176613,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:59:36.793+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:36.800+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:36.878+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:36.885+0000] {docker.py:413} INFO - 24/06/19 09:59:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:37.073+0000] {docker.py:413} INFO - 2024-06-19 09:59:37,067:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T09:59:37.415+0000] {docker.py:413} INFO - 2024-06-19 09:59:37,412:write_to_postgres:ERROR:Error writing batch 2 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:59:37.424+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/2 using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/.2.96639e74-ebdc-421f-9a53-0aa0b3c5516d.tmp
[2024-06-19T09:59:37.443+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/.2.96639e74-ebdc-421f-9a53-0aa0b3c5516d.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/2
[2024-06-19T09:59:37.445+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "faa549f3-6a1f-4709-8428-8c863ed65aa6",
  "runId" : "38e3219e-4117-45e9-9a8d-5637459c3cdf",
  "name" : null,
  "timestamp" : "2024-06-19T09:59:36.604Z",
  "batchId" : 2,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 578,
    "commitOffsets" : 30,
    "getBatch" : 0,
    "latestOffset" : 9,
    "queryPlanning" : 111,
    "triggerExecution" : 838,
    "walCommit" : 82
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : {
      "elements" : {
        "0" : 30282
      }
    },
    "endOffset" : {
      "elements" : {
        "0" : 31140
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 31140
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:59:37.513+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/1 using temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/.1.3ec1b8e1-60d7-488a-b202-505af72e83c5.tmp
[2024-06-19T09:59:37.578+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/.1.3ec1b8e1-60d7-488a-b202-505af72e83c5.tmp to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/1
24/06/19 09:59:37 INFO MicroBatchExecution: Committed offsets for batch 1. Metadata OffsetSeqMetadata(0,1718791177484,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:59:37.620+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:37.649+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:37.689+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:37.695+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:37.771+0000] {docker.py:413} INFO - 2024-06-19 09:59:37,755:wait_for_commands:INFO:Received command c on object id p1
[2024-06-19T09:59:37.981+0000] {docker.py:413} INFO - 2024-06-19 09:59:37,978:write_to_postgres:ERROR:Error writing batch 1 to fixtures: Column draw not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T09:59:37.987+0000] {docker.py:413} INFO - 24/06/19 09:59:37 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/1 using temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/.1.e15453eb-40ba-4eb6-8adc-fee49c186098.tmp
[2024-06-19T09:59:38.030+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/.1.e15453eb-40ba-4eb6-8adc-fee49c186098.tmp to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/1
[2024-06-19T09:59:38.033+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "b2bc167d-5111-458b-8a3b-ff964a13091c",
  "runId" : "97768c15-23a1-45a1-9c98-46a65a9fcf35",
  "name" : null,
  "timestamp" : "2024-06-19T09:59:37.481Z",
  "batchId" : 1,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 322,
    "commitOffsets" : 49,
    "getBatch" : 0,
    "latestOffset" : 3,
    "queryPlanning" : 72,
    "triggerExecution" : 546,
    "walCommit" : 94
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[teams]]",
    "startOffset" : {
      "teams" : {
        "0" : 700
      }
    },
    "endOffset" : {
      "teams" : {
        "0" : 720
      }
    },
    "latestOffset" : {
      "teams" : {
        "0" : 720
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:59:38.079+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/1 using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/.1.aeabbb70-0b7f-45c8-833b-e5ffa807fc9e.tmp
[2024-06-19T09:59:38.116+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/.1.aeabbb70-0b7f-45c8-833b-e5ffa807fc9e.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/1
24/06/19 09:59:38 INFO MicroBatchExecution: Committed offsets for batch 1. Metadata OffsetSeqMetadata(0,1718791178064,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:59:38.127+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:38.129+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:38.176+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:38.193+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:38.314+0000] {docker.py:413} INFO - 2024-06-19 09:59:38,312:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T09:59:38.431+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-19T09:59:38.434+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO DAGScheduler: Got job 1 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2024-06-19T09:59:38.436+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO DAGScheduler: Final stage: ResultStage 1 (start at NativeMethodAccessorImpl.java:0)
[2024-06-19T09:59:38.436+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO DAGScheduler: Parents of final stage: List()
[2024-06-19T09:59:38.444+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO DAGScheduler: Missing parents: List()
[2024-06-19T09:59:38.446+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO DAGScheduler: Submitting ResultStage 1 (MapPartitionsRDD[42] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T09:59:38.485+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T09:59:38.550+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T09:59:38.558+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on localhost:34605 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:59:38.559+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:1580
[2024-06-19T09:59:38.564+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 1 (MapPartitionsRDD[42] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
24/06/19 09:59:38 INFO TaskSchedulerImpl: Adding task set 1.0 with 1 tasks resource profile 0
[2024-06-19T09:59:38.565+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO TaskSetManager: Starting task 0.0 in stage 1.0 (TID 1) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11069 bytes)
[2024-06-19T09:59:38.570+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO Executor: Running task 0.0 in stage 1.0 (TID 1)
[2024-06-19T09:59:38.811+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=13300 untilOffset=13307, for query queryId=cd67e404-140c-4123-a627-0e5eab47d36e batchId=1 taskId=1 partitionId=0
[2024-06-19T09:59:38.820+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 13300 for partition fixtures-0
[2024-06-19T09:59:38.861+0000] {docker.py:413} INFO - 24/06/19 09:59:38 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T09:59:39.357+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:59:39.358+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T09:59:39.358+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=13680, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T09:59:39.394+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor read 7 records through 1 polls (polled  out 380 records), taking 539709042 nanos, during time span of 574243042 nanos.
[2024-06-19T09:59:39.397+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO Executor: Finished task 0.0 in stage 1.0 (TID 1). 1731 bytes result sent to driver
[2024-06-19T09:59:39.403+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO TaskSetManager: Finished task 0.0 in stage 1.0 (TID 1) in 838 ms on localhost (executor driver) (1/1)
[2024-06-19T09:59:39.405+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO DAGScheduler: ResultStage 1 (start at NativeMethodAccessorImpl.java:0) finished in 0.938 s
24/06/19 09:59:39 INFO DAGScheduler: Job 1 is finished. Cancelling potential speculative or zombie tasks for this job
[2024-06-19T09:59:39.406+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool 
24/06/19 09:59:39 INFO TaskSchedulerImpl: Killing all running tasks in stage 1: Stage finished
[2024-06-19T09:59:39.407+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO DAGScheduler: Job 1 finished: start at NativeMethodAccessorImpl.java:0, took 0.971538 s
[2024-06-19T09:59:39.699+0000] {docker.py:413} INFO - 2024-06-19 09:59:39,697:write_to_postgres:INFO:Batch 1 written to fixtures successfully.
[2024-06-19T09:59:39.717+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/1 using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/.1.88c977f5-ec06-47b0-a690-1fda1a17011f.tmp
[2024-06-19T09:59:39.761+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/.1.88c977f5-ec06-47b0-a690-1fda1a17011f.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/1
[2024-06-19T09:59:39.787+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "cd67e404-140c-4123-a627-0e5eab47d36e",
  "runId" : "d79516f9-4715-4dd6-8ab3-7d07618208e5",
  "name" : null,
  "timestamp" : "2024-06-19T09:59:38.060Z",
  "batchId" : 1,
  "numInputRows" : 7,
  "inputRowsPerSecond" : 583.3333333333334,
  "processedRowsPerSecond" : 4.146919431279621,
  "durationMs" : {
    "addBatch" : 1557,
    "commitOffsets" : 50,
    "getBatch" : 0,
    "latestOffset" : 3,
    "queryPlanning" : 17,
    "triggerExecution" : 1688,
    "walCommit" : 50
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : {
      "fixtures" : {
        "0" : 13300
      }
    },
    "endOffset" : {
      "fixtures" : {
        "0" : 13307
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 13307
      }
    },
    "numInputRows" : 7,
    "inputRowsPerSecond" : 583.3333333333334,
    "processedRowsPerSecond" : 4.146919431279621,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:59:39.920+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/2 using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/.2.38e335ff-8f5e-4e49-ae7b-9a13ba7e2049.tmp
[2024-06-19T09:59:39.959+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/.2.38e335ff-8f5e-4e49-ae7b-9a13ba7e2049.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/2
[2024-06-19T09:59:39.960+0000] {docker.py:413} INFO - 24/06/19 09:59:39 INFO MicroBatchExecution: Committed offsets for batch 2. Metadata OffsetSeqMetadata(0,1718791179873,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T09:59:40.054+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:40.062+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:40.140+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:40.146+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T09:59:40.188+0000] {docker.py:413} INFO - 2024-06-19 09:59:40,182:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T09:59:40.461+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-19T09:59:40.463+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO DAGScheduler: Got job 2 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2024-06-19T09:59:40.467+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO DAGScheduler: Final stage: ResultStage 2 (start at NativeMethodAccessorImpl.java:0)
[2024-06-19T09:59:40.471+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO DAGScheduler: Parents of final stage: List()
[2024-06-19T09:59:40.485+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO DAGScheduler: Missing parents: List()
[2024-06-19T09:59:40.487+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO DAGScheduler: Submitting ResultStage 2 (MapPartitionsRDD[51] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T09:59:40.509+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T09:59:40.517+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T09:59:40.521+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on localhost:34605 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:59:40.522+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO SparkContext: Created broadcast 2 from broadcast at DAGScheduler.scala:1580
[2024-06-19T09:59:40.542+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 2 (MapPartitionsRDD[51] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-06-19T09:59:40.552+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO TaskSchedulerImpl: Adding task set 2.0 with 1 tasks resource profile 0
[2024-06-19T09:59:40.555+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO TaskSetManager: Starting task 0.0 in stage 2.0 (TID 2) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11069 bytes)
[2024-06-19T09:59:40.563+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO Executor: Running task 0.0 in stage 2.0 (TID 2)
[2024-06-19T09:59:40.655+0000] {docker.py:413} INFO - 24/06/19 09:59:40 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=13307 untilOffset=13680, for query queryId=cd67e404-140c-4123-a627-0e5eab47d36e batchId=2 taskId=2 partitionId=0
[2024-06-19T09:59:41.309+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor read 373 records through 0 polls (polled  out 0 records), taking 0 nanos, during time span of 631693625 nanos.
[2024-06-19T09:59:41.345+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO Executor: Finished task 0.0 in stage 2.0 (TID 2). 1731 bytes result sent to driver
[2024-06-19T09:59:41.348+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO TaskSetManager: Finished task 0.0 in stage 2.0 (TID 2) in 799 ms on localhost (executor driver) (1/1)
24/06/19 09:59:41 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
[2024-06-19T09:59:41.350+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO DAGScheduler: ResultStage 2 (start at NativeMethodAccessorImpl.java:0) finished in 0.871 s
[2024-06-19T09:59:41.386+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO DAGScheduler: Job 2 is finished. Cancelling potential speculative or zombie tasks for this job
[2024-06-19T09:59:41.394+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO TaskSchedulerImpl: Killing all running tasks in stage 2: Stage finished
[2024-06-19T09:59:41.397+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO DAGScheduler: Job 2 finished: start at NativeMethodAccessorImpl.java:0, took 0.895291 s
[2024-06-19T09:59:41.492+0000] {docker.py:413} INFO - 2024-06-19 09:59:41,487:write_to_postgres:INFO:Batch 2 written to fixtures successfully.
[2024-06-19T09:59:41.500+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/2 using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/.2.b40cba6e-cc2a-4552-a1e3-45aa923201a8.tmp
[2024-06-19T09:59:41.529+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/.2.b40cba6e-cc2a-4552-a1e3-45aa923201a8.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/2
[2024-06-19T09:59:41.532+0000] {docker.py:413} INFO - 24/06/19 09:59:41 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "cd67e404-140c-4123-a627-0e5eab47d36e",
  "runId" : "d79516f9-4715-4dd6-8ab3-7d07618208e5",
  "name" : null,
  "timestamp" : "2024-06-19T09:59:39.758Z",
  "batchId" : 2,
  "numInputRows" : 373,
  "inputRowsPerSecond" : 219.67020023557126,
  "processedRowsPerSecond" : 210.97285067873304,
  "durationMs" : {
    "addBatch" : 1378,
    "commitOffsets" : 38,
    "getBatch" : 0,
    "latestOffset" : 115,
    "queryPlanning" : 116,
    "triggerExecution" : 1768,
    "walCommit" : 86
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : {
      "fixtures" : {
        "0" : 13307
      }
    },
    "endOffset" : {
      "fixtures" : {
        "0" : 13680
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 13680
      }
    },
    "numInputRows" : 373,
    "inputRowsPerSecond" : 219.67020023557126,
    "processedRowsPerSecond" : 210.97285067873304,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T09:59:47.463+0000] {docker.py:413} INFO - 24/06/19 09:59:47 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:48.041+0000] {docker.py:413} INFO - 24/06/19 09:59:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:48.906+0000] {docker.py:413} INFO - 24/06/19 09:59:48 INFO BlockManagerInfo: Removed broadcast_2_piece0 on localhost:34605 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:59:48.916+0000] {docker.py:413} INFO - 24/06/19 09:59:48 INFO BlockManagerInfo: Removed broadcast_1_piece0 on localhost:34605 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T09:59:51.540+0000] {docker.py:413} INFO - 24/06/19 09:59:51 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:57.481+0000] {docker.py:413} INFO - 24/06/19 09:59:57 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T09:59:58.050+0000] {docker.py:413} INFO - 24/06/19 09:59:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:01.533+0000] {docker.py:413} INFO - 24/06/19 10:00:01 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:07.467+0000] {docker.py:413} INFO - 24/06/19 10:00:07 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:08.064+0000] {docker.py:413} INFO - 24/06/19 10:00:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:11.535+0000] {docker.py:413} INFO - 24/06/19 10:00:11 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:17.478+0000] {docker.py:413} INFO - 24/06/19 10:00:17 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:18.059+0000] {docker.py:413} INFO - 24/06/19 10:00:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:21.549+0000] {docker.py:413} INFO - 24/06/19 10:00:21 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:27.480+0000] {docker.py:413} INFO - 24/06/19 10:00:27 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:28.141+0000] {docker.py:413} INFO - 24/06/19 10:00:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:31.561+0000] {docker.py:413} INFO - 24/06/19 10:00:31 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:37.482+0000] {docker.py:413} INFO - 24/06/19 10:00:37 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:38.085+0000] {docker.py:413} INFO - 24/06/19 10:00:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:41.558+0000] {docker.py:413} INFO - 24/06/19 10:00:41 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:47.488+0000] {docker.py:413} INFO - 24/06/19 10:00:47 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:48.089+0000] {docker.py:413} INFO - 24/06/19 10:00:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:51.586+0000] {docker.py:413} INFO - 24/06/19 10:00:51 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:57.493+0000] {docker.py:413} INFO - 24/06/19 10:00:57 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:00:58.098+0000] {docker.py:413} INFO - 24/06/19 10:00:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:01.592+0000] {docker.py:413} INFO - 24/06/19 10:01:01 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:07.499+0000] {docker.py:413} INFO - 24/06/19 10:01:07 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:08.101+0000] {docker.py:413} INFO - 24/06/19 10:01:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:11.582+0000] {docker.py:413} INFO - 24/06/19 10:01:11 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:17.530+0000] {docker.py:413} INFO - 24/06/19 10:01:17 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:18.102+0000] {docker.py:413} INFO - 24/06/19 10:01:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:21.594+0000] {docker.py:413} INFO - 24/06/19 10:01:21 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:27.542+0000] {docker.py:413} INFO - 24/06/19 10:01:27 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:28.114+0000] {docker.py:413} INFO - 24/06/19 10:01:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:31.625+0000] {docker.py:413} INFO - 24/06/19 10:01:31 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:37.528+0000] {docker.py:413} INFO - 24/06/19 10:01:37 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:38.122+0000] {docker.py:413} INFO - 24/06/19 10:01:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:41.624+0000] {docker.py:413} INFO - 24/06/19 10:01:41 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:47.533+0000] {docker.py:413} INFO - 24/06/19 10:01:47 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:48.115+0000] {docker.py:413} INFO - 24/06/19 10:01:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:51.641+0000] {docker.py:413} INFO - 24/06/19 10:01:51 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:57.548+0000] {docker.py:413} INFO - 24/06/19 10:01:57 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:01:58.115+0000] {docker.py:413} INFO - 24/06/19 10:01:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:01.651+0000] {docker.py:413} INFO - 24/06/19 10:02:01 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:07.560+0000] {docker.py:413} INFO - 24/06/19 10:02:07 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:08.116+0000] {docker.py:413} INFO - 24/06/19 10:02:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:11.651+0000] {docker.py:413} INFO - 24/06/19 10:02:11 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:17.572+0000] {docker.py:413} INFO - 24/06/19 10:02:17 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:18.127+0000] {docker.py:413} INFO - 24/06/19 10:02:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:21.663+0000] {docker.py:413} INFO - 24/06/19 10:02:21 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:27.576+0000] {docker.py:413} INFO - 24/06/19 10:02:27 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:28.211+0000] {docker.py:413} INFO - 24/06/19 10:02:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:32.235+0000] {docker.py:413} INFO - 24/06/19 10:02:32 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:34.544+0000] {docker.py:413} INFO - 24/06/19 10:02:34 INFO NetworkClient: [AdminClient clientId=adminclient-1] Node -1 disconnected.
24/06/19 10:02:34 INFO NetworkClient: [AdminClient clientId=adminclient-2] Node -1 disconnected.
[2024-06-19T10:02:34.547+0000] {docker.py:413} INFO - 24/06/19 10:02:34 INFO NetworkClient: [AdminClient clientId=adminclient-3] Node -1 disconnected.
[2024-06-19T10:02:37.573+0000] {docker.py:413} INFO - 24/06/19 10:02:37 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:38.194+0000] {docker.py:413} INFO - 24/06/19 10:02:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:42.136+0000] {docker.py:413} INFO - 24/06/19 10:02:42 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:47.585+0000] {docker.py:413} INFO - 24/06/19 10:02:47 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:48.213+0000] {docker.py:413} INFO - 24/06/19 10:02:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:52.289+0000] {docker.py:413} INFO - 24/06/19 10:02:52 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:57.638+0000] {docker.py:413} INFO - 24/06/19 10:02:57 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:02:58.234+0000] {docker.py:413} INFO - 24/06/19 10:02:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:02.208+0000] {docker.py:413} INFO - 24/06/19 10:03:02 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:07.604+0000] {docker.py:413} INFO - 24/06/19 10:03:07 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:08.282+0000] {docker.py:413} INFO - 24/06/19 10:03:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:12.265+0000] {docker.py:413} INFO - 24/06/19 10:03:12 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:17.609+0000] {docker.py:413} INFO - 24/06/19 10:03:17 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:18.286+0000] {docker.py:413} INFO - 24/06/19 10:03:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:22.216+0000] {docker.py:413} INFO - 24/06/19 10:03:22 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:27.618+0000] {docker.py:413} INFO - 24/06/19 10:03:27 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:28.295+0000] {docker.py:413} INFO - 24/06/19 10:03:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:32.226+0000] {docker.py:413} INFO - 24/06/19 10:03:32 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:37.620+0000] {docker.py:413} INFO - 24/06/19 10:03:37 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:38.305+0000] {docker.py:413} INFO - 24/06/19 10:03:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:42.233+0000] {docker.py:413} INFO - 24/06/19 10:03:42 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:47.638+0000] {docker.py:413} INFO - 24/06/19 10:03:47 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:48.304+0000] {docker.py:413} INFO - 24/06/19 10:03:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:52.255+0000] {docker.py:413} INFO - 24/06/19 10:03:52 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:57.640+0000] {docker.py:413} INFO - 24/06/19 10:03:57 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:03:58.314+0000] {docker.py:413} INFO - 24/06/19 10:03:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:02.262+0000] {docker.py:413} INFO - 24/06/19 10:04:02 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:07.643+0000] {docker.py:413} INFO - 24/06/19 10:04:07 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:08.315+0000] {docker.py:413} INFO - 24/06/19 10:04:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:12.261+0000] {docker.py:413} INFO - 24/06/19 10:04:12 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:17.665+0000] {docker.py:413} INFO - 24/06/19 10:04:17 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:18.321+0000] {docker.py:413} INFO - 24/06/19 10:04:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:22.278+0000] {docker.py:413} INFO - 24/06/19 10:04:22 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:27.667+0000] {docker.py:413} INFO - 24/06/19 10:04:27 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:28.319+0000] {docker.py:413} INFO - 24/06/19 10:04:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:32.282+0000] {docker.py:413} INFO - 24/06/19 10:04:32 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:35.698+0000] {docker.py:413} INFO - 24/06/19 10:04:35 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/3 using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/.3.73da111b-debe-4900-9291-9c930800ff76.tmp
[2024-06-19T10:04:35.741+0000] {docker.py:413} INFO - 24/06/19 10:04:35 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/.3.73da111b-debe-4900-9291-9c930800ff76.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/3
[2024-06-19T10:04:35.743+0000] {docker.py:413} INFO - 24/06/19 10:04:35 INFO MicroBatchExecution: Committed offsets for batch 3. Metadata OffsetSeqMetadata(0,1718791475593,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T10:04:35.924+0000] {docker.py:413} INFO - 24/06/19 10:04:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:35.935+0000] {docker.py:413} INFO - 24/06/19 10:04:35 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:36.043+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:36.052+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:36.353+0000] {docker.py:413} INFO - 2024-06-19 10:04:36,333:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T10:04:36.816+0000] {docker.py:413} INFO - 2024-06-19 10:04:36,813:write_to_postgres:ERROR:Error writing batch 3 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T10:04:36.838+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/3 using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/.3.3b016d90-73a2-4917-91d6-1ed00b909ebb.tmp
[2024-06-19T10:04:36.907+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/.3.3b016d90-73a2-4917-91d6-1ed00b909ebb.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/3
[2024-06-19T10:04:36.917+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "faa549f3-6a1f-4709-8428-8c863ed65aa6",
  "runId" : "38e3219e-4117-45e9-9a8d-5637459c3cdf",
  "name" : null,
  "timestamp" : "2024-06-19T10:04:35.592Z",
  "batchId" : 3,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 866,
    "commitOffsets" : 90,
    "getBatch" : 0,
    "latestOffset" : 1,
    "queryPlanning" : 190,
    "triggerExecution" : 1313,
    "walCommit" : 147
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : {
      "elements" : {
        "0" : 31140
      }
    },
    "endOffset" : {
      "elements" : {
        "0" : 31154
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 31154
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T10:04:36.930+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/4 using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/.4.72fb09ee-94fa-4ebd-953e-ca25f6d72990.tmp
[2024-06-19T10:04:36.963+0000] {docker.py:413} INFO - 24/06/19 10:04:36 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/.4.72fb09ee-94fa-4ebd-953e-ca25f6d72990.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/offsets/4
24/06/19 10:04:36 INFO MicroBatchExecution: Committed offsets for batch 4. Metadata OffsetSeqMetadata(0,1718791476916,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T10:04:37.005+0000] {docker.py:413} INFO - 24/06/19 10:04:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:37.024+0000] {docker.py:413} INFO - 24/06/19 10:04:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:37.082+0000] {docker.py:413} INFO - 24/06/19 10:04:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:37.086+0000] {docker.py:413} INFO - 24/06/19 10:04:37 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:37.524+0000] {docker.py:413} INFO - 2024-06-19 10:04:37,498:wait_for_commands:INFO:Received command c on object id p0
[2024-06-19T10:04:38.270+0000] {docker.py:413} INFO - 2024-06-19 10:04:38,248:write_to_postgres:ERROR:Error writing batch 4 to fixtures: Column chance_of_playing_next_round not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T10:04:38.335+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:38.338+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/4 using temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/.4.d13d9a77-2439-484b-a304-a6f4eddb97e9.tmp
[2024-06-19T10:04:38.468+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/.4.d13d9a77-2439-484b-a304-a6f4eddb97e9.tmp to file:/tmp/temporary-faeeef79-e403-44b2-b5bd-0def8dc30ce5/commits/4
[2024-06-19T10:04:38.500+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "faa549f3-6a1f-4709-8428-8c863ed65aa6",
  "runId" : "38e3219e-4117-45e9-9a8d-5637459c3cdf",
  "name" : null,
  "timestamp" : "2024-06-19T10:04:36.914Z",
  "batchId" : 4,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 1190,
    "commitOffsets" : 215,
    "getBatch" : 0,
    "latestOffset" : 2,
    "queryPlanning" : 83,
    "triggerExecution" : 1553,
    "walCommit" : 45
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[elements]]",
    "startOffset" : {
      "elements" : {
        "0" : 31154
      }
    },
    "endOffset" : {
      "elements" : {
        "0" : 32005
      }
    },
    "latestOffset" : {
      "elements" : {
        "0" : 32005
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T10:04:38.785+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/2 using temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/.2.b29a9070-1772-40b7-b282-41e4765492a3.tmp
[2024-06-19T10:04:38.852+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/.2.b29a9070-1772-40b7-b282-41e4765492a3.tmp to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/offsets/2
[2024-06-19T10:04:38.856+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO MicroBatchExecution: Committed offsets for batch 2. Metadata OffsetSeqMetadata(0,1718791478756,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T10:04:38.951+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:38.956+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:38.983+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:38.984+0000] {docker.py:413} INFO - 24/06/19 10:04:38 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:39.074+0000] {docker.py:413} INFO - 2024-06-19 10:04:39,067:wait_for_commands:INFO:Received command c on object id p1
[2024-06-19T10:04:39.268+0000] {docker.py:413} INFO - 2024-06-19 10:04:39,265:write_to_postgres:ERROR:Error writing batch 2 to fixtures: Column draw not found in schema Some(StructType(StructField(code,StringType,true),StructField(event,StringType,true),StructField(finished,StringType,true),StructField(finished_provisional,StringType,true),StructField(id,StringType,true),StructField(kickoff_time,StringType,true),StructField(minutes,StringType,true),StructField(provisional_start_time,StringType,true),StructField(started,StringType,true),StructField(team_a,StringType,true),StructField(team_a_score,StringType,true),StructField(team_h,StringType,true),StructField(team_h_score,StringType,true),StructField(stats,StringType,true),StructField(team_h_difficulty,StringType,true),StructField(team_a_difficulty,StringType,true),StructField(pulse_id,StringType,true))).
[2024-06-19T10:04:39.277+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/2 using temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/.2.500280bf-102f-47ee-9491-3786df1e53e6.tmp
[2024-06-19T10:04:39.309+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/.2.500280bf-102f-47ee-9491-3786df1e53e6.tmp to file:/tmp/temporary-bc7d5738-41d8-4baa-bd68-4ef85e0c2519/commits/2
[2024-06-19T10:04:39.310+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "b2bc167d-5111-458b-8a3b-ff964a13091c",
  "runId" : "97768c15-23a1-45a1-9c98-46a65a9fcf35",
  "name" : null,
  "timestamp" : "2024-06-19T10:04:38.747Z",
  "batchId" : 2,
  "numInputRows" : 0,
  "inputRowsPerSecond" : 0.0,
  "processedRowsPerSecond" : 0.0,
  "durationMs" : {
    "addBatch" : 301,
    "commitOffsets" : 41,
    "getBatch" : 0,
    "latestOffset" : 8,
    "queryPlanning" : 97,
    "triggerExecution" : 560,
    "walCommit" : 100
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[teams]]",
    "startOffset" : {
      "teams" : {
        "0" : 720
      }
    },
    "endOffset" : {
      "teams" : {
        "0" : 740
      }
    },
    "latestOffset" : {
      "teams" : {
        "0" : 740
      }
    },
    "numInputRows" : 0,
    "inputRowsPerSecond" : 0.0,
    "processedRowsPerSecond" : 0.0,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T10:04:39.360+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/3 using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/.3.c849507f-bfbe-4a5f-a181-c32be0402276.tmp
[2024-06-19T10:04:39.390+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/.3.c849507f-bfbe-4a5f-a181-c32be0402276.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/3
24/06/19 10:04:39 INFO MicroBatchExecution: Committed offsets for batch 3. Metadata OffsetSeqMetadata(0,1718791479349,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T10:04:39.430+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:39.438+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:39.482+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:39.488+0000] {docker.py:413} INFO - 24/06/19 10:04:39 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:39.549+0000] {docker.py:413} INFO - 2024-06-19 10:04:39,545:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T10:04:40.494+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-19T10:04:40.600+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO DAGScheduler: Got job 3 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/06/19 10:04:40 INFO DAGScheduler: Final stage: ResultStage 3 (start at NativeMethodAccessorImpl.java:0)
24/06/19 10:04:40 INFO DAGScheduler: Parents of final stage: List()
[2024-06-19T10:04:40.650+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO DAGScheduler: Missing parents: List()
[2024-06-19T10:04:40.666+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO DAGScheduler: Submitting ResultStage 3 (MapPartitionsRDD[75] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T10:04:40.860+0000] {docker.py:413} INFO - 24/06/19 10:04:40 INFO MemoryStore: Block broadcast_3 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T10:04:41.014+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO MemoryStore: Block broadcast_3_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T10:04:41.032+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO BlockManagerInfo: Added broadcast_3_piece0 in memory on localhost:34605 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T10:04:41.048+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO SparkContext: Created broadcast 3 from broadcast at DAGScheduler.scala:1580
[2024-06-19T10:04:41.052+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 3 (MapPartitionsRDD[75] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-06-19T10:04:41.053+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO TaskSchedulerImpl: Adding task set 3.0 with 1 tasks resource profile 0
[2024-06-19T10:04:41.098+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO TaskSetManager: Starting task 0.0 in stage 3.0 (TID 3) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11069 bytes)
[2024-06-19T10:04:41.106+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO Executor: Running task 0.0 in stage 3.0 (TID 3)
[2024-06-19T10:04:41.361+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=13680 untilOffset=13708, for query queryId=cd67e404-140c-4123-a627-0e5eab47d36e batchId=3 taskId=3 partitionId=0
[2024-06-19T10:04:41.385+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to offset 13680 for partition fixtures-0
[2024-06-19T10:04:41.410+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to earliest offset of partition fixtures-0
[2024-06-19T10:04:41.923+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=8360, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T10:04:41.931+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Seeking to latest offset of partition fixtures-0
[2024-06-19T10:04:41.932+0000] {docker.py:413} INFO - 24/06/19 10:04:41 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor-1, groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor] Resetting offset for partition fixtures-0 to position FetchPosition{offset=14060, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=16}}.
[2024-06-19T10:04:42.088+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor read 28 records through 1 polls (polled  out 380 records), taking 544981583 nanos, during time span of 705259084 nanos.
[2024-06-19T10:04:42.115+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO Executor: Finished task 0.0 in stage 3.0 (TID 3). 1731 bytes result sent to driver
[2024-06-19T10:04:42.122+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO TaskSetManager: Finished task 0.0 in stage 3.0 (TID 3) in 1055 ms on localhost (executor driver) (1/1)
[2024-06-19T10:04:42.125+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO TaskSchedulerImpl: Removed TaskSet 3.0, whose tasks have all completed, from pool
[2024-06-19T10:04:42.128+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO DAGScheduler: ResultStage 3 (start at NativeMethodAccessorImpl.java:0) finished in 1.430 s
[2024-06-19T10:04:42.130+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO DAGScheduler: Job 3 is finished. Cancelling potential speculative or zombie tasks for this job
[2024-06-19T10:04:42.133+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO TaskSchedulerImpl: Killing all running tasks in stage 3: Stage finished
[2024-06-19T10:04:42.135+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO DAGScheduler: Job 3 finished: start at NativeMethodAccessorImpl.java:0, took 1.650050 s
[2024-06-19T10:04:42.506+0000] {docker.py:413} INFO - 2024-06-19 10:04:42,502:write_to_postgres:INFO:Batch 3 written to fixtures successfully.
[2024-06-19T10:04:42.528+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/3 using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/.3.b6a45803-5223-4b4e-b99f-e52ce81a0fa7.tmp
[2024-06-19T10:04:42.596+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/.3.b6a45803-5223-4b4e-b99f-e52ce81a0fa7.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/3
[2024-06-19T10:04:42.606+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "cd67e404-140c-4123-a627-0e5eab47d36e",
  "runId" : "d79516f9-4715-4dd6-8ab3-7d07618208e5",
  "name" : null,
  "timestamp" : "2024-06-19T10:04:39.347Z",
  "batchId" : 3,
  "numInputRows" : 28,
  "inputRowsPerSecond" : 2333.3333333333335,
  "processedRowsPerSecond" : 8.62334462580844,
  "durationMs" : {
    "addBatch" : 3059,
    "commitOffsets" : 90,
    "getBatch" : 0,
    "latestOffset" : 2,
    "queryPlanning" : 53,
    "triggerExecution" : 3247,
    "walCommit" : 39
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : {
      "fixtures" : {
        "0" : 13680
      }
    },
    "endOffset" : {
      "fixtures" : {
        "0" : 13708
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 13708
      }
    },
    "numInputRows" : 28,
    "inputRowsPerSecond" : 2333.3333333333335,
    "processedRowsPerSecond" : 8.62334462580844,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T10:04:42.622+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/4 using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/.4.b3da6047-4c17-4113-88cb-24623173fd8b.tmp
[2024-06-19T10:04:42.734+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/.4.b3da6047-4c17-4113-88cb-24623173fd8b.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/offsets/4
[2024-06-19T10:04:42.744+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO MicroBatchExecution: Committed offsets for batch 4. Metadata OffsetSeqMetadata(0,1718791482606,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-19T10:04:42.876+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:42.888+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:42.914+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:42.921+0000] {docker.py:413} INFO - 24/06/19 10:04:42 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-19T10:04:43.002+0000] {docker.py:413} INFO - 2024-06-19 10:04:42,999:wait_for_commands:INFO:Received command c on object id p2
[2024-06-19T10:04:43.354+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-19T10:04:43.378+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO DAGScheduler: Got job 4 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2024-06-19T10:04:43.384+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO DAGScheduler: Final stage: ResultStage 4 (start at NativeMethodAccessorImpl.java:0)
24/06/19 10:04:43 INFO DAGScheduler: Parents of final stage: List()
[2024-06-19T10:04:43.403+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO DAGScheduler: Missing parents: List()
[2024-06-19T10:04:43.405+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO DAGScheduler: Submitting ResultStage 4 (MapPartitionsRDD[84] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-19T10:04:43.407+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO MemoryStore: Block broadcast_4 stored as values in memory (estimated size 51.3 KiB, free 434.3 MiB)
[2024-06-19T10:04:43.428+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO MemoryStore: Block broadcast_4_piece0 stored as bytes in memory (estimated size 19.5 KiB, free 434.3 MiB)
[2024-06-19T10:04:43.432+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO BlockManagerInfo: Added broadcast_4_piece0 in memory on localhost:34605 (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T10:04:43.442+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO SparkContext: Created broadcast 4 from broadcast at DAGScheduler.scala:1580
[2024-06-19T10:04:43.449+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 4 (MapPartitionsRDD[84] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-06-19T10:04:43.451+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO TaskSchedulerImpl: Adding task set 4.0 with 1 tasks resource profile 0
[2024-06-19T10:04:43.467+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO TaskSetManager: Starting task 0.0 in stage 4.0 (TID 4) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11069 bytes)
[2024-06-19T10:04:43.506+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO Executor: Running task 0.0 in stage 4.0 (TID 4)
[2024-06-19T10:04:43.568+0000] {docker.py:413} INFO - 24/06/19 10:04:43 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=fixtures-0 fromOffset=13708 untilOffset=14060, for query queryId=cd67e404-140c-4123-a627-0e5eab47d36e batchId=4 taskId=4 partitionId=0
[2024-06-19T10:04:44.049+0000] {docker.py:413} INFO - 24/06/19 10:04:44 INFO KafkaDataConsumer: From Kafka topicPartition=fixtures-0 groupId=spark-kafka-source-0b180688-9066-4f19-a32a-13f80f3cadaa--1306574664-executor read 352 records through 0 polls (polled  out 0 records), taking 0 nanos, during time span of 446407042 nanos.
[2024-06-19T10:04:44.069+0000] {docker.py:413} INFO - 24/06/19 10:04:44 INFO Executor: Finished task 0.0 in stage 4.0 (TID 4). 1731 bytes result sent to driver
[2024-06-19T10:04:44.076+0000] {docker.py:413} INFO - 24/06/19 10:04:44 INFO TaskSetManager: Finished task 0.0 in stage 4.0 (TID 4) in 607 ms on localhost (executor driver) (1/1)
[2024-06-19T10:04:44.078+0000] {docker.py:413} INFO - 24/06/19 10:04:44 INFO TaskSchedulerImpl: Removed TaskSet 4.0, whose tasks have all completed, from pool
[2024-06-19T10:04:44.094+0000] {docker.py:413} INFO - 24/06/19 10:04:44 INFO DAGScheduler: ResultStage 4 (start at NativeMethodAccessorImpl.java:0) finished in 0.711 s
24/06/19 10:04:44 INFO DAGScheduler: Job 4 is finished. Cancelling potential speculative or zombie tasks for this job
24/06/19 10:04:44 INFO TaskSchedulerImpl: Killing all running tasks in stage 4: Stage finished
24/06/19 10:04:44 INFO DAGScheduler: Job 4 finished: start at NativeMethodAccessorImpl.java:0, took 0.733947 s
[2024-06-19T10:04:44.160+0000] {docker.py:413} INFO - 2024-06-19 10:04:44,156:write_to_postgres:INFO:Batch 4 written to fixtures successfully.
[2024-06-19T10:04:44.173+0000] {docker.py:413} INFO - 24/06/19 10:04:44 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/4 using temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/.4.b44b195a-4b38-4dca-86b8-cc665e801d23.tmp
[2024-06-19T10:04:44.233+0000] {docker.py:413} INFO - 24/06/19 10:04:44 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/.4.b44b195a-4b38-4dca-86b8-cc665e801d23.tmp to file:/tmp/temporary-eba72da9-03d4-43e4-b340-00128ff344ac/commits/4
[2024-06-19T10:04:44.250+0000] {docker.py:413} INFO - 24/06/19 10:04:44 INFO MicroBatchExecution: Streaming query made progress: {
  "id" : "cd67e404-140c-4123-a627-0e5eab47d36e",
  "runId" : "d79516f9-4715-4dd6-8ab3-7d07618208e5",
  "name" : null,
  "timestamp" : "2024-06-19T10:04:42.603Z",
  "batchId" : 4,
  "numInputRows" : 352,
  "inputRowsPerSecond" : 108.10810810810811,
  "processedRowsPerSecond" : 218.90547263681592,
  "durationMs" : {
    "addBatch" : 1259,
    "commitOffsets" : 53,
    "getBatch" : 0,
    "latestOffset" : 3,
    "queryPlanning" : 133,
    "triggerExecution" : 1608,
    "walCommit" : 139
  },
  "stateOperators" : [ ],
  "sources" : [ {
    "description" : "KafkaV2[Subscribe[fixtures]]",
    "startOffset" : {
      "fixtures" : {
        "0" : 13708
      }
    },
    "endOffset" : {
      "fixtures" : {
        "0" : 14060
      }
    },
    "latestOffset" : {
      "fixtures" : {
        "0" : 14060
      }
    },
    "numInputRows" : 352,
    "inputRowsPerSecond" : 108.10810810810811,
    "processedRowsPerSecond" : 218.90547263681592,
    "metrics" : {
      "avgOffsetsBehindLatest" : "0.0",
      "maxOffsetsBehindLatest" : "0",
      "minOffsetsBehindLatest" : "0"
    }
  } ],
  "sink" : {
    "description" : "ForeachBatchSink",
    "numOutputRows" : -1
  }
}
[2024-06-19T10:04:48.490+0000] {docker.py:413} INFO - 24/06/19 10:04:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:49.315+0000] {docker.py:413} INFO - 24/06/19 10:04:49 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:50.922+0000] {docker.py:413} INFO - 24/06/19 10:04:50 INFO BlockManagerInfo: Removed broadcast_4_piece0 on localhost:34605 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T10:04:50.926+0000] {docker.py:413} INFO - 24/06/19 10:04:50 INFO BlockManagerInfo: Removed broadcast_3_piece0 on localhost:34605 in memory (size: 19.5 KiB, free: 434.4 MiB)
[2024-06-19T10:04:54.391+0000] {docker.py:413} INFO - 24/06/19 10:04:54 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:58.492+0000] {docker.py:413} INFO - 24/06/19 10:04:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:04:59.317+0000] {docker.py:413} INFO - 24/06/19 10:04:59 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:04.260+0000] {docker.py:413} INFO - 24/06/19 10:05:04 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:08.496+0000] {docker.py:413} INFO - 24/06/19 10:05:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:09.318+0000] {docker.py:413} INFO - 24/06/19 10:05:09 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:14.272+0000] {docker.py:413} INFO - 24/06/19 10:05:14 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:18.501+0000] {docker.py:413} INFO - 24/06/19 10:05:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:19.321+0000] {docker.py:413} INFO - 24/06/19 10:05:19 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:24.354+0000] {docker.py:413} INFO - 24/06/19 10:05:24 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:28.508+0000] {docker.py:413} INFO - 24/06/19 10:05:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:29.327+0000] {docker.py:413} INFO - 24/06/19 10:05:29 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:34.288+0000] {docker.py:413} INFO - 24/06/19 10:05:34 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:38.516+0000] {docker.py:413} INFO - 24/06/19 10:05:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:39.340+0000] {docker.py:413} INFO - 24/06/19 10:05:39 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:44.333+0000] {docker.py:413} INFO - 24/06/19 10:05:44 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:48.515+0000] {docker.py:413} INFO - 24/06/19 10:05:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:49.358+0000] {docker.py:413} INFO - 24/06/19 10:05:49 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:54.508+0000] {docker.py:413} INFO - 24/06/19 10:05:54 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:58.561+0000] {docker.py:413} INFO - 24/06/19 10:05:58 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:05:59.354+0000] {docker.py:413} INFO - 24/06/19 10:05:59 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:04.384+0000] {docker.py:413} INFO - 24/06/19 10:06:04 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:08.558+0000] {docker.py:413} INFO - 24/06/19 10:06:08 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:09.397+0000] {docker.py:413} INFO - 24/06/19 10:06:09 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:14.390+0000] {docker.py:413} INFO - 24/06/19 10:06:14 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:18.567+0000] {docker.py:413} INFO - 24/06/19 10:06:18 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:19.393+0000] {docker.py:413} INFO - 24/06/19 10:06:19 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:24.394+0000] {docker.py:413} INFO - 24/06/19 10:06:24 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:28.571+0000] {docker.py:413} INFO - 24/06/19 10:06:28 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:29.423+0000] {docker.py:413} INFO - 24/06/19 10:06:29 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:34.397+0000] {docker.py:413} INFO - 24/06/19 10:06:34 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:38.638+0000] {docker.py:413} INFO - 24/06/19 10:06:38 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:39.420+0000] {docker.py:413} INFO - 24/06/19 10:06:39 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:44.398+0000] {docker.py:413} INFO - 24/06/19 10:06:44 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:48.593+0000] {docker.py:413} INFO - 24/06/19 10:06:48 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:49.427+0000] {docker.py:413} INFO - 24/06/19 10:06:49 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:55.162+0000] {docker.py:413} INFO - 24/06/19 10:06:55 INFO MicroBatchExecution: Streaming query has been idle and waiting for new data more than 10000 ms.
[2024-06-19T10:06:53.422+0000] {local_task_job_runner.py:115} ERROR - Received SIGTERM. Terminating subprocesses
[2024-06-19T10:06:55.335+0000] {process_utils.py:131} INFO - Sending 15 to group 1401. PIDs of all processes in the group: [1401]
[2024-06-19T10:06:55.398+0000] {process_utils.py:86} INFO - Sending the signal 15 to group 1401
[2024-06-19T10:06:55.447+0000] {taskinstance.py:1632} ERROR - Received SIGTERM. Terminating subprocesses.
[2024-06-19T10:06:55.472+0000] {docker.py:505} INFO - Stopping docker container
[2024-06-19T10:07:00.888+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 268, in _raise_for_status
    response.raise_for_status()
  File "/home/airflow/.local/lib/python3.8/site-packages/requests/models.py", line 1021, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://docker-proxy:2375/v1.44/containers/create

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 348, in _run_image
    return self._run_image_with_mounts([*self.mounts, tmp_mount], add_tmp_variable=True)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 375, in _run_image_with_mounts
    self.container = self.cli.create_container(
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/container.py", line 431, in create_container
    return self.create_container_from_config(config, name, platform)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/container.py", line 448, in create_container_from_config
    return self._result(res, True)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 274, in _result
    self._raise_for_status(response)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 270, in _raise_for_status
    raise create_api_error_from_http_exception(e) from e
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/errors.py", line 39, in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation) from e
docker.errors.APIError: 400 Client Error for http://docker-proxy:2375/v1.44/containers/create: Bad Request ("invalid mount config for type "bind": bind source path does not exist: /host_mnt/private/tmp/airflowtmpvhnzaupy")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 486, in execute
    return self._run_image()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 357, in _run_image
    return self._run_image_with_mounts(self.mounts, add_tmp_variable=False)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 410, in _run_image_with_mounts
    for log_chunk in logstream:
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/types/daemon.py", line 29, in __next__
    return next(self._stream)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 422, in <genexpr>
    gen = (data for (_, data) in gen)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/utils/socket.py", line 112, in frames_iter_no_tty
    (stream, n) = next_frame_header(socket)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/utils/socket.py", line 84, in next_frame_header
    data = read_exactly(socket, 8)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/utils/socket.py", line 69, in read_exactly
    next_data = read(socket, n - len(data))
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/utils/socket.py", line 40, in read
    poll.poll()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 1634, in signal_handler
    raise AirflowException("Task received SIGTERM signal")
airflow.exceptions.AirflowException: Task received SIGTERM signal
[2024-06-19T10:07:00.924+0000] {taskinstance.py:1400} INFO - Marking task as UP_FOR_RETRY. dag_id=kafka_spark_dag, task_id=pyspark_consumer, execution_date=20240619T095644, start_date=20240619T095650, end_date=20240619T100700
[2024-06-19T10:07:01.008+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 155 for task pyspark_consumer (Task received SIGTERM signal; 1401)
[2024-06-19T10:07:01.075+0000] {process_utils.py:79} INFO - Process psutil.Process(pid=1401, status='terminated', exitcode=1, started='09:56:49') (1401) terminated with exit code 1
[2024-06-19T10:07:01.104+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 143
[2024-06-19T10:07:01.583+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
